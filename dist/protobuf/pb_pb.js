// source: pb.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.io.haveno.protobuffer.AccountAgeWitness', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AccountAgeWitnessStore', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AchTransferAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AckMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AddDataMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AddressEntry', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AddressEntry.Context', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AddressEntryList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AdvancedCashAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Alert', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AliPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ArbitrationDisputeList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Arbitrator', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ArbitratorTrade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Attachment', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AustraliaPayidPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AutoConfirmSettings', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.AvailabilityResult', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BankAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BankAccountPayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BizumAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BlockChainExplorer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BundleOfEnvelopes', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BuyerAsMakerTrade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.BuyerAsTakerTrade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ByteArray', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CapitualAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CashAppAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CashAtAtmAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CashDepositAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CelPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ChatMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CloseConnectionMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Contract', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Country', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CryptoCurrency', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Currency', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DataAndSeqNrPair', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DecryptedMessageWithPubKey', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DepositRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DepositResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DepositsConfirmedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Dispute', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Dispute.State', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeClosedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeOpenedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeResult', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeResult.Reason', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DisputeResult.Winner', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.EncryptedConnection', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.EncryptedConnectionList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.F2FAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.FasterPaymentsAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Filter', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetDataResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetInventoryRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetInventoryResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetPeersRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetPeersResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.GetUpdatedDataRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.HalCashAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.IfscBasedAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.IfscBasedAccountPayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.IgnoredMailboxMap', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ImpsAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.InitMultisigRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.InitTradeRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.InteracETransferAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.JapanBankAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MailboxItem', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MailboxMessageList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MailboxStoragePayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MapValue', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MarketAlertFilter', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MediationDisputeList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MediationResultState', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Mediator', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MockMailboxPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MockPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MoneseAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MoneyBeamAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.MoneyGramAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NationalBankAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NavigationPath', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NeftAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NequiAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NetworkEnvelope', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NetworkEnvelope.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.NodeAddress', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OKPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Offer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Offer.State', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OfferAvailabilityRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OfferAvailabilityResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OfferDirection', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OfferPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OpenOffer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.OpenOffer.State', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaxumAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PayByMailAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccount', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountFilter', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountForm', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountForm.FormId', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountFormField', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountFormField.Component', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentAccountPayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentMethod', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentReceivedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaymentSentMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PayseraAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PaytmAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Peer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PeerList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PerfectMoneyAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PersistableEnvelope', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PersistableEnvelope.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PersistableNetworkPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PersistableNetworkPayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Ping', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PixAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Pong', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PopmoneyAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PreferencesPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PreliminaryGetDataRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PriceAlertFilter', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PrivateNotificationMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PrivateNotificationPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ProcessModel', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PromptPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ProtectedStorageEntry', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.PubKeyRing', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RawTransactionInput', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RefreshOfferMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RefundAgent', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RefundDisputeList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RefundResultState', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Region', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RemoveDataMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RemoveMailboxDataMessage', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RemovedPayloadsMap', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RevolutAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.RtgsAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SameBankAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SatispayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SealedAndSigned', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SellerAsMakerTrade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SellerAsTakerTrade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SepaAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SepaInstantAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SequenceNumberEntry', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SequenceNumberMap', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignContractRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignContractResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignOfferRequest', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignOfferResponse', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignedOffer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignedOfferList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignedWitness', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignedWitness.VerificationMethod', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SignedWitnessStore', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SpecificBanksAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.StorageEntryWrapper', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.StorageEntryWrapper.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.StoragePayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.StoragePayload.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.StrikeAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SupportType', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SwiftAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.SwishAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TikkieAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Tradable', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Tradable.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradableList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade.DisputeState', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade.PayoutState', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade.Phase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade.State', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.Trade.TradePeriodState', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradeCurrency', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradeCurrency.MessageCase', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradePeer', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradeStatistics3', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TradeStatistics3Store', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TraditionalCurrency', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TransferwiseAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.UpholdAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.UpiAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.UserPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.VenmoAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.VerseAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.WeChatPayAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.WesternUnionAccountPayload', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.XmrAddressEntry', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.XmrAddressEntry.Context', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.XmrAddressEntryList', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.XmrNodeSettings', null, global);
goog.exportSymbol('proto.io.haveno.protobuffer.ZelleAccountPayload', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NetworkEnvelope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.NetworkEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NetworkEnvelope.displayName = 'proto.io.haveno.protobuffer.NetworkEnvelope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.BundleOfEnvelopes.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.BundleOfEnvelopes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BundleOfEnvelopes.displayName = 'proto.io.haveno.protobuffer.BundleOfEnvelopes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PreliminaryGetDataRequest.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PreliminaryGetDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PreliminaryGetDataRequest.displayName = 'proto.io.haveno.protobuffer.PreliminaryGetDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.GetDataResponse.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetDataResponse.displayName = 'proto.io.haveno.protobuffer.GetDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.GetUpdatedDataRequest.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetUpdatedDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetUpdatedDataRequest.displayName = 'proto.io.haveno.protobuffer.GetUpdatedDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetPeersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.GetPeersRequest.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetPeersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetPeersRequest.displayName = 'proto.io.haveno.protobuffer.GetPeersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetPeersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.GetPeersResponse.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetPeersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetPeersResponse.displayName = 'proto.io.haveno.protobuffer.GetPeersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Ping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Ping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Ping.displayName = 'proto.io.haveno.protobuffer.Ping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Pong = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Pong, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Pong.displayName = 'proto.io.haveno.protobuffer.Pong';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetInventoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetInventoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetInventoryRequest.displayName = 'proto.io.haveno.protobuffer.GetInventoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.GetInventoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.GetInventoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.GetInventoryResponse.displayName = 'proto.io.haveno.protobuffer.GetInventoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignOfferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SignOfferRequest.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignOfferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignOfferRequest.displayName = 'proto.io.haveno.protobuffer.SignOfferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignOfferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignOfferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignOfferResponse.displayName = 'proto.io.haveno.protobuffer.SignOfferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.OfferAvailabilityRequest.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.OfferAvailabilityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.OfferAvailabilityRequest.displayName = 'proto.io.haveno.protobuffer.OfferAvailabilityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.OfferAvailabilityResponse.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.OfferAvailabilityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.OfferAvailabilityResponse.displayName = 'proto.io.haveno.protobuffer.OfferAvailabilityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RefreshOfferMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RefreshOfferMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RefreshOfferMessage.displayName = 'proto.io.haveno.protobuffer.RefreshOfferMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AddDataMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AddDataMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AddDataMessage.displayName = 'proto.io.haveno.protobuffer.AddDataMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RemoveDataMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RemoveDataMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RemoveDataMessage.displayName = 'proto.io.haveno.protobuffer.RemoveDataMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RemoveMailboxDataMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RemoveMailboxDataMessage.displayName = 'proto.io.haveno.protobuffer.RemoveMailboxDataMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.displayName = 'proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CloseConnectionMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CloseConnectionMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CloseConnectionMessage.displayName = 'proto.io.haveno.protobuffer.CloseConnectionMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AckMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AckMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AckMessage.displayName = 'proto.io.haveno.protobuffer.AckMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.displayName = 'proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.InitTradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.InitTradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.InitTradeRequest.displayName = 'proto.io.haveno.protobuffer.InitTradeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.InitMultisigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.InitMultisigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.InitMultisigRequest.displayName = 'proto.io.haveno.protobuffer.InitMultisigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignContractRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignContractRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignContractRequest.displayName = 'proto.io.haveno.protobuffer.SignContractRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignContractResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignContractResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignContractResponse.displayName = 'proto.io.haveno.protobuffer.SignContractResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DepositRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DepositRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DepositRequest.displayName = 'proto.io.haveno.protobuffer.DepositRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DepositResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DepositResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DepositResponse.displayName = 'proto.io.haveno.protobuffer.DepositResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DepositsConfirmedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DepositsConfirmedMessage.displayName = 'proto.io.haveno.protobuffer.DepositsConfirmedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentSentMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentSentMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentSentMessage.displayName = 'proto.io.haveno.protobuffer.PaymentSentMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentReceivedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentReceivedMessage.displayName = 'proto.io.haveno.protobuffer.PaymentReceivedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.displayName = 'proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.displayName = 'proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.ChatMessage.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ChatMessage.displayName = 'proto.io.haveno.protobuffer.ChatMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DisputeOpenedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DisputeOpenedMessage.displayName = 'proto.io.haveno.protobuffer.DisputeOpenedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DisputeClosedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DisputeClosedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DisputeClosedMessage.displayName = 'proto.io.haveno.protobuffer.DisputeClosedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PrivateNotificationMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PrivateNotificationMessage.displayName = 'proto.io.haveno.protobuffer.PrivateNotificationMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NodeAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.NodeAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NodeAddress.displayName = 'proto.io.haveno.protobuffer.NodeAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Peer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Peer.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Peer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Peer.displayName = 'proto.io.haveno.protobuffer.Peer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PubKeyRing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PubKeyRing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PubKeyRing.displayName = 'proto.io.haveno.protobuffer.PubKeyRing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SealedAndSigned = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SealedAndSigned, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SealedAndSigned.displayName = 'proto.io.haveno.protobuffer.SealedAndSigned';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.StoragePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.StoragePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.StoragePayload.displayName = 'proto.io.haveno.protobuffer.StoragePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.PersistableNetworkPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PersistableNetworkPayload.displayName = 'proto.io.haveno.protobuffer.PersistableNetworkPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ProtectedStorageEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ProtectedStorageEntry.displayName = 'proto.io.haveno.protobuffer.ProtectedStorageEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.StorageEntryWrapper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.StorageEntryWrapper.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.StorageEntryWrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.StorageEntryWrapper.displayName = 'proto.io.haveno.protobuffer.StorageEntryWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.displayName = 'proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DataAndSeqNrPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DataAndSeqNrPair.displayName = 'proto.io.haveno.protobuffer.DataAndSeqNrPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MailboxMessageList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.MailboxMessageList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.MailboxMessageList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MailboxMessageList.displayName = 'proto.io.haveno.protobuffer.MailboxMessageList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RemovedPayloadsMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RemovedPayloadsMap.displayName = 'proto.io.haveno.protobuffer.RemovedPayloadsMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.IgnoredMailboxMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.IgnoredMailboxMap.displayName = 'proto.io.haveno.protobuffer.IgnoredMailboxMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MailboxItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MailboxItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MailboxItem.displayName = 'proto.io.haveno.protobuffer.MailboxItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DecryptedMessageWithPubKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.displayName = 'proto.io.haveno.protobuffer.DecryptedMessageWithPubKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PrivateNotificationPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PrivateNotificationPayload.displayName = 'proto.io.haveno.protobuffer.PrivateNotificationPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccountFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccountFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccountFilter.displayName = 'proto.io.haveno.protobuffer.PaymentAccountFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Alert = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Alert, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Alert.displayName = 'proto.io.haveno.protobuffer.Alert';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Arbitrator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Arbitrator.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Arbitrator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Arbitrator.displayName = 'proto.io.haveno.protobuffer.Arbitrator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Mediator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Mediator.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Mediator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Mediator.displayName = 'proto.io.haveno.protobuffer.Mediator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RefundAgent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.RefundAgent.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.RefundAgent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RefundAgent.displayName = 'proto.io.haveno.protobuffer.RefundAgent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Filter.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Filter.displayName = 'proto.io.haveno.protobuffer.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TradeStatistics3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.TradeStatistics3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TradeStatistics3.displayName = 'proto.io.haveno.protobuffer.TradeStatistics3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MailboxStoragePayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MailboxStoragePayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MailboxStoragePayload.displayName = 'proto.io.haveno.protobuffer.MailboxStoragePayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.OfferPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, proto.io.haveno.protobuffer.OfferPayload.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.OfferPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.OfferPayload.displayName = 'proto.io.haveno.protobuffer.OfferPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AccountAgeWitness = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AccountAgeWitness, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AccountAgeWitness.displayName = 'proto.io.haveno.protobuffer.AccountAgeWitness';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignedWitness = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignedWitness, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignedWitness.displayName = 'proto.io.haveno.protobuffer.SignedWitness';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Dispute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Dispute.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Dispute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Dispute.displayName = 'proto.io.haveno.protobuffer.Dispute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Attachment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Attachment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Attachment.displayName = 'proto.io.haveno.protobuffer.Attachment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DisputeResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DisputeResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DisputeResult.displayName = 'proto.io.haveno.protobuffer.DisputeResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Contract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Contract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Contract.displayName = 'proto.io.haveno.protobuffer.Contract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RawTransactionInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RawTransactionInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RawTransactionInput.displayName = 'proto.io.haveno.protobuffer.RawTransactionInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccountPayload.displayName = 'proto.io.haveno.protobuffer.PaymentAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AliPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AliPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AliPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.AliPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.WeChatPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.WeChatPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.WeChatPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ZelleAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ZelleAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ZelleAccountPayload.displayName = 'proto.io.haveno.protobuffer.ZelleAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.repeatedFields_, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.displayName = 'proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BankAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.BankAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BankAccountPayload.displayName = 'proto.io.haveno.protobuffer.BankAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AchTransferAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AchTransferAccountPayload.displayName = 'proto.io.haveno.protobuffer.AchTransferAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.displayName = 'proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.NationalBankAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NationalBankAccountPayload.displayName = 'proto.io.haveno.protobuffer.NationalBankAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SameBankAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SameBankAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SameBankAccountPayload.displayName = 'proto.io.haveno.protobuffer.SameBankAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.JapanBankAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.JapanBankAccountPayload.displayName = 'proto.io.haveno.protobuffer.JapanBankAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AustraliaPayidPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AustraliaPayidPayload.displayName = 'proto.io.haveno.protobuffer.AustraliaPayidPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SpecificBanksAccountPayload.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SpecificBanksAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SpecificBanksAccountPayload.displayName = 'proto.io.haveno.protobuffer.SpecificBanksAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CashDepositAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CashDepositAccountPayload.displayName = 'proto.io.haveno.protobuffer.CashDepositAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MoneyGramAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MoneyGramAccountPayload.displayName = 'proto.io.haveno.protobuffer.MoneyGramAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.HalCashAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.HalCashAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.HalCashAccountPayload.displayName = 'proto.io.haveno.protobuffer.HalCashAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.WesternUnionAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.WesternUnionAccountPayload.displayName = 'proto.io.haveno.protobuffer.WesternUnionAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.displayName = 'proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SepaAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SepaAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SepaAccountPayload.displayName = 'proto.io.haveno.protobuffer.SepaAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SepaInstantAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SepaInstantAccountPayload.displayName = 'proto.io.haveno.protobuffer.SepaInstantAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.displayName = 'proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.displayName = 'proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.FasterPaymentsAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.displayName = 'proto.io.haveno.protobuffer.FasterPaymentsAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.InteracETransferAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.InteracETransferAccountPayload.displayName = 'proto.io.haveno.protobuffer.InteracETransferAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.OKPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.OKPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.OKPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.OKPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.UpholdAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.UpholdAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.UpholdAccountPayload.displayName = 'proto.io.haveno.protobuffer.UpholdAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CashAppAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CashAppAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CashAppAccountPayload.displayName = 'proto.io.haveno.protobuffer.CashAppAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MoneyBeamAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MoneyBeamAccountPayload.displayName = 'proto.io.haveno.protobuffer.MoneyBeamAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.VenmoAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.VenmoAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.VenmoAccountPayload.displayName = 'proto.io.haveno.protobuffer.VenmoAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PopmoneyAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PopmoneyAccountPayload.displayName = 'proto.io.haveno.protobuffer.PopmoneyAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RevolutAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RevolutAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RevolutAccountPayload.displayName = 'proto.io.haveno.protobuffer.RevolutAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PerfectMoneyAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.displayName = 'proto.io.haveno.protobuffer.PerfectMoneyAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SwishAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SwishAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SwishAccountPayload.displayName = 'proto.io.haveno.protobuffer.SwishAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.displayName = 'proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.F2FAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.F2FAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.F2FAccountPayload.displayName = 'proto.io.haveno.protobuffer.F2FAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.IfscBasedAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.IfscBasedAccountPayload.displayName = 'proto.io.haveno.protobuffer.IfscBasedAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NeftAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.NeftAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NeftAccountPayload.displayName = 'proto.io.haveno.protobuffer.NeftAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RtgsAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.RtgsAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RtgsAccountPayload.displayName = 'proto.io.haveno.protobuffer.RtgsAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ImpsAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ImpsAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ImpsAccountPayload.displayName = 'proto.io.haveno.protobuffer.ImpsAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.UpiAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.UpiAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.UpiAccountPayload.displayName = 'proto.io.haveno.protobuffer.UpiAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaytmAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaytmAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaytmAccountPayload.displayName = 'proto.io.haveno.protobuffer.PaytmAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PayByMailAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PayByMailAccountPayload.displayName = 'proto.io.haveno.protobuffer.PayByMailAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CashAtAtmAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CashAtAtmAccountPayload.displayName = 'proto.io.haveno.protobuffer.CashAtAtmAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PromptPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PromptPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.PromptPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AdvancedCashAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AdvancedCashAccountPayload.displayName = 'proto.io.haveno.protobuffer.AdvancedCashAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.TransferwiseAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TransferwiseAccountPayload.displayName = 'proto.io.haveno.protobuffer.TransferwiseAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.displayName = 'proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PayseraAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PayseraAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PayseraAccountPayload.displayName = 'proto.io.haveno.protobuffer.PayseraAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaxumAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaxumAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaxumAccountPayload.displayName = 'proto.io.haveno.protobuffer.PaxumAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CapitualAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CapitualAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CapitualAccountPayload.displayName = 'proto.io.haveno.protobuffer.CapitualAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CelPayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CelPayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CelPayAccountPayload.displayName = 'proto.io.haveno.protobuffer.CelPayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NequiAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.NequiAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NequiAccountPayload.displayName = 'proto.io.haveno.protobuffer.NequiAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BizumAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.BizumAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BizumAccountPayload.displayName = 'proto.io.haveno.protobuffer.BizumAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PixAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PixAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PixAccountPayload.displayName = 'proto.io.haveno.protobuffer.PixAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MoneseAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MoneseAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MoneseAccountPayload.displayName = 'proto.io.haveno.protobuffer.MoneseAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SatispayAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SatispayAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SatispayAccountPayload.displayName = 'proto.io.haveno.protobuffer.SatispayAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.StrikeAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.StrikeAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.StrikeAccountPayload.displayName = 'proto.io.haveno.protobuffer.StrikeAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TikkieAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.TikkieAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TikkieAccountPayload.displayName = 'proto.io.haveno.protobuffer.TikkieAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.VerseAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.VerseAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.VerseAccountPayload.displayName = 'proto.io.haveno.protobuffer.VerseAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SwiftAccountPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SwiftAccountPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SwiftAccountPayload.displayName = 'proto.io.haveno.protobuffer.SwiftAccountPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PersistableEnvelope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.PersistableEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PersistableEnvelope.displayName = 'proto.io.haveno.protobuffer.PersistableEnvelope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SequenceNumberMap = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SequenceNumberMap.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SequenceNumberMap, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SequenceNumberMap.displayName = 'proto.io.haveno.protobuffer.SequenceNumberMap';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SequenceNumberEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SequenceNumberEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SequenceNumberEntry.displayName = 'proto.io.haveno.protobuffer.SequenceNumberEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ByteArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ByteArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ByteArray.displayName = 'proto.io.haveno.protobuffer.ByteArray';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MapValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MapValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MapValue.displayName = 'proto.io.haveno.protobuffer.MapValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.AccountAgeWitnessStore.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.AccountAgeWitnessStore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AccountAgeWitnessStore.displayName = 'proto.io.haveno.protobuffer.AccountAgeWitnessStore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignedWitnessStore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SignedWitnessStore.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignedWitnessStore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignedWitnessStore.displayName = 'proto.io.haveno.protobuffer.SignedWitnessStore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TradeStatistics3Store = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.TradeStatistics3Store.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.TradeStatistics3Store, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TradeStatistics3Store.displayName = 'proto.io.haveno.protobuffer.TradeStatistics3Store';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PeerList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PeerList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PeerList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PeerList.displayName = 'proto.io.haveno.protobuffer.PeerList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AddressEntryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.AddressEntryList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.AddressEntryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AddressEntryList.displayName = 'proto.io.haveno.protobuffer.AddressEntryList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AddressEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.AddressEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AddressEntry.displayName = 'proto.io.haveno.protobuffer.AddressEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.XmrAddressEntryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.XmrAddressEntryList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.XmrAddressEntryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.XmrAddressEntryList.displayName = 'proto.io.haveno.protobuffer.XmrAddressEntryList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.XmrAddressEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.XmrAddressEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.XmrAddressEntry.displayName = 'proto.io.haveno.protobuffer.XmrAddressEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.NavigationPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.NavigationPath.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.NavigationPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.NavigationPath.displayName = 'proto.io.haveno.protobuffer.NavigationPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccountList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PaymentAccountList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccountList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccountList.displayName = 'proto.io.haveno.protobuffer.PaymentAccountList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TradableList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.TradableList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.TradableList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TradableList.displayName = 'proto.io.haveno.protobuffer.TradableList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Offer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Offer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Offer.displayName = 'proto.io.haveno.protobuffer.Offer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignedOfferList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SignedOfferList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignedOfferList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignedOfferList.displayName = 'proto.io.haveno.protobuffer.SignedOfferList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SignedOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.SignedOffer.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.SignedOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SignedOffer.displayName = 'proto.io.haveno.protobuffer.SignedOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.OpenOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.OpenOffer.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.OpenOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.OpenOffer.displayName = 'proto.io.haveno.protobuffer.OpenOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Tradable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.io.haveno.protobuffer.Tradable.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.Tradable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Tradable.displayName = 'proto.io.haveno.protobuffer.Tradable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Trade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.Trade.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.Trade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Trade.displayName = 'proto.io.haveno.protobuffer.Trade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.BuyerAsMakerTrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BuyerAsMakerTrade.displayName = 'proto.io.haveno.protobuffer.BuyerAsMakerTrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.BuyerAsTakerTrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BuyerAsTakerTrade.displayName = 'proto.io.haveno.protobuffer.BuyerAsTakerTrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SellerAsMakerTrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SellerAsMakerTrade.displayName = 'proto.io.haveno.protobuffer.SellerAsMakerTrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.SellerAsTakerTrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.SellerAsTakerTrade.displayName = 'proto.io.haveno.protobuffer.SellerAsTakerTrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ArbitratorTrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ArbitratorTrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ArbitratorTrade.displayName = 'proto.io.haveno.protobuffer.ArbitratorTrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ProcessModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.ProcessModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ProcessModel.displayName = 'proto.io.haveno.protobuffer.ProcessModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TradePeer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.TradePeer.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.TradePeer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TradePeer.displayName = 'proto.io.haveno.protobuffer.TradePeer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.EncryptedConnection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.EncryptedConnection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.EncryptedConnection.displayName = 'proto.io.haveno.protobuffer.EncryptedConnection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.EncryptedConnectionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.EncryptedConnectionList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.EncryptedConnectionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.EncryptedConnectionList.displayName = 'proto.io.haveno.protobuffer.EncryptedConnectionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.ArbitrationDisputeList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.ArbitrationDisputeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.ArbitrationDisputeList.displayName = 'proto.io.haveno.protobuffer.ArbitrationDisputeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MediationDisputeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.MediationDisputeList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.MediationDisputeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MediationDisputeList.displayName = 'proto.io.haveno.protobuffer.MediationDisputeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.RefundDisputeList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.RefundDisputeList.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.RefundDisputeList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.RefundDisputeList.displayName = 'proto.io.haveno.protobuffer.RefundDisputeList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PreferencesPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PreferencesPayload.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PreferencesPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PreferencesPayload.displayName = 'proto.io.haveno.protobuffer.PreferencesPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.AutoConfirmSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.AutoConfirmSettings.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.AutoConfirmSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.AutoConfirmSettings.displayName = 'proto.io.haveno.protobuffer.AutoConfirmSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.XmrNodeSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.XmrNodeSettings.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.XmrNodeSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.XmrNodeSettings.displayName = 'proto.io.haveno.protobuffer.XmrNodeSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.UserPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.UserPayload.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.UserPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.UserPayload.displayName = 'proto.io.haveno.protobuffer.UserPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.BlockChainExplorer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.BlockChainExplorer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.BlockChainExplorer.displayName = 'proto.io.haveno.protobuffer.BlockChainExplorer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PaymentAccount.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccount.displayName = 'proto.io.haveno.protobuffer.PaymentAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentMethod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PaymentMethod.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentMethod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentMethod.displayName = 'proto.io.haveno.protobuffer.PaymentMethod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Currency.displayName = 'proto.io.haveno.protobuffer.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TradeCurrency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.haveno.protobuffer.TradeCurrency.oneofGroups_);
};
goog.inherits(proto.io.haveno.protobuffer.TradeCurrency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TradeCurrency.displayName = 'proto.io.haveno.protobuffer.TradeCurrency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.CryptoCurrency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.CryptoCurrency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.CryptoCurrency.displayName = 'proto.io.haveno.protobuffer.CryptoCurrency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.TraditionalCurrency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.TraditionalCurrency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.TraditionalCurrency.displayName = 'proto.io.haveno.protobuffer.TraditionalCurrency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Country.displayName = 'proto.io.haveno.protobuffer.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.Region = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.Region, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.Region.displayName = 'proto.io.haveno.protobuffer.Region';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PriceAlertFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.PriceAlertFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PriceAlertFilter.displayName = 'proto.io.haveno.protobuffer.PriceAlertFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MarketAlertFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.MarketAlertFilter.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.MarketAlertFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MarketAlertFilter.displayName = 'proto.io.haveno.protobuffer.MarketAlertFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MockMailboxPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MockMailboxPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MockMailboxPayload.displayName = 'proto.io.haveno.protobuffer.MockMailboxPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.MockPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.haveno.protobuffer.MockPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.MockPayload.displayName = 'proto.io.haveno.protobuffer.MockPayload';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccountForm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PaymentAccountForm.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccountForm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccountForm.displayName = 'proto.io.haveno.protobuffer.PaymentAccountForm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.haveno.protobuffer.PaymentAccountFormField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.haveno.protobuffer.PaymentAccountFormField.repeatedFields_, null);
};
goog.inherits(proto.io.haveno.protobuffer.PaymentAccountFormField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.haveno.protobuffer.PaymentAccountFormField.displayName = 'proto.io.haveno.protobuffer.PaymentAccountFormField';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.MessageCase = {
  MESSAGE_NOT_SET: 0,
  PRELIMINARY_GET_DATA_REQUEST: 2,
  GET_DATA_RESPONSE: 3,
  GET_UPDATED_DATA_REQUEST: 4,
  GET_PEERS_REQUEST: 5,
  GET_PEERS_RESPONSE: 6,
  PING: 7,
  PONG: 8,
  OFFER_AVAILABILITY_REQUEST: 9,
  OFFER_AVAILABILITY_RESPONSE: 10,
  REFRESH_OFFER_MESSAGE: 11,
  ADD_DATA_MESSAGE: 12,
  REMOVE_DATA_MESSAGE: 13,
  REMOVE_MAILBOX_DATA_MESSAGE: 14,
  CLOSE_CONNECTION_MESSAGE: 15,
  PREFIXED_SEALED_AND_SIGNED_MESSAGE: 16,
  PRIVATE_NOTIFICATION_MESSAGE: 17,
  ADD_PERSISTABLE_NETWORK_PAYLOAD_MESSAGE: 18,
  ACK_MESSAGE: 19,
  BUNDLE_OF_ENVELOPES: 20,
  GET_INVENTORY_REQUEST: 21,
  GET_INVENTORY_RESPONSE: 22,
  SIGN_OFFER_REQUEST: 23,
  SIGN_OFFER_RESPONSE: 24,
  INIT_TRADE_REQUEST: 25,
  INIT_MULTISIG_REQUEST: 26,
  SIGN_CONTRACT_REQUEST: 27,
  SIGN_CONTRACT_RESPONSE: 28,
  DEPOSIT_REQUEST: 29,
  DEPOSIT_RESPONSE: 30,
  DEPOSITS_CONFIRMED_MESSAGE: 31,
  PAYMENT_SENT_MESSAGE: 32,
  PAYMENT_RECEIVED_MESSAGE: 33,
  DISPUTE_OPENED_MESSAGE: 34,
  DISPUTE_CLOSED_MESSAGE: 35,
  CHAT_MESSAGE: 36,
  MEDIATED_PAYOUT_TX_SIGNATURE_MESSAGE: 37,
  MEDIATED_PAYOUT_TX_PUBLISHED_MESSAGE: 38
};

/**
 * @return {proto.io.haveno.protobuffer.NetworkEnvelope.MessageCase}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.NetworkEnvelope.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NetworkEnvelope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NetworkEnvelope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NetworkEnvelope.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    preliminaryGetDataRequest: (f = msg.getPreliminaryGetDataRequest()) && proto.io.haveno.protobuffer.PreliminaryGetDataRequest.toObject(includeInstance, f),
    getDataResponse: (f = msg.getGetDataResponse()) && proto.io.haveno.protobuffer.GetDataResponse.toObject(includeInstance, f),
    getUpdatedDataRequest: (f = msg.getGetUpdatedDataRequest()) && proto.io.haveno.protobuffer.GetUpdatedDataRequest.toObject(includeInstance, f),
    getPeersRequest: (f = msg.getGetPeersRequest()) && proto.io.haveno.protobuffer.GetPeersRequest.toObject(includeInstance, f),
    getPeersResponse: (f = msg.getGetPeersResponse()) && proto.io.haveno.protobuffer.GetPeersResponse.toObject(includeInstance, f),
    ping: (f = msg.getPing()) && proto.io.haveno.protobuffer.Ping.toObject(includeInstance, f),
    pong: (f = msg.getPong()) && proto.io.haveno.protobuffer.Pong.toObject(includeInstance, f),
    offerAvailabilityRequest: (f = msg.getOfferAvailabilityRequest()) && proto.io.haveno.protobuffer.OfferAvailabilityRequest.toObject(includeInstance, f),
    offerAvailabilityResponse: (f = msg.getOfferAvailabilityResponse()) && proto.io.haveno.protobuffer.OfferAvailabilityResponse.toObject(includeInstance, f),
    refreshOfferMessage: (f = msg.getRefreshOfferMessage()) && proto.io.haveno.protobuffer.RefreshOfferMessage.toObject(includeInstance, f),
    addDataMessage: (f = msg.getAddDataMessage()) && proto.io.haveno.protobuffer.AddDataMessage.toObject(includeInstance, f),
    removeDataMessage: (f = msg.getRemoveDataMessage()) && proto.io.haveno.protobuffer.RemoveDataMessage.toObject(includeInstance, f),
    removeMailboxDataMessage: (f = msg.getRemoveMailboxDataMessage()) && proto.io.haveno.protobuffer.RemoveMailboxDataMessage.toObject(includeInstance, f),
    closeConnectionMessage: (f = msg.getCloseConnectionMessage()) && proto.io.haveno.protobuffer.CloseConnectionMessage.toObject(includeInstance, f),
    prefixedSealedAndSignedMessage: (f = msg.getPrefixedSealedAndSignedMessage()) && proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.toObject(includeInstance, f),
    privateNotificationMessage: (f = msg.getPrivateNotificationMessage()) && proto.io.haveno.protobuffer.PrivateNotificationMessage.toObject(includeInstance, f),
    addPersistableNetworkPayloadMessage: (f = msg.getAddPersistableNetworkPayloadMessage()) && proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.toObject(includeInstance, f),
    ackMessage: (f = msg.getAckMessage()) && proto.io.haveno.protobuffer.AckMessage.toObject(includeInstance, f),
    bundleOfEnvelopes: (f = msg.getBundleOfEnvelopes()) && proto.io.haveno.protobuffer.BundleOfEnvelopes.toObject(includeInstance, f),
    getInventoryRequest: (f = msg.getGetInventoryRequest()) && proto.io.haveno.protobuffer.GetInventoryRequest.toObject(includeInstance, f),
    getInventoryResponse: (f = msg.getGetInventoryResponse()) && proto.io.haveno.protobuffer.GetInventoryResponse.toObject(includeInstance, f),
    signOfferRequest: (f = msg.getSignOfferRequest()) && proto.io.haveno.protobuffer.SignOfferRequest.toObject(includeInstance, f),
    signOfferResponse: (f = msg.getSignOfferResponse()) && proto.io.haveno.protobuffer.SignOfferResponse.toObject(includeInstance, f),
    initTradeRequest: (f = msg.getInitTradeRequest()) && proto.io.haveno.protobuffer.InitTradeRequest.toObject(includeInstance, f),
    initMultisigRequest: (f = msg.getInitMultisigRequest()) && proto.io.haveno.protobuffer.InitMultisigRequest.toObject(includeInstance, f),
    signContractRequest: (f = msg.getSignContractRequest()) && proto.io.haveno.protobuffer.SignContractRequest.toObject(includeInstance, f),
    signContractResponse: (f = msg.getSignContractResponse()) && proto.io.haveno.protobuffer.SignContractResponse.toObject(includeInstance, f),
    depositRequest: (f = msg.getDepositRequest()) && proto.io.haveno.protobuffer.DepositRequest.toObject(includeInstance, f),
    depositResponse: (f = msg.getDepositResponse()) && proto.io.haveno.protobuffer.DepositResponse.toObject(includeInstance, f),
    depositsConfirmedMessage: (f = msg.getDepositsConfirmedMessage()) && proto.io.haveno.protobuffer.DepositsConfirmedMessage.toObject(includeInstance, f),
    paymentSentMessage: (f = msg.getPaymentSentMessage()) && proto.io.haveno.protobuffer.PaymentSentMessage.toObject(includeInstance, f),
    paymentReceivedMessage: (f = msg.getPaymentReceivedMessage()) && proto.io.haveno.protobuffer.PaymentReceivedMessage.toObject(includeInstance, f),
    disputeOpenedMessage: (f = msg.getDisputeOpenedMessage()) && proto.io.haveno.protobuffer.DisputeOpenedMessage.toObject(includeInstance, f),
    disputeClosedMessage: (f = msg.getDisputeClosedMessage()) && proto.io.haveno.protobuffer.DisputeClosedMessage.toObject(includeInstance, f),
    chatMessage: (f = msg.getChatMessage()) && proto.io.haveno.protobuffer.ChatMessage.toObject(includeInstance, f),
    mediatedPayoutTxSignatureMessage: (f = msg.getMediatedPayoutTxSignatureMessage()) && proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.toObject(includeInstance, f),
    mediatedPayoutTxPublishedMessage: (f = msg.getMediatedPayoutTxPublishedMessage()) && proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NetworkEnvelope;
  return proto.io.haveno.protobuffer.NetworkEnvelope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NetworkEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageVersion(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PreliminaryGetDataRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.PreliminaryGetDataRequest.deserializeBinaryFromReader);
      msg.setPreliminaryGetDataRequest(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.GetDataResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetDataResponse.deserializeBinaryFromReader);
      msg.setGetDataResponse(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.GetUpdatedDataRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetUpdatedDataRequest.deserializeBinaryFromReader);
      msg.setGetUpdatedDataRequest(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.GetPeersRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetPeersRequest.deserializeBinaryFromReader);
      msg.setGetPeersRequest(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.GetPeersResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetPeersResponse.deserializeBinaryFromReader);
      msg.setGetPeersResponse(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.Ping;
      reader.readMessage(value,proto.io.haveno.protobuffer.Ping.deserializeBinaryFromReader);
      msg.setPing(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.Pong;
      reader.readMessage(value,proto.io.haveno.protobuffer.Pong.deserializeBinaryFromReader);
      msg.setPong(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.OfferAvailabilityRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferAvailabilityRequest.deserializeBinaryFromReader);
      msg.setOfferAvailabilityRequest(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.OfferAvailabilityResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferAvailabilityResponse.deserializeBinaryFromReader);
      msg.setOfferAvailabilityResponse(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.RefreshOfferMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.RefreshOfferMessage.deserializeBinaryFromReader);
      msg.setRefreshOfferMessage(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.AddDataMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.AddDataMessage.deserializeBinaryFromReader);
      msg.setAddDataMessage(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.RemoveDataMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.RemoveDataMessage.deserializeBinaryFromReader);
      msg.setRemoveDataMessage(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.RemoveMailboxDataMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.RemoveMailboxDataMessage.deserializeBinaryFromReader);
      msg.setRemoveMailboxDataMessage(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.CloseConnectionMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.CloseConnectionMessage.deserializeBinaryFromReader);
      msg.setCloseConnectionMessage(value);
      break;
    case 16:
      var value = new proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.deserializeBinaryFromReader);
      msg.setPrefixedSealedAndSignedMessage(value);
      break;
    case 17:
      var value = new proto.io.haveno.protobuffer.PrivateNotificationMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PrivateNotificationMessage.deserializeBinaryFromReader);
      msg.setPrivateNotificationMessage(value);
      break;
    case 18:
      var value = new proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.deserializeBinaryFromReader);
      msg.setAddPersistableNetworkPayloadMessage(value);
      break;
    case 19:
      var value = new proto.io.haveno.protobuffer.AckMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.AckMessage.deserializeBinaryFromReader);
      msg.setAckMessage(value);
      break;
    case 20:
      var value = new proto.io.haveno.protobuffer.BundleOfEnvelopes;
      reader.readMessage(value,proto.io.haveno.protobuffer.BundleOfEnvelopes.deserializeBinaryFromReader);
      msg.setBundleOfEnvelopes(value);
      break;
    case 21:
      var value = new proto.io.haveno.protobuffer.GetInventoryRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetInventoryRequest.deserializeBinaryFromReader);
      msg.setGetInventoryRequest(value);
      break;
    case 22:
      var value = new proto.io.haveno.protobuffer.GetInventoryResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.GetInventoryResponse.deserializeBinaryFromReader);
      msg.setGetInventoryResponse(value);
      break;
    case 23:
      var value = new proto.io.haveno.protobuffer.SignOfferRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignOfferRequest.deserializeBinaryFromReader);
      msg.setSignOfferRequest(value);
      break;
    case 24:
      var value = new proto.io.haveno.protobuffer.SignOfferResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignOfferResponse.deserializeBinaryFromReader);
      msg.setSignOfferResponse(value);
      break;
    case 25:
      var value = new proto.io.haveno.protobuffer.InitTradeRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.InitTradeRequest.deserializeBinaryFromReader);
      msg.setInitTradeRequest(value);
      break;
    case 26:
      var value = new proto.io.haveno.protobuffer.InitMultisigRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.InitMultisigRequest.deserializeBinaryFromReader);
      msg.setInitMultisigRequest(value);
      break;
    case 27:
      var value = new proto.io.haveno.protobuffer.SignContractRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignContractRequest.deserializeBinaryFromReader);
      msg.setSignContractRequest(value);
      break;
    case 28:
      var value = new proto.io.haveno.protobuffer.SignContractResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignContractResponse.deserializeBinaryFromReader);
      msg.setSignContractResponse(value);
      break;
    case 29:
      var value = new proto.io.haveno.protobuffer.DepositRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.DepositRequest.deserializeBinaryFromReader);
      msg.setDepositRequest(value);
      break;
    case 30:
      var value = new proto.io.haveno.protobuffer.DepositResponse;
      reader.readMessage(value,proto.io.haveno.protobuffer.DepositResponse.deserializeBinaryFromReader);
      msg.setDepositResponse(value);
      break;
    case 31:
      var value = new proto.io.haveno.protobuffer.DepositsConfirmedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.DepositsConfirmedMessage.deserializeBinaryFromReader);
      msg.setDepositsConfirmedMessage(value);
      break;
    case 32:
      var value = new proto.io.haveno.protobuffer.PaymentSentMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader);
      msg.setPaymentSentMessage(value);
      break;
    case 33:
      var value = new proto.io.haveno.protobuffer.PaymentReceivedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentReceivedMessage.deserializeBinaryFromReader);
      msg.setPaymentReceivedMessage(value);
      break;
    case 34:
      var value = new proto.io.haveno.protobuffer.DisputeOpenedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.DisputeOpenedMessage.deserializeBinaryFromReader);
      msg.setDisputeOpenedMessage(value);
      break;
    case 35:
      var value = new proto.io.haveno.protobuffer.DisputeClosedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.DisputeClosedMessage.deserializeBinaryFromReader);
      msg.setDisputeClosedMessage(value);
      break;
    case 36:
      var value = new proto.io.haveno.protobuffer.ChatMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader);
      msg.setChatMessage(value);
      break;
    case 37:
      var value = new proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.deserializeBinaryFromReader);
      msg.setMediatedPayoutTxSignatureMessage(value);
      break;
    case 38:
      var value = new proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.deserializeBinaryFromReader);
      msg.setMediatedPayoutTxPublishedMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NetworkEnvelope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NetworkEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NetworkEnvelope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPreliminaryGetDataRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PreliminaryGetDataRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetDataResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.GetDataResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetUpdatedDataRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.GetUpdatedDataRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetPeersRequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.GetPeersRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetPeersResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.GetPeersResponse.serializeBinaryToWriter
    );
  }
  f = message.getPing();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.Ping.serializeBinaryToWriter
    );
  }
  f = message.getPong();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.Pong.serializeBinaryToWriter
    );
  }
  f = message.getOfferAvailabilityRequest();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.OfferAvailabilityRequest.serializeBinaryToWriter
    );
  }
  f = message.getOfferAvailabilityResponse();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.OfferAvailabilityResponse.serializeBinaryToWriter
    );
  }
  f = message.getRefreshOfferMessage();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.RefreshOfferMessage.serializeBinaryToWriter
    );
  }
  f = message.getAddDataMessage();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.AddDataMessage.serializeBinaryToWriter
    );
  }
  f = message.getRemoveDataMessage();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.RemoveDataMessage.serializeBinaryToWriter
    );
  }
  f = message.getRemoveMailboxDataMessage();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.RemoveMailboxDataMessage.serializeBinaryToWriter
    );
  }
  f = message.getCloseConnectionMessage();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.CloseConnectionMessage.serializeBinaryToWriter
    );
  }
  f = message.getPrefixedSealedAndSignedMessage();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.serializeBinaryToWriter
    );
  }
  f = message.getPrivateNotificationMessage();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.io.haveno.protobuffer.PrivateNotificationMessage.serializeBinaryToWriter
    );
  }
  f = message.getAddPersistableNetworkPayloadMessage();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.serializeBinaryToWriter
    );
  }
  f = message.getAckMessage();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.io.haveno.protobuffer.AckMessage.serializeBinaryToWriter
    );
  }
  f = message.getBundleOfEnvelopes();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.io.haveno.protobuffer.BundleOfEnvelopes.serializeBinaryToWriter
    );
  }
  f = message.getGetInventoryRequest();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.io.haveno.protobuffer.GetInventoryRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetInventoryResponse();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.io.haveno.protobuffer.GetInventoryResponse.serializeBinaryToWriter
    );
  }
  f = message.getSignOfferRequest();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.io.haveno.protobuffer.SignOfferRequest.serializeBinaryToWriter
    );
  }
  f = message.getSignOfferResponse();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.io.haveno.protobuffer.SignOfferResponse.serializeBinaryToWriter
    );
  }
  f = message.getInitTradeRequest();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.io.haveno.protobuffer.InitTradeRequest.serializeBinaryToWriter
    );
  }
  f = message.getInitMultisigRequest();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.io.haveno.protobuffer.InitMultisigRequest.serializeBinaryToWriter
    );
  }
  f = message.getSignContractRequest();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.io.haveno.protobuffer.SignContractRequest.serializeBinaryToWriter
    );
  }
  f = message.getSignContractResponse();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.io.haveno.protobuffer.SignContractResponse.serializeBinaryToWriter
    );
  }
  f = message.getDepositRequest();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.io.haveno.protobuffer.DepositRequest.serializeBinaryToWriter
    );
  }
  f = message.getDepositResponse();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.io.haveno.protobuffer.DepositResponse.serializeBinaryToWriter
    );
  }
  f = message.getDepositsConfirmedMessage();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.io.haveno.protobuffer.DepositsConfirmedMessage.serializeBinaryToWriter
    );
  }
  f = message.getPaymentSentMessage();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter
    );
  }
  f = message.getPaymentReceivedMessage();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.io.haveno.protobuffer.PaymentReceivedMessage.serializeBinaryToWriter
    );
  }
  f = message.getDisputeOpenedMessage();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.io.haveno.protobuffer.DisputeOpenedMessage.serializeBinaryToWriter
    );
  }
  f = message.getDisputeClosedMessage();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.io.haveno.protobuffer.DisputeClosedMessage.serializeBinaryToWriter
    );
  }
  f = message.getChatMessage();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getMediatedPayoutTxSignatureMessage();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.serializeBinaryToWriter
    );
  }
  f = message.getMediatedPayoutTxPublishedMessage();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string message_version = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getMessageVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setMessageVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PreliminaryGetDataRequest preliminary_get_data_request = 2;
 * @return {?proto.io.haveno.protobuffer.PreliminaryGetDataRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPreliminaryGetDataRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.PreliminaryGetDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PreliminaryGetDataRequest, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.PreliminaryGetDataRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPreliminaryGetDataRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPreliminaryGetDataRequest = function() {
  return this.setPreliminaryGetDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPreliminaryGetDataRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetDataResponse get_data_response = 3;
 * @return {?proto.io.haveno.protobuffer.GetDataResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetDataResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetDataResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetDataResponse, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetDataResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetDataResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetDataResponse = function() {
  return this.setGetDataResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetDataResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetUpdatedDataRequest get_updated_data_request = 4;
 * @return {?proto.io.haveno.protobuffer.GetUpdatedDataRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetUpdatedDataRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetUpdatedDataRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetUpdatedDataRequest, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetUpdatedDataRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetUpdatedDataRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetUpdatedDataRequest = function() {
  return this.setGetUpdatedDataRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetUpdatedDataRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetPeersRequest get_peers_request = 5;
 * @return {?proto.io.haveno.protobuffer.GetPeersRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetPeersRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetPeersRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetPeersRequest, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetPeersRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetPeersRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetPeersRequest = function() {
  return this.setGetPeersRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetPeersRequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GetPeersResponse get_peers_response = 6;
 * @return {?proto.io.haveno.protobuffer.GetPeersResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetPeersResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetPeersResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetPeersResponse, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetPeersResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetPeersResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetPeersResponse = function() {
  return this.setGetPeersResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetPeersResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Ping ping = 7;
 * @return {?proto.io.haveno.protobuffer.Ping}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPing = function() {
  return /** @type{?proto.io.haveno.protobuffer.Ping} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Ping, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.Ping|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPing = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPing = function() {
  return this.setPing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPing = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Pong pong = 8;
 * @return {?proto.io.haveno.protobuffer.Pong}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPong = function() {
  return /** @type{?proto.io.haveno.protobuffer.Pong} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Pong, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.Pong|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPong = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPong = function() {
  return this.setPong(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPong = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional OfferAvailabilityRequest offer_availability_request = 9;
 * @return {?proto.io.haveno.protobuffer.OfferAvailabilityRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getOfferAvailabilityRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferAvailabilityRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferAvailabilityRequest, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferAvailabilityRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setOfferAvailabilityRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearOfferAvailabilityRequest = function() {
  return this.setOfferAvailabilityRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasOfferAvailabilityRequest = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional OfferAvailabilityResponse offer_availability_response = 10;
 * @return {?proto.io.haveno.protobuffer.OfferAvailabilityResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getOfferAvailabilityResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferAvailabilityResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferAvailabilityResponse, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferAvailabilityResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setOfferAvailabilityResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearOfferAvailabilityResponse = function() {
  return this.setOfferAvailabilityResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasOfferAvailabilityResponse = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional RefreshOfferMessage refresh_offer_message = 11;
 * @return {?proto.io.haveno.protobuffer.RefreshOfferMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getRefreshOfferMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.RefreshOfferMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RefreshOfferMessage, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.RefreshOfferMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setRefreshOfferMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearRefreshOfferMessage = function() {
  return this.setRefreshOfferMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasRefreshOfferMessage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional AddDataMessage add_data_message = 12;
 * @return {?proto.io.haveno.protobuffer.AddDataMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getAddDataMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.AddDataMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AddDataMessage, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.AddDataMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setAddDataMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearAddDataMessage = function() {
  return this.setAddDataMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasAddDataMessage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional RemoveDataMessage remove_data_message = 13;
 * @return {?proto.io.haveno.protobuffer.RemoveDataMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getRemoveDataMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.RemoveDataMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RemoveDataMessage, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.RemoveDataMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setRemoveDataMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearRemoveDataMessage = function() {
  return this.setRemoveDataMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasRemoveDataMessage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional RemoveMailboxDataMessage remove_mailbox_data_message = 14;
 * @return {?proto.io.haveno.protobuffer.RemoveMailboxDataMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getRemoveMailboxDataMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.RemoveMailboxDataMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RemoveMailboxDataMessage, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.RemoveMailboxDataMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setRemoveMailboxDataMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearRemoveMailboxDataMessage = function() {
  return this.setRemoveMailboxDataMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasRemoveMailboxDataMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CloseConnectionMessage close_connection_message = 15;
 * @return {?proto.io.haveno.protobuffer.CloseConnectionMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getCloseConnectionMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.CloseConnectionMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CloseConnectionMessage, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.CloseConnectionMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setCloseConnectionMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearCloseConnectionMessage = function() {
  return this.setCloseConnectionMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasCloseConnectionMessage = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional PrefixedSealedAndSignedMessage prefixed_sealed_and_signed_message = 16;
 * @return {?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPrefixedSealedAndSignedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage, 16));
};


/**
 * @param {?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPrefixedSealedAndSignedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPrefixedSealedAndSignedMessage = function() {
  return this.setPrefixedSealedAndSignedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPrefixedSealedAndSignedMessage = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional PrivateNotificationMessage private_notification_message = 17;
 * @return {?proto.io.haveno.protobuffer.PrivateNotificationMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPrivateNotificationMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PrivateNotificationMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PrivateNotificationMessage, 17));
};


/**
 * @param {?proto.io.haveno.protobuffer.PrivateNotificationMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPrivateNotificationMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPrivateNotificationMessage = function() {
  return this.setPrivateNotificationMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPrivateNotificationMessage = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional AddPersistableNetworkPayloadMessage add_persistable_network_payload_message = 18;
 * @return {?proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getAddPersistableNetworkPayloadMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage, 18));
};


/**
 * @param {?proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setAddPersistableNetworkPayloadMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearAddPersistableNetworkPayloadMessage = function() {
  return this.setAddPersistableNetworkPayloadMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasAddPersistableNetworkPayloadMessage = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional AckMessage ack_message = 19;
 * @return {?proto.io.haveno.protobuffer.AckMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getAckMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.AckMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AckMessage, 19));
};


/**
 * @param {?proto.io.haveno.protobuffer.AckMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setAckMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearAckMessage = function() {
  return this.setAckMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasAckMessage = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional BundleOfEnvelopes bundle_of_envelopes = 20;
 * @return {?proto.io.haveno.protobuffer.BundleOfEnvelopes}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getBundleOfEnvelopes = function() {
  return /** @type{?proto.io.haveno.protobuffer.BundleOfEnvelopes} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BundleOfEnvelopes, 20));
};


/**
 * @param {?proto.io.haveno.protobuffer.BundleOfEnvelopes|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setBundleOfEnvelopes = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearBundleOfEnvelopes = function() {
  return this.setBundleOfEnvelopes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasBundleOfEnvelopes = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional GetInventoryRequest get_inventory_request = 21;
 * @return {?proto.io.haveno.protobuffer.GetInventoryRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetInventoryRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetInventoryRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetInventoryRequest, 21));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetInventoryRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetInventoryRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetInventoryRequest = function() {
  return this.setGetInventoryRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetInventoryRequest = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional GetInventoryResponse get_inventory_response = 22;
 * @return {?proto.io.haveno.protobuffer.GetInventoryResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getGetInventoryResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.GetInventoryResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.GetInventoryResponse, 22));
};


/**
 * @param {?proto.io.haveno.protobuffer.GetInventoryResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setGetInventoryResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearGetInventoryResponse = function() {
  return this.setGetInventoryResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasGetInventoryResponse = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional SignOfferRequest sign_offer_request = 23;
 * @return {?proto.io.haveno.protobuffer.SignOfferRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getSignOfferRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignOfferRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignOfferRequest, 23));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignOfferRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setSignOfferRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearSignOfferRequest = function() {
  return this.setSignOfferRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasSignOfferRequest = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional SignOfferResponse sign_offer_response = 24;
 * @return {?proto.io.haveno.protobuffer.SignOfferResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getSignOfferResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignOfferResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignOfferResponse, 24));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignOfferResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setSignOfferResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearSignOfferResponse = function() {
  return this.setSignOfferResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasSignOfferResponse = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional InitTradeRequest init_trade_request = 25;
 * @return {?proto.io.haveno.protobuffer.InitTradeRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getInitTradeRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.InitTradeRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.InitTradeRequest, 25));
};


/**
 * @param {?proto.io.haveno.protobuffer.InitTradeRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setInitTradeRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearInitTradeRequest = function() {
  return this.setInitTradeRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasInitTradeRequest = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional InitMultisigRequest init_multisig_request = 26;
 * @return {?proto.io.haveno.protobuffer.InitMultisigRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getInitMultisigRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.InitMultisigRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.InitMultisigRequest, 26));
};


/**
 * @param {?proto.io.haveno.protobuffer.InitMultisigRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setInitMultisigRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearInitMultisigRequest = function() {
  return this.setInitMultisigRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasInitMultisigRequest = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional SignContractRequest sign_contract_request = 27;
 * @return {?proto.io.haveno.protobuffer.SignContractRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getSignContractRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignContractRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignContractRequest, 27));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignContractRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setSignContractRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearSignContractRequest = function() {
  return this.setSignContractRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasSignContractRequest = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional SignContractResponse sign_contract_response = 28;
 * @return {?proto.io.haveno.protobuffer.SignContractResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getSignContractResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignContractResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignContractResponse, 28));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignContractResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setSignContractResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearSignContractResponse = function() {
  return this.setSignContractResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasSignContractResponse = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional DepositRequest deposit_request = 29;
 * @return {?proto.io.haveno.protobuffer.DepositRequest}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getDepositRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.DepositRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DepositRequest, 29));
};


/**
 * @param {?proto.io.haveno.protobuffer.DepositRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setDepositRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearDepositRequest = function() {
  return this.setDepositRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasDepositRequest = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional DepositResponse deposit_response = 30;
 * @return {?proto.io.haveno.protobuffer.DepositResponse}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getDepositResponse = function() {
  return /** @type{?proto.io.haveno.protobuffer.DepositResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DepositResponse, 30));
};


/**
 * @param {?proto.io.haveno.protobuffer.DepositResponse|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setDepositResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearDepositResponse = function() {
  return this.setDepositResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasDepositResponse = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional DepositsConfirmedMessage deposits_confirmed_message = 31;
 * @return {?proto.io.haveno.protobuffer.DepositsConfirmedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getDepositsConfirmedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.DepositsConfirmedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DepositsConfirmedMessage, 31));
};


/**
 * @param {?proto.io.haveno.protobuffer.DepositsConfirmedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setDepositsConfirmedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearDepositsConfirmedMessage = function() {
  return this.setDepositsConfirmedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasDepositsConfirmedMessage = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional PaymentSentMessage payment_sent_message = 32;
 * @return {?proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPaymentSentMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentSentMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentSentMessage, 32));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentSentMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPaymentSentMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 32, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPaymentSentMessage = function() {
  return this.setPaymentSentMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPaymentSentMessage = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional PaymentReceivedMessage payment_received_message = 33;
 * @return {?proto.io.haveno.protobuffer.PaymentReceivedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getPaymentReceivedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentReceivedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentReceivedMessage, 33));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentReceivedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setPaymentReceivedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 33, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearPaymentReceivedMessage = function() {
  return this.setPaymentReceivedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasPaymentReceivedMessage = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional DisputeOpenedMessage dispute_opened_message = 34;
 * @return {?proto.io.haveno.protobuffer.DisputeOpenedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getDisputeOpenedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.DisputeOpenedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DisputeOpenedMessage, 34));
};


/**
 * @param {?proto.io.haveno.protobuffer.DisputeOpenedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setDisputeOpenedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 34, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearDisputeOpenedMessage = function() {
  return this.setDisputeOpenedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasDisputeOpenedMessage = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional DisputeClosedMessage dispute_closed_message = 35;
 * @return {?proto.io.haveno.protobuffer.DisputeClosedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getDisputeClosedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.DisputeClosedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DisputeClosedMessage, 35));
};


/**
 * @param {?proto.io.haveno.protobuffer.DisputeClosedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setDisputeClosedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 35, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearDisputeClosedMessage = function() {
  return this.setDisputeClosedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasDisputeClosedMessage = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ChatMessage chat_message = 36;
 * @return {?proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getChatMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ChatMessage, 36));
};


/**
 * @param {?proto.io.haveno.protobuffer.ChatMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setChatMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 36, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearChatMessage = function() {
  return this.setChatMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasChatMessage = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional MediatedPayoutTxSignatureMessage mediated_payout_tx_signature_message = 37;
 * @return {?proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getMediatedPayoutTxSignatureMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage, 37));
};


/**
 * @param {?proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setMediatedPayoutTxSignatureMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 37, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearMediatedPayoutTxSignatureMessage = function() {
  return this.setMediatedPayoutTxSignatureMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasMediatedPayoutTxSignatureMessage = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional MediatedPayoutTxPublishedMessage mediated_payout_tx_published_message = 38;
 * @return {?proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.getMediatedPayoutTxPublishedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage, 38));
};


/**
 * @param {?proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
*/
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.setMediatedPayoutTxPublishedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 38, proto.io.haveno.protobuffer.NetworkEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope} returns this
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.clearMediatedPayoutTxPublishedMessage = function() {
  return this.setMediatedPayoutTxPublishedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.NetworkEnvelope.prototype.hasMediatedPayoutTxPublishedMessage = function() {
  return jspb.Message.getField(this, 38) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BundleOfEnvelopes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BundleOfEnvelopes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.toObject = function(includeInstance, msg) {
  var f, obj = {
    envelopesList: jspb.Message.toObjectList(msg.getEnvelopesList(),
    proto.io.haveno.protobuffer.NetworkEnvelope.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BundleOfEnvelopes}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BundleOfEnvelopes;
  return proto.io.haveno.protobuffer.BundleOfEnvelopes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BundleOfEnvelopes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BundleOfEnvelopes}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NetworkEnvelope;
      reader.readMessage(value,proto.io.haveno.protobuffer.NetworkEnvelope.deserializeBinaryFromReader);
      msg.addEnvelopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BundleOfEnvelopes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BundleOfEnvelopes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnvelopesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NetworkEnvelope.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NetworkEnvelope envelopes = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.NetworkEnvelope>}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.getEnvelopesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.NetworkEnvelope>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.NetworkEnvelope, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.NetworkEnvelope>} value
 * @return {!proto.io.haveno.protobuffer.BundleOfEnvelopes} returns this
*/
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.setEnvelopesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.NetworkEnvelope=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.NetworkEnvelope}
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.addEnvelopes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.NetworkEnvelope, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.BundleOfEnvelopes} returns this
 */
proto.io.haveno.protobuffer.BundleOfEnvelopes.prototype.clearEnvelopesList = function() {
  return this.setEnvelopesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PreliminaryGetDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nonce: jspb.Message.getFieldWithDefault(msg, 21, 0),
    excludedKeysList: msg.getExcludedKeysList_asB64(),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PreliminaryGetDataRequest;
  return proto.io.haveno.protobuffer.PreliminaryGetDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNonce(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addExcludedKeys(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PreliminaryGetDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNonce();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getExcludedKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 nonce = 21;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * repeated bytes excluded_keys = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getExcludedKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes excluded_keys = 2;
 * This is a type-conversion wrapper around `getExcludedKeysList()`
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getExcludedKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getExcludedKeysList()));
};


/**
 * repeated bytes excluded_keys = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExcludedKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getExcludedKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getExcludedKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.setExcludedKeysList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.addExcludedKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.clearExcludedKeysList = function() {
  return this.setExcludedKeysList([]);
};


/**
 * repeated int32 supported_capabilities = 3;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreliminaryGetDataRequest} returns this
 */
proto.io.haveno.protobuffer.PreliminaryGetDataRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.GetDataResponse.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestNonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isGetUpdatedDataResponse: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataSetList: jspb.Message.toObjectList(msg.getDataSetList(),
    proto.io.haveno.protobuffer.StorageEntryWrapper.toObject, includeInstance),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    persistableNetworkPayloadItemsList: jspb.Message.toObjectList(msg.getPersistableNetworkPayloadItemsList(),
    proto.io.haveno.protobuffer.PersistableNetworkPayload.toObject, includeInstance),
    wasTruncated: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetDataResponse}
 */
proto.io.haveno.protobuffer.GetDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetDataResponse;
  return proto.io.haveno.protobuffer.GetDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetDataResponse}
 */
proto.io.haveno.protobuffer.GetDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestNonce(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGetUpdatedDataResponse(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.StorageEntryWrapper;
      reader.readMessage(value,proto.io.haveno.protobuffer.StorageEntryWrapper.deserializeBinaryFromReader);
      msg.addDataSet(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.PersistableNetworkPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PersistableNetworkPayload.deserializeBinaryFromReader);
      msg.addPersistableNetworkPayloadItems(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasTruncated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestNonce();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIsGetUpdatedDataResponse();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataSetList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.haveno.protobuffer.StorageEntryWrapper.serializeBinaryToWriter
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getPersistableNetworkPayloadItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.io.haveno.protobuffer.PersistableNetworkPayload.serializeBinaryToWriter
    );
  }
  f = message.getWasTruncated();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 request_nonce = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getRequestNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.setRequestNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool is_get_updated_data_response = 2;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getIsGetUpdatedDataResponse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.setIsGetUpdatedDataResponse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated StorageEntryWrapper data_set = 3;
 * @return {!Array<!proto.io.haveno.protobuffer.StorageEntryWrapper>}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getDataSetList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.StorageEntryWrapper>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.StorageEntryWrapper, 3));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.StorageEntryWrapper>} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
*/
proto.io.haveno.protobuffer.GetDataResponse.prototype.setDataSetList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.StorageEntryWrapper=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.addDataSet = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.haveno.protobuffer.StorageEntryWrapper, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.clearDataSetList = function() {
  return this.setDataSetList([]);
};


/**
 * repeated int32 supported_capabilities = 4;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};


/**
 * repeated PersistableNetworkPayload persistable_network_payload_items = 5;
 * @return {!Array<!proto.io.haveno.protobuffer.PersistableNetworkPayload>}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getPersistableNetworkPayloadItemsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.PersistableNetworkPayload>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.PersistableNetworkPayload, 5));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.PersistableNetworkPayload>} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
*/
proto.io.haveno.protobuffer.GetDataResponse.prototype.setPersistableNetworkPayloadItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.PersistableNetworkPayload=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.addPersistableNetworkPayloadItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.io.haveno.protobuffer.PersistableNetworkPayload, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.clearPersistableNetworkPayloadItemsList = function() {
  return this.setPersistableNetworkPayloadItemsList([]);
};


/**
 * optional bool was_truncated = 6;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.getWasTruncated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.GetDataResponse} returns this
 */
proto.io.haveno.protobuffer.GetDataResponse.prototype.setWasTruncated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetUpdatedDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
    excludedKeysList: msg.getExcludedKeysList_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetUpdatedDataRequest;
  return proto.io.haveno.protobuffer.GetUpdatedDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNonce(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addExcludedKeys(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetUpdatedDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getExcludedKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional NodeAddress sender_node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
*/
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 nonce = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated bytes excluded_keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getExcludedKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes excluded_keys = 3;
 * This is a type-conversion wrapper around `getExcludedKeysList()`
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getExcludedKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getExcludedKeysList()));
};


/**
 * repeated bytes excluded_keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExcludedKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getExcludedKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getExcludedKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.setExcludedKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.addExcludedKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.clearExcludedKeysList = function() {
  return this.setExcludedKeysList([]);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.GetUpdatedDataRequest} returns this
 */
proto.io.haveno.protobuffer.GetUpdatedDataRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.GetPeersRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetPeersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetPeersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetPeersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    nonce: jspb.Message.getFieldWithDefault(msg, 2, 0),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    reportedPeersList: jspb.Message.toObjectList(msg.getReportedPeersList(),
    proto.io.haveno.protobuffer.Peer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest}
 */
proto.io.haveno.protobuffer.GetPeersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetPeersRequest;
  return proto.io.haveno.protobuffer.GetPeersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetPeersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest}
 */
proto.io.haveno.protobuffer.GetPeersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNonce(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.Peer;
      reader.readMessage(value,proto.io.haveno.protobuffer.Peer.deserializeBinaryFromReader);
      msg.addReportedPeers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetPeersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetPeersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetPeersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getReportedPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.io.haveno.protobuffer.Peer.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeAddress sender_node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
*/
proto.io.haveno.protobuffer.GetPeersRequest.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 nonce = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int32 supported_capabilities = 3;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};


/**
 * repeated Peer reported_peers = 4;
 * @return {!Array<!proto.io.haveno.protobuffer.Peer>}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.getReportedPeersList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Peer, 4));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Peer>} value
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
*/
proto.io.haveno.protobuffer.GetPeersRequest.prototype.setReportedPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Peer}
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.addReportedPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.io.haveno.protobuffer.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetPeersRequest} returns this
 */
proto.io.haveno.protobuffer.GetPeersRequest.prototype.clearReportedPeersList = function() {
  return this.setReportedPeersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.GetPeersResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetPeersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetPeersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetPeersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestNonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reportedPeersList: jspb.Message.toObjectList(msg.getReportedPeersList(),
    proto.io.haveno.protobuffer.Peer.toObject, includeInstance),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse}
 */
proto.io.haveno.protobuffer.GetPeersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetPeersResponse;
  return proto.io.haveno.protobuffer.GetPeersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetPeersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse}
 */
proto.io.haveno.protobuffer.GetPeersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestNonce(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.Peer;
      reader.readMessage(value,proto.io.haveno.protobuffer.Peer.deserializeBinaryFromReader);
      msg.addReportedPeers(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetPeersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetPeersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetPeersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestNonce();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReportedPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.haveno.protobuffer.Peer.serializeBinaryToWriter
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 request_nonce = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.getRequestNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.setRequestNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Peer reported_peers = 2;
 * @return {!Array<!proto.io.haveno.protobuffer.Peer>}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.getReportedPeersList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Peer, 2));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Peer>} value
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
*/
proto.io.haveno.protobuffer.GetPeersResponse.prototype.setReportedPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Peer}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.addReportedPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.haveno.protobuffer.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.clearReportedPeersList = function() {
  return this.setReportedPeersList([]);
};


/**
 * repeated int32 supported_capabilities = 3;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.GetPeersResponse} returns this
 */
proto.io.haveno.protobuffer.GetPeersResponse.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Ping.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Ping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Ping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Ping.toObject = function(includeInstance, msg) {
  var f, obj = {
    nonce: jspb.Message.getFieldWithDefault(msg, 1, 0),
    lastRoundTripTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Ping}
 */
proto.io.haveno.protobuffer.Ping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Ping;
  return proto.io.haveno.protobuffer.Ping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Ping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Ping}
 */
proto.io.haveno.protobuffer.Ping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNonce(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastRoundTripTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Ping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Ping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Ping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Ping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNonce();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLastRoundTripTime();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 nonce = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.Ping.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Ping} returns this
 */
proto.io.haveno.protobuffer.Ping.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 last_round_trip_time = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.Ping.prototype.getLastRoundTripTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Ping} returns this
 */
proto.io.haveno.protobuffer.Ping.prototype.setLastRoundTripTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Pong.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Pong.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Pong} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Pong.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestNonce: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Pong}
 */
proto.io.haveno.protobuffer.Pong.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Pong;
  return proto.io.haveno.protobuffer.Pong.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Pong} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Pong}
 */
proto.io.haveno.protobuffer.Pong.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Pong.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Pong.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Pong} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Pong.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestNonce();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 request_nonce = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.Pong.prototype.getRequestNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Pong} returns this
 */
proto.io.haveno.protobuffer.Pong.prototype.setRequestNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetInventoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetInventoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetInventoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetInventoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetInventoryRequest}
 */
proto.io.haveno.protobuffer.GetInventoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetInventoryRequest;
  return proto.io.haveno.protobuffer.GetInventoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetInventoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetInventoryRequest}
 */
proto.io.haveno.protobuffer.GetInventoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetInventoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetInventoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetInventoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetInventoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.GetInventoryRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.GetInventoryRequest} returns this
 */
proto.io.haveno.protobuffer.GetInventoryRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.GetInventoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.GetInventoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.GetInventoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetInventoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inventoryMap: (f = msg.getInventoryMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.GetInventoryResponse}
 */
proto.io.haveno.protobuffer.GetInventoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.GetInventoryResponse;
  return proto.io.haveno.protobuffer.GetInventoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.GetInventoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.GetInventoryResponse}
 */
proto.io.haveno.protobuffer.GetInventoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getInventoryMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.GetInventoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.GetInventoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.GetInventoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.GetInventoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInventoryMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> inventory = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.GetInventoryResponse.prototype.getInventoryMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.GetInventoryResponse} returns this
 */
proto.io.haveno.protobuffer.GetInventoryResponse.prototype.clearInventoryMap = function() {
  this.getInventoryMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SignOfferRequest.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignOfferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignOfferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignOfferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    senderAccountId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    offerPayload: (f = msg.getOfferPayload()) && proto.io.haveno.protobuffer.OfferPayload.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reserveTxHash: jspb.Message.getFieldWithDefault(msg, 8, ""),
    reserveTxHex: jspb.Message.getFieldWithDefault(msg, 9, ""),
    reserveTxKey: jspb.Message.getFieldWithDefault(msg, 10, ""),
    reserveTxKeyImagesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    payoutAddress: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest}
 */
proto.io.haveno.protobuffer.SignOfferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignOfferRequest;
  return proto.io.haveno.protobuffer.SignOfferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignOfferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest}
 */
proto.io.haveno.protobuffer.SignOfferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderAccountId(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.OfferPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader);
      msg.setOfferPayload(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHash(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHex(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxKey(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addReserveTxKeyImages(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignOfferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignOfferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignOfferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getSenderAccountId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOfferPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getReserveTxHash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getReserveTxHex();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getReserveTxKey();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getReserveTxKeyImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getPayoutAddress();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
*/
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PubKeyRing pub_key_ring = 3;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
*/
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string sender_account_id = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getSenderAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setSenderAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional OfferPayload offer_payload = 5;
 * @return {?proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getOfferPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferPayload, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
*/
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setOfferPayload = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.clearOfferPayload = function() {
  return this.setOfferPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.hasOfferPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string uid = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 current_date = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string reserve_tx_hash = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getReserveTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setReserveTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string reserve_tx_hex = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getReserveTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setReserveTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string reserve_tx_key = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getReserveTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setReserveTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string reserve_tx_key_images = 11;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getReserveTxKeyImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setReserveTxKeyImagesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.addReserveTxKeyImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.clearReserveTxKeyImagesList = function() {
  return this.setReserveTxKeyImagesList([]);
};


/**
 * optional string payout_address = 12;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.getPayoutAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferRequest} returns this
 */
proto.io.haveno.protobuffer.SignOfferRequest.prototype.setPayoutAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignOfferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignOfferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignOfferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signedOfferPayload: (f = msg.getSignedOfferPayload()) && proto.io.haveno.protobuffer.OfferPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse}
 */
proto.io.haveno.protobuffer.SignOfferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignOfferResponse;
  return proto.io.haveno.protobuffer.SignOfferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignOfferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse}
 */
proto.io.haveno.protobuffer.SignOfferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.OfferPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader);
      msg.setSignedOfferPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignOfferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignOfferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignOfferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignedOfferPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse} returns this
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse} returns this
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OfferPayload signed_offer_payload = 3;
 * @return {?proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.getSignedOfferPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferPayload, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse} returns this
*/
proto.io.haveno.protobuffer.SignOfferResponse.prototype.setSignedOfferPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SignOfferResponse} returns this
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.clearSignedOfferPayload = function() {
  return this.setSignedOfferPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SignOfferResponse.prototype.hasSignedOfferPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.OfferAvailabilityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    takersTradePrice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    uid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isTakerApiUser: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    tradeRequest: (f = msg.getTradeRequest()) && proto.io.haveno.protobuffer.InitTradeRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.OfferAvailabilityRequest;
  return proto.io.haveno.protobuffer.OfferAvailabilityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTakersTradePrice(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTakerApiUser(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.InitTradeRequest;
      reader.readMessage(value,proto.io.haveno.protobuffer.InitTradeRequest.deserializeBinaryFromReader);
      msg.setTradeRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.OfferAvailabilityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getTakersTradePrice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsTakerApiUser();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTradeRequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.InitTradeRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PubKeyRing pub_key_ring = 2;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
*/
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 takers_trade_price = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getTakersTradePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setTakersTradePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 supported_capabilities = 4;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};


/**
 * optional string uid = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_taker_api_user = 6;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getIsTakerApiUser = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setIsTakerApiUser = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional InitTradeRequest trade_request = 7;
 * @return {?proto.io.haveno.protobuffer.InitTradeRequest}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.getTradeRequest = function() {
  return /** @type{?proto.io.haveno.protobuffer.InitTradeRequest} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.InitTradeRequest, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.InitTradeRequest|undefined} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
*/
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.setTradeRequest = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityRequest} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.clearTradeRequest = function() {
  return this.setTradeRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferAvailabilityRequest.prototype.hasTradeRequest = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.OfferAvailabilityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    availabilityResult: jspb.Message.getFieldWithDefault(msg, 2, 0),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    uid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    makerSignature: msg.getMakerSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.OfferAvailabilityResponse;
  return proto.io.haveno.protobuffer.OfferAvailabilityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {!proto.io.haveno.protobuffer.AvailabilityResult} */ (reader.readEnum());
      msg.setAvailabilityResult(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMakerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.OfferAvailabilityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailabilityResult();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMakerSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AvailabilityResult availability_result = 2;
 * @return {!proto.io.haveno.protobuffer.AvailabilityResult}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getAvailabilityResult = function() {
  return /** @type {!proto.io.haveno.protobuffer.AvailabilityResult} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.AvailabilityResult} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.setAvailabilityResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated int32 supported_capabilities = 3;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};


/**
 * optional string uid = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes maker_signature = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getMakerSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes maker_signature = 5;
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getMakerSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMakerSignature()));
};


/**
 * optional bytes maker_signature = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.getMakerSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMakerSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.OfferAvailabilityResponse} returns this
 */
proto.io.haveno.protobuffer.OfferAvailabilityResponse.prototype.setMakerSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RefreshOfferMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RefreshOfferMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    hashOfDataAndSeqNr: msg.getHashOfDataAndSeqNr_asB64(),
    signature: msg.getSignature_asB64(),
    hashOfPayload: msg.getHashOfPayload_asB64(),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RefreshOfferMessage;
  return proto.io.haveno.protobuffer.RefreshOfferMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RefreshOfferMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHashOfDataAndSeqNr(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHashOfPayload(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RefreshOfferMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RefreshOfferMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHashOfDataAndSeqNr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHashOfPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional bytes hash_of_data_and_seq_nr = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfDataAndSeqNr = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash_of_data_and_seq_nr = 1;
 * This is a type-conversion wrapper around `getHashOfDataAndSeqNr()`
 * @return {string}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfDataAndSeqNr_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHashOfDataAndSeqNr()));
};


/**
 * optional bytes hash_of_data_and_seq_nr = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashOfDataAndSeqNr()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfDataAndSeqNr_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHashOfDataAndSeqNr()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage} returns this
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.setHashOfDataAndSeqNr = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes signature = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature = 2;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage} returns this
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes hash_of_payload = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hash_of_payload = 3;
 * This is a type-conversion wrapper around `getHashOfPayload()`
 * @return {string}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHashOfPayload()));
};


/**
 * optional bytes hash_of_payload = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashOfPayload()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getHashOfPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHashOfPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage} returns this
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.setHashOfPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int32 sequence_number = 4;
 * @return {number}
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.RefreshOfferMessage} returns this
 */
proto.io.haveno.protobuffer.RefreshOfferMessage.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AddDataMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AddDataMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AddDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddDataMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.io.haveno.protobuffer.StorageEntryWrapper.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AddDataMessage}
 */
proto.io.haveno.protobuffer.AddDataMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AddDataMessage;
  return proto.io.haveno.protobuffer.AddDataMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AddDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AddDataMessage}
 */
proto.io.haveno.protobuffer.AddDataMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.StorageEntryWrapper;
      reader.readMessage(value,proto.io.haveno.protobuffer.StorageEntryWrapper.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddDataMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AddDataMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AddDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddDataMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.StorageEntryWrapper.serializeBinaryToWriter
    );
  }
};


/**
 * optional StorageEntryWrapper entry = 1;
 * @return {?proto.io.haveno.protobuffer.StorageEntryWrapper}
 */
proto.io.haveno.protobuffer.AddDataMessage.prototype.getEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.StorageEntryWrapper} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.StorageEntryWrapper, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.StorageEntryWrapper|undefined} value
 * @return {!proto.io.haveno.protobuffer.AddDataMessage} returns this
*/
proto.io.haveno.protobuffer.AddDataMessage.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.AddDataMessage} returns this
 */
proto.io.haveno.protobuffer.AddDataMessage.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AddDataMessage.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RemoveDataMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RemoveDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemoveDataMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    protectedStorageEntry: (f = msg.getProtectedStorageEntry()) && proto.io.haveno.protobuffer.ProtectedStorageEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RemoveDataMessage}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RemoveDataMessage;
  return proto.io.haveno.protobuffer.RemoveDataMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RemoveDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RemoveDataMessage}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ProtectedStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinaryFromReader);
      msg.setProtectedStorageEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RemoveDataMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RemoveDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemoveDataMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtectedStorageEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ProtectedStorageEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtectedStorageEntry protected_storage_entry = 1;
 * @return {?proto.io.haveno.protobuffer.ProtectedStorageEntry}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.getProtectedStorageEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedStorageEntry, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.RemoveDataMessage} returns this
*/
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.setProtectedStorageEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.RemoveDataMessage} returns this
 */
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.clearProtectedStorageEntry = function() {
  return this.setProtectedStorageEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.RemoveDataMessage.prototype.hasProtectedStorageEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RemoveMailboxDataMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    protectedStorageEntry: (f = msg.getProtectedStorageEntry()) && proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RemoveMailboxDataMessage;
  return proto.io.haveno.protobuffer.RemoveMailboxDataMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinaryFromReader);
      msg.setProtectedStorageEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RemoveMailboxDataMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtectedStorageEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtectedMailboxStorageEntry protected_storage_entry = 1;
 * @return {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.getProtectedStorageEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage} returns this
*/
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.setProtectedStorageEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.RemoveMailboxDataMessage} returns this
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.clearProtectedStorageEntry = function() {
  return this.setProtectedStorageEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.RemoveMailboxDataMessage.prototype.hasProtectedStorageEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.io.haveno.protobuffer.PersistableNetworkPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage;
  return proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.PersistableNetworkPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PersistableNetworkPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.PersistableNetworkPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional PersistableNetworkPayload payload = 1;
 * @return {?proto.io.haveno.protobuffer.PersistableNetworkPayload}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.getPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PersistableNetworkPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PersistableNetworkPayload, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.PersistableNetworkPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} returns this
*/
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage} returns this
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AddPersistableNetworkPayloadMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CloseConnectionMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CloseConnectionMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CloseConnectionMessage}
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CloseConnectionMessage;
  return proto.io.haveno.protobuffer.CloseConnectionMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CloseConnectionMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CloseConnectionMessage}
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CloseConnectionMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CloseConnectionMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string reason = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CloseConnectionMessage} returns this
 */
proto.io.haveno.protobuffer.CloseConnectionMessage.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AckMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AckMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AckMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    sourceType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sourceMsgClassName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sourceUid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourceId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AckMessage}
 */
proto.io.haveno.protobuffer.AckMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AckMessage;
  return proto.io.haveno.protobuffer.AckMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AckMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AckMessage}
 */
proto.io.haveno.protobuffer.AckMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceMsgClassName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceUid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AckMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AckMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AckMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getSourceType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSourceMsgClassName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSourceUid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourceId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
*/
proto.io.haveno.protobuffer.AckMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string source_type = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setSourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string source_msg_class_name = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSourceMsgClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setSourceMsgClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string source_uid = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSourceUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setSourceUid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string source_id = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSourceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setSourceId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool success = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string error_message = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.AckMessage.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AckMessage} returns this
 */
proto.io.haveno.protobuffer.AckMessage.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    sealedAndSigned: (f = msg.getSealedAndSigned()) && proto.io.haveno.protobuffer.SealedAndSigned.toObject(includeInstance, f),
    addressPrefixHash: msg.getAddressPrefixHash_asB64(),
    uid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage;
  return proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.SealedAndSigned;
      reader.readMessage(value,proto.io.haveno.protobuffer.SealedAndSigned.deserializeBinaryFromReader);
      msg.setSealedAndSigned(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddressPrefixHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getSealedAndSigned();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.SealedAndSigned.serializeBinaryToWriter
    );
  }
  f = message.getAddressPrefixHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
*/
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SealedAndSigned sealed_and_signed = 2;
 * @return {?proto.io.haveno.protobuffer.SealedAndSigned}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getSealedAndSigned = function() {
  return /** @type{?proto.io.haveno.protobuffer.SealedAndSigned} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SealedAndSigned, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.SealedAndSigned|undefined} value
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
*/
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.setSealedAndSigned = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.clearSealedAndSigned = function() {
  return this.setSealedAndSigned(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.hasSealedAndSigned = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes address_prefix_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getAddressPrefixHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes address_prefix_hash = 3;
 * This is a type-conversion wrapper around `getAddressPrefixHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getAddressPrefixHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddressPrefixHash()));
};


/**
 * optional bytes address_prefix_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddressPrefixHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getAddressPrefixHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddressPrefixHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.setAddressPrefixHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string uid = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} returns this
 */
proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.InitTradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.InitTradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InitTradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    tradeAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tradePrice: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tradeFee: jspb.Message.getFieldWithDefault(msg, 6, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentAccountId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    paymentMethodId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    accountAgeWitnessSignatureOfOfferId: msg.getAccountAgeWitnessSignatureOfOfferId_asB64(),
    currentDate: jspb.Message.getFieldWithDefault(msg, 12, 0),
    makerNodeAddress: (f = msg.getMakerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    takerNodeAddress: (f = msg.getTakerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    arbitratorNodeAddress: (f = msg.getArbitratorNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    reserveTxHash: jspb.Message.getFieldWithDefault(msg, 16, ""),
    reserveTxHex: jspb.Message.getFieldWithDefault(msg, 17, ""),
    reserveTxKey: jspb.Message.getFieldWithDefault(msg, 18, ""),
    payoutAddress: jspb.Message.getFieldWithDefault(msg, 19, ""),
    makerSignature: msg.getMakerSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest}
 */
proto.io.haveno.protobuffer.InitTradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.InitTradeRequest;
  return proto.io.haveno.protobuffer.InitTradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.InitTradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest}
 */
proto.io.haveno.protobuffer.InitTradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradePrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentAccountId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountAgeWitnessSignatureOfOfferId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setMakerNodeAddress(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setTakerNodeAddress(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setArbitratorNodeAddress(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHash(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHex(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxKey(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutAddress(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMakerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.InitTradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.InitTradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InitTradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getTradeAmount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTradePrice();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTradeFee();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentAccountId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAccountAgeWitnessSignatureOfOfferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getMakerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getTakerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getArbitratorNodeAddress();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getReserveTxHash();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getReserveTxHex();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getReserveTxKey();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPayoutAddress();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getMakerSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      20,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
*/
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PubKeyRing pub_key_ring = 3;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
*/
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 trade_amount = 4;
 * @return {number}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getTradeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setTradeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 trade_price = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getTradePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setTradePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 trade_fee = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getTradeFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setTradeFee = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string account_id = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string payment_account_id = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getPaymentAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setPaymentAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string payment_method_id = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string uid = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bytes account_age_witness_signature_of_offer_id = 11;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getAccountAgeWitnessSignatureOfOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes account_age_witness_signature_of_offer_id = 11;
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignatureOfOfferId()`
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getAccountAgeWitnessSignatureOfOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountAgeWitnessSignatureOfOfferId()));
};


/**
 * optional bytes account_age_witness_signature_of_offer_id = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignatureOfOfferId()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getAccountAgeWitnessSignatureOfOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountAgeWitnessSignatureOfOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setAccountAgeWitnessSignatureOfOfferId = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional int64 current_date = 12;
 * @return {number}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional NodeAddress maker_node_address = 13;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getMakerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
*/
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setMakerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.clearMakerNodeAddress = function() {
  return this.setMakerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.hasMakerNodeAddress = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional NodeAddress taker_node_address = 14;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getTakerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
*/
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setTakerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.clearTakerNodeAddress = function() {
  return this.setTakerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.hasTakerNodeAddress = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional NodeAddress arbitrator_node_address = 15;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getArbitratorNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
*/
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setArbitratorNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.clearArbitratorNodeAddress = function() {
  return this.setArbitratorNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.hasArbitratorNodeAddress = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string reserve_tx_hash = 16;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getReserveTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setReserveTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string reserve_tx_hex = 17;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getReserveTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setReserveTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string reserve_tx_key = 18;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getReserveTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setReserveTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string payout_address = 19;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getPayoutAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setPayoutAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bytes maker_signature = 20;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getMakerSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes maker_signature = 20;
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getMakerSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMakerSignature()));
};


/**
 * optional bytes maker_signature = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.getMakerSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMakerSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.InitTradeRequest} returns this
 */
proto.io.haveno.protobuffer.InitTradeRequest.prototype.setMakerSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 20, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.InitMultisigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.InitMultisigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InitMultisigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    preparedMultisigHex: jspb.Message.getFieldWithDefault(msg, 4, ""),
    madeMultisigHex: jspb.Message.getFieldWithDefault(msg, 5, ""),
    exchangedMultisigHex: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.InitMultisigRequest;
  return proto.io.haveno.protobuffer.InitMultisigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.InitMultisigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreparedMultisigHex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMadeMultisigHex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangedMultisigHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.InitMultisigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.InitMultisigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InitMultisigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPreparedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMadeMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExchangedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 current_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string prepared_multisig_hex = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getPreparedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setPreparedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string made_multisig_hex = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getMadeMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setMadeMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string exchanged_multisig_hex = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.getExchangedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InitMultisigRequest} returns this
 */
proto.io.haveno.protobuffer.InitMultisigRequest.prototype.setExchangedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignContractRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignContractRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignContractRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paymentAccountPayloadHash: msg.getPaymentAccountPayloadHash_asB64(),
    payoutAddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    depositTxHash: jspb.Message.getFieldWithDefault(msg, 7, ""),
    accountAgeWitnessSignatureOfDepositHash: msg.getAccountAgeWitnessSignatureOfDepositHash_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignContractRequest}
 */
proto.io.haveno.protobuffer.SignContractRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignContractRequest;
  return proto.io.haveno.protobuffer.SignContractRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignContractRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignContractRequest}
 */
proto.io.haveno.protobuffer.SignContractRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentAccountPayloadHash(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxHash(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountAgeWitnessSignatureOfDepositHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignContractRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignContractRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignContractRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaymentAccountPayloadHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getPayoutAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountAgeWitnessSignatureOfDepositHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 current_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string account_id = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes payment_account_payload_hash = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getPaymentAccountPayloadHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes payment_account_payload_hash = 5;
 * This is a type-conversion wrapper around `getPaymentAccountPayloadHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getPaymentAccountPayloadHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentAccountPayloadHash()));
};


/**
 * optional bytes payment_account_payload_hash = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentAccountPayloadHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getPaymentAccountPayloadHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentAccountPayloadHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setPaymentAccountPayloadHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string payout_address = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getPayoutAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setPayoutAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string deposit_tx_hash = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bytes account_age_witness_signature_of_deposit_hash = 8;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getAccountAgeWitnessSignatureOfDepositHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes account_age_witness_signature_of_deposit_hash = 8;
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignatureOfDepositHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getAccountAgeWitnessSignatureOfDepositHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountAgeWitnessSignatureOfDepositHash()));
};


/**
 * optional bytes account_age_witness_signature_of_deposit_hash = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignatureOfDepositHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.getAccountAgeWitnessSignatureOfDepositHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountAgeWitnessSignatureOfDepositHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignContractRequest} returns this
 */
proto.io.haveno.protobuffer.SignContractRequest.prototype.setAccountAgeWitnessSignatureOfDepositHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignContractResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignContractResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignContractResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    contractAsJson: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contractSignature: msg.getContractSignature_asB64(),
    encryptedPaymentAccountPayload: msg.getEncryptedPaymentAccountPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignContractResponse}
 */
proto.io.haveno.protobuffer.SignContractResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignContractResponse;
  return proto.io.haveno.protobuffer.SignContractResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignContractResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignContractResponse}
 */
proto.io.haveno.protobuffer.SignContractResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAsJson(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractSignature(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedPaymentAccountPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignContractResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignContractResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignContractResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContractAsJson();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContractSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getEncryptedPaymentAccountPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 current_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string contract_as_json = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getContractAsJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setContractAsJson = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes contract_signature = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getContractSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes contract_signature = 5;
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getContractSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractSignature()));
};


/**
 * optional bytes contract_signature = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getContractSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setContractSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes encrypted_payment_account_payload = 6;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getEncryptedPaymentAccountPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes encrypted_payment_account_payload = 6;
 * This is a type-conversion wrapper around `getEncryptedPaymentAccountPayload()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getEncryptedPaymentAccountPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedPaymentAccountPayload()));
};


/**
 * optional bytes encrypted_payment_account_payload = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedPaymentAccountPayload()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.getEncryptedPaymentAccountPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedPaymentAccountPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignContractResponse} returns this
 */
proto.io.haveno.protobuffer.SignContractResponse.prototype.setEncryptedPaymentAccountPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DepositRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DepositRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    contractSignature: msg.getContractSignature_asB64(),
    depositTxHex: jspb.Message.getFieldWithDefault(msg, 5, ""),
    depositTxKey: jspb.Message.getFieldWithDefault(msg, 6, ""),
    paymentAccountKey: msg.getPaymentAccountKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DepositRequest}
 */
proto.io.haveno.protobuffer.DepositRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DepositRequest;
  return proto.io.haveno.protobuffer.DepositRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DepositRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DepositRequest}
 */
proto.io.haveno.protobuffer.DepositRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractSignature(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxHex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxKey(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentAccountKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DepositRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DepositRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContractSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getDepositTxHex();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDepositTxKey();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPaymentAccountKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 current_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes contract_signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getContractSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes contract_signature = 4;
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getContractSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractSignature()));
};


/**
 * optional bytes contract_signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getContractSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setContractSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string deposit_tx_hex = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getDepositTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setDepositTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string deposit_tx_key = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getDepositTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setDepositTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes payment_account_key = 7;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getPaymentAccountKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes payment_account_key = 7;
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getPaymentAccountKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentAccountKey()));
};


/**
 * optional bytes payment_account_key = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.getPaymentAccountKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentAccountKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DepositRequest} returns this
 */
proto.io.haveno.protobuffer.DepositRequest.prototype.setPaymentAccountKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DepositResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DepositResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    buyersecuritydeposit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sellersecuritydeposit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DepositResponse}
 */
proto.io.haveno.protobuffer.DepositResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DepositResponse;
  return proto.io.haveno.protobuffer.DepositResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DepositResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DepositResponse}
 */
proto.io.haveno.protobuffer.DepositResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuyersecuritydeposit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellersecuritydeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DepositResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DepositResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBuyersecuritydeposit();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getSellersecuritydeposit();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 current_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string error_message = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 buyerSecurityDeposit = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getBuyersecuritydeposit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setBuyersecuritydeposit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 sellerSecurityDeposit = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.getSellersecuritydeposit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DepositResponse} returns this
 */
proto.io.haveno.protobuffer.DepositResponse.prototype.setSellersecuritydeposit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DepositsConfirmedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sellerPaymentAccountKey: msg.getSellerPaymentAccountKey_asB64(),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DepositsConfirmedMessage;
  return proto.io.haveno.protobuffer.DepositsConfirmedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSellerPaymentAccountKey(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DepositsConfirmedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSellerPaymentAccountKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
*/
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PubKeyRing pub_key_ring = 3;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
*/
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string uid = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes seller_payment_account_key = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getSellerPaymentAccountKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes seller_payment_account_key = 5;
 * This is a type-conversion wrapper around `getSellerPaymentAccountKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getSellerPaymentAccountKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSellerPaymentAccountKey()));
};


/**
 * optional bytes seller_payment_account_key = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSellerPaymentAccountKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getSellerPaymentAccountKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSellerPaymentAccountKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setSellerPaymentAccountKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string updated_multisig_hex = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DepositsConfirmedMessage} returns this
 */
proto.io.haveno.protobuffer.DepositsConfirmedMessage.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentSentMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentSentMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentSentMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    counterCurrencyTxId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    counterCurrencyExtraData: jspb.Message.getFieldWithDefault(msg, 5, ""),
    payoutTxHex: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 7, ""),
    paymentAccountKey: msg.getPaymentAccountKey_asB64(),
    sellerAccountAgeWitness: (f = msg.getSellerAccountAgeWitness()) && proto.io.haveno.protobuffer.AccountAgeWitness.toObject(includeInstance, f),
    buyerSignature: msg.getBuyerSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentSentMessage;
  return proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentSentMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterCurrencyTxId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterCurrencyExtraData(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutTxHex(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentAccountKey(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader);
      msg.setSellerAccountAgeWitness(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBuyerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentSentMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getCounterCurrencyTxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCounterCurrencyExtraData();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPaymentAccountKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getSellerAccountAgeWitness();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter
    );
  }
  f = message.getBuyerSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string counter_currency_tx_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getCounterCurrencyTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setCounterCurrencyTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string uid = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string counter_currency_extra_data = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getCounterCurrencyExtraData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setCounterCurrencyExtraData = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string payout_tx_hex = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_multisig_hex = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bytes payment_account_key = 8;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getPaymentAccountKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes payment_account_key = 8;
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getPaymentAccountKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentAccountKey()));
};


/**
 * optional bytes payment_account_key = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getPaymentAccountKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentAccountKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setPaymentAccountKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional AccountAgeWitness seller_account_age_witness = 9;
 * @return {?proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getSellerAccountAgeWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.AccountAgeWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitness, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.AccountAgeWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setSellerAccountAgeWitness = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.clearSellerAccountAgeWitness = function() {
  return this.setSellerAccountAgeWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.hasSellerAccountAgeWitness = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes buyer_signature = 10;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getBuyerSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes buyer_signature = 10;
 * This is a type-conversion wrapper around `getBuyerSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getBuyerSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBuyerSignature()));
};


/**
 * optional bytes buyer_signature = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBuyerSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.getBuyerSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBuyerSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PaymentSentMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentSentMessage.prototype.setBuyerSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentReceivedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentReceivedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    unsignedPayoutTxHex: jspb.Message.getFieldWithDefault(msg, 4, ""),
    signedPayoutTxHex: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deferPublishPayout: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    buyerAccountAgeWitness: (f = msg.getBuyerAccountAgeWitness()) && proto.io.haveno.protobuffer.AccountAgeWitness.toObject(includeInstance, f),
    buyerSignedWitness: (f = msg.getBuyerSignedWitness()) && proto.io.haveno.protobuffer.SignedWitness.toObject(includeInstance, f),
    paymentSentMessage: (f = msg.getPaymentSentMessage()) && proto.io.haveno.protobuffer.PaymentSentMessage.toObject(includeInstance, f),
    sellerSignature: msg.getSellerSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentReceivedMessage;
  return proto.io.haveno.protobuffer.PaymentReceivedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentReceivedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnsignedPayoutTxHex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedPayoutTxHex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeferPublishPayout(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader);
      msg.setBuyerAccountAgeWitness(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.SignedWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedWitness.deserializeBinaryFromReader);
      msg.setBuyerSignedWitness(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.PaymentSentMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader);
      msg.setPaymentSentMessage(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSellerSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentReceivedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentReceivedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUnsignedPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSignedPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeferPublishPayout();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getBuyerAccountAgeWitness();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter
    );
  }
  f = message.getBuyerSignedWitness();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.SignedWitness.serializeBinaryToWriter
    );
  }
  f = message.getPaymentSentMessage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter
    );
  }
  f = message.getSellerSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string unsigned_payout_tx_hex = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getUnsignedPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setUnsignedPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string signed_payout_tx_hex = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getSignedPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setSignedPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string updated_multisig_hex = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool defer_publish_payout = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getDeferPublishPayout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setDeferPublishPayout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional AccountAgeWitness buyer_account_age_witness = 8;
 * @return {?proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getBuyerAccountAgeWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.AccountAgeWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitness, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.AccountAgeWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setBuyerAccountAgeWitness = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.clearBuyerAccountAgeWitness = function() {
  return this.setBuyerAccountAgeWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.hasBuyerAccountAgeWitness = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional SignedWitness buyer_signed_witness = 9;
 * @return {?proto.io.haveno.protobuffer.SignedWitness}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getBuyerSignedWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignedWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignedWitness, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignedWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setBuyerSignedWitness = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.clearBuyerSignedWitness = function() {
  return this.setBuyerSignedWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.hasBuyerSignedWitness = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PaymentSentMessage payment_sent_message = 10;
 * @return {?proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getPaymentSentMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentSentMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentSentMessage, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentSentMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
*/
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setPaymentSentMessage = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.clearPaymentSentMessage = function() {
  return this.setPaymentSentMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.hasPaymentSentMessage = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes seller_signature = 11;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getSellerSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes seller_signature = 11;
 * This is a type-conversion wrapper around `getSellerSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getSellerSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSellerSignature()));
};


/**
 * optional bytes seller_signature = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSellerSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.getSellerSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSellerSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PaymentReceivedMessage} returns this
 */
proto.io.haveno.protobuffer.PaymentReceivedMessage.prototype.setSellerSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payoutTx: msg.getPayoutTx_asB64(),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage;
  return proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayoutTx(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayoutTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes payout_tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getPayoutTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payout_tx = 2;
 * This is a type-conversion wrapper around `getPayoutTx()`
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getPayoutTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayoutTx()));
};


/**
 * optional bytes payout_tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayoutTx()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getPayoutTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayoutTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.setPayoutTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional NodeAddress sender_node_address = 3;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} returns this
*/
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string uid = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxPublishedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tradeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    txSignature: msg.getTxSignature_asB64(),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage;
  return proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxSignature(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTxSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string trade_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes tx_signature = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getTxSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx_signature = 2;
 * This is a type-conversion wrapper around `getTxSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getTxSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxSignature()));
};


/**
 * optional bytes tx_signature = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getTxSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.setTxSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional NodeAddress sender_node_address = 4;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} returns this
*/
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage} returns this
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MediatedPayoutTxSignatureMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.ChatMessage.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tradeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    traderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    senderIsTrader: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    message: jspb.Message.getFieldWithDefault(msg, 5, ""),
    attachmentsList: jspb.Message.toObjectList(msg.getAttachmentsList(),
    proto.io.haveno.protobuffer.Attachment.toObject, includeInstance),
    arrived: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    storedInMailbox: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isSystemMessage: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendMessageError: jspb.Message.getFieldWithDefault(msg, 12, ""),
    acknowledged: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    ackError: jspb.Message.getFieldWithDefault(msg, 14, ""),
    type: jspb.Message.getFieldWithDefault(msg, 15, 0),
    wasDisplayed: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ChatMessage;
  return proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraderId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSenderIsTrader(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.Attachment;
      reader.readMessage(value,proto.io.haveno.protobuffer.Attachment.deserializeBinaryFromReader);
      msg.addAttachments(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArrived(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoredInMailbox(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSystemMessage(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendMessageError(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcknowledged(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAckError(value);
      break;
    case 15:
      var value = /** @type {!proto.io.haveno.protobuffer.SupportType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasDisplayed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTraderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSenderIsTrader();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.io.haveno.protobuffer.Attachment.serializeBinaryToWriter
    );
  }
  f = message.getArrived();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getStoredInMailbox();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsSystemMessage();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendMessageError();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAcknowledged();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getAckError();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getWasDisplayed();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * optional int64 date = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string trade_id = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 trader_id = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getTraderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setTraderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool sender_is_trader = 4;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getSenderIsTrader = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setSenderIsTrader = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string message = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Attachment attachments = 6;
 * @return {!Array<!proto.io.haveno.protobuffer.Attachment>}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getAttachmentsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Attachment, 6));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Attachment>} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
*/
proto.io.haveno.protobuffer.ChatMessage.prototype.setAttachmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Attachment}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.addAttachments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.io.haveno.protobuffer.Attachment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.clearAttachmentsList = function() {
  return this.setAttachmentsList([]);
};


/**
 * optional bool arrived = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getArrived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setArrived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool stored_in_mailbox = 8;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getStoredInMailbox = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setStoredInMailbox = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_system_message = 9;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getIsSystemMessage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setIsSystemMessage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional NodeAddress sender_node_address = 10;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
*/
proto.io.haveno.protobuffer.ChatMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string uid = 11;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string send_message_error = 12;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getSendMessageError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setSendMessageError = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool acknowledged = 13;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getAcknowledged = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setAcknowledged = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string ack_error = 14;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getAckError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setAckError = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional SupportType type = 15;
 * @return {!proto.io.haveno.protobuffer.SupportType}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getType = function() {
  return /** @type {!proto.io.haveno.protobuffer.SupportType} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.SupportType} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional bool was_displayed = 16;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.getWasDisplayed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ChatMessage} returns this
 */
proto.io.haveno.protobuffer.ChatMessage.prototype.setWasDisplayed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DisputeOpenedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DisputeOpenedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    dispute: (f = msg.getDispute()) && proto.io.haveno.protobuffer.Dispute.toObject(includeInstance, f),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentSentMessage: (f = msg.getPaymentSentMessage()) && proto.io.haveno.protobuffer.PaymentSentMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DisputeOpenedMessage;
  return proto.io.haveno.protobuffer.DisputeOpenedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DisputeOpenedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Dispute;
      reader.readMessage(value,proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader);
      msg.setDispute(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 4:
      var value = /** @type {!proto.io.haveno.protobuffer.SupportType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.PaymentSentMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader);
      msg.setPaymentSentMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DisputeOpenedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DisputeOpenedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDispute();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaymentSentMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional Dispute dispute = 1;
 * @return {?proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getDispute = function() {
  return /** @type{?proto.io.haveno.protobuffer.Dispute} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Dispute, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Dispute|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
*/
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setDispute = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.clearDispute = function() {
  return this.setDispute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.hasDispute = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
*/
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SupportType type = 4;
 * @return {!proto.io.haveno.protobuffer.SupportType}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getType = function() {
  return /** @type {!proto.io.haveno.protobuffer.SupportType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.SupportType} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string updated_multisig_hex = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional PaymentSentMessage payment_sent_message = 6;
 * @return {?proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.getPaymentSentMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentSentMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentSentMessage, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentSentMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
*/
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.setPaymentSentMessage = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeOpenedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.clearPaymentSentMessage = function() {
  return this.setPaymentSentMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeOpenedMessage.prototype.hasPaymentSentMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DisputeClosedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DisputeClosedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    disputeResult: (f = msg.getDisputeResult()) && proto.io.haveno.protobuffer.DisputeResult.toObject(includeInstance, f),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 5, ""),
    unsignedPayoutTxHex: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deferPublishPayout: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DisputeClosedMessage;
  return proto.io.haveno.protobuffer.DisputeClosedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DisputeClosedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.DisputeResult;
      reader.readMessage(value,proto.io.haveno.protobuffer.DisputeResult.deserializeBinaryFromReader);
      msg.setDisputeResult(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 4:
      var value = /** @type {!proto.io.haveno.protobuffer.SupportType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnsignedPayoutTxHex(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeferPublishPayout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DisputeClosedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DisputeClosedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisputeResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.DisputeResult.serializeBinaryToWriter
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUnsignedPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeferPublishPayout();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DisputeResult dispute_result = 2;
 * @return {?proto.io.haveno.protobuffer.DisputeResult}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getDisputeResult = function() {
  return /** @type{?proto.io.haveno.protobuffer.DisputeResult} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DisputeResult, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.DisputeResult|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
*/
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setDisputeResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.clearDisputeResult = function() {
  return this.setDisputeResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.hasDisputeResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional NodeAddress sender_node_address = 3;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
*/
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SupportType type = 4;
 * @return {!proto.io.haveno.protobuffer.SupportType}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getType = function() {
  return /** @type {!proto.io.haveno.protobuffer.SupportType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.SupportType} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string updated_multisig_hex = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string unsigned_payout_tx_hex = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getUnsignedPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setUnsignedPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool defer_publish_payout = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.getDeferPublishPayout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.DisputeClosedMessage} returns this
 */
proto.io.haveno.protobuffer.DisputeClosedMessage.prototype.setDeferPublishPayout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PrivateNotificationMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    privateNotificationPayload: (f = msg.getPrivateNotificationPayload()) && proto.io.haveno.protobuffer.PrivateNotificationPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PrivateNotificationMessage;
  return proto.io.haveno.protobuffer.PrivateNotificationMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PrivateNotificationPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PrivateNotificationPayload.deserializeBinaryFromReader);
      msg.setPrivateNotificationPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PrivateNotificationMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPrivateNotificationPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PrivateNotificationPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage} returns this
*/
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PrivateNotificationPayload private_notification_payload = 3;
 * @return {?proto.io.haveno.protobuffer.PrivateNotificationPayload}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.getPrivateNotificationPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PrivateNotificationPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PrivateNotificationPayload, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PrivateNotificationPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage} returns this
*/
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.setPrivateNotificationPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationMessage} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.clearPrivateNotificationPayload = function() {
  return this.setPrivateNotificationPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PrivateNotificationMessage.prototype.hasPrivateNotificationPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NodeAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NodeAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NodeAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.NodeAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NodeAddress;
  return proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NodeAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NodeAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string host_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.getHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.NodeAddress} returns this
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.setHostName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.NodeAddress} returns this
 */
proto.io.haveno.protobuffer.NodeAddress.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Peer.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Peer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Peer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Peer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Peer.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    date: jspb.Message.getFieldWithDefault(msg, 2, 0),
    supportedCapabilitiesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Peer}
 */
proto.io.haveno.protobuffer.Peer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Peer;
  return proto.io.haveno.protobuffer.Peer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Peer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Peer}
 */
proto.io.haveno.protobuffer.Peer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedCapabilities(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Peer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Peer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Peer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Peer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSupportedCapabilitiesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Peer.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
*/
proto.io.haveno.protobuffer.Peer.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
 */
proto.io.haveno.protobuffer.Peer.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Peer.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 date = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.Peer.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
 */
proto.io.haveno.protobuffer.Peer.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int32 supported_capabilities = 3;
 * @return {!Array<number>}
 */
proto.io.haveno.protobuffer.Peer.prototype.getSupportedCapabilitiesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
 */
proto.io.haveno.protobuffer.Peer.prototype.setSupportedCapabilitiesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
 */
proto.io.haveno.protobuffer.Peer.prototype.addSupportedCapabilities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Peer} returns this
 */
proto.io.haveno.protobuffer.Peer.prototype.clearSupportedCapabilitiesList = function() {
  return this.setSupportedCapabilitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PubKeyRing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PubKeyRing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PubKeyRing.toObject = function(includeInstance, msg) {
  var f, obj = {
    signaturePubKeyBytes: msg.getSignaturePubKeyBytes_asB64(),
    encryptionPubKeyBytes: msg.getEncryptionPubKeyBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.PubKeyRing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PubKeyRing;
  return proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PubKeyRing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignaturePubKeyBytes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptionPubKeyBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PubKeyRing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignaturePubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEncryptionPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes signature_pub_key_bytes = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getSignaturePubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes signature_pub_key_bytes = 1;
 * This is a type-conversion wrapper around `getSignaturePubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getSignaturePubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignaturePubKeyBytes()));
};


/**
 * optional bytes signature_pub_key_bytes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignaturePubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getSignaturePubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignaturePubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PubKeyRing} returns this
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.setSignaturePubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes encryption_pub_key_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getEncryptionPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes encryption_pub_key_bytes = 2;
 * This is a type-conversion wrapper around `getEncryptionPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getEncryptionPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptionPubKeyBytes()));
};


/**
 * optional bytes encryption_pub_key_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptionPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.getEncryptionPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptionPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PubKeyRing} returns this
 */
proto.io.haveno.protobuffer.PubKeyRing.prototype.setEncryptionPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SealedAndSigned.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SealedAndSigned} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SealedAndSigned.toObject = function(includeInstance, msg) {
  var f, obj = {
    encryptedSecretKey: msg.getEncryptedSecretKey_asB64(),
    encryptedPayloadWithHmac: msg.getEncryptedPayloadWithHmac_asB64(),
    signature: msg.getSignature_asB64(),
    sigPublicKeyBytes: msg.getSigPublicKeyBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned}
 */
proto.io.haveno.protobuffer.SealedAndSigned.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SealedAndSigned;
  return proto.io.haveno.protobuffer.SealedAndSigned.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SealedAndSigned} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned}
 */
proto.io.haveno.protobuffer.SealedAndSigned.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedSecretKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedPayloadWithHmac(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSigPublicKeyBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SealedAndSigned.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SealedAndSigned} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SealedAndSigned.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncryptedSecretKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEncryptedPayloadWithHmac_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSigPublicKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes encrypted_secret_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedSecretKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes encrypted_secret_key = 1;
 * This is a type-conversion wrapper around `getEncryptedSecretKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedSecretKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedSecretKey()));
};


/**
 * optional bytes encrypted_secret_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedSecretKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedSecretKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedSecretKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned} returns this
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.setEncryptedSecretKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes encrypted_payload_with_hmac = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedPayloadWithHmac = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes encrypted_payload_with_hmac = 2;
 * This is a type-conversion wrapper around `getEncryptedPayloadWithHmac()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedPayloadWithHmac_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedPayloadWithHmac()));
};


/**
 * optional bytes encrypted_payload_with_hmac = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedPayloadWithHmac()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getEncryptedPayloadWithHmac_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedPayloadWithHmac()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned} returns this
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.setEncryptedPayloadWithHmac = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned} returns this
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes sig_public_key_bytes = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSigPublicKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes sig_public_key_bytes = 4;
 * This is a type-conversion wrapper around `getSigPublicKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSigPublicKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSigPublicKeyBytes()));
};


/**
 * optional bytes sig_public_key_bytes = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSigPublicKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.getSigPublicKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSigPublicKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SealedAndSigned} returns this
 */
proto.io.haveno.protobuffer.SealedAndSigned.prototype.setSigPublicKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.StoragePayload.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.StoragePayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  ALERT: 1,
  ARBITRATOR: 2,
  MEDIATOR: 3,
  FILTER: 4,
  MAILBOX_STORAGE_PAYLOAD: 5,
  OFFER_PAYLOAD: 6,
  REFUND_AGENT: 7
};

/**
 * @return {proto.io.haveno.protobuffer.StoragePayload.MessageCase}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.StoragePayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.StoragePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.StoragePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StoragePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    alert: (f = msg.getAlert()) && proto.io.haveno.protobuffer.Alert.toObject(includeInstance, f),
    arbitrator: (f = msg.getArbitrator()) && proto.io.haveno.protobuffer.Arbitrator.toObject(includeInstance, f),
    mediator: (f = msg.getMediator()) && proto.io.haveno.protobuffer.Mediator.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.io.haveno.protobuffer.Filter.toObject(includeInstance, f),
    mailboxStoragePayload: (f = msg.getMailboxStoragePayload()) && proto.io.haveno.protobuffer.MailboxStoragePayload.toObject(includeInstance, f),
    offerPayload: (f = msg.getOfferPayload()) && proto.io.haveno.protobuffer.OfferPayload.toObject(includeInstance, f),
    refundAgent: (f = msg.getRefundAgent()) && proto.io.haveno.protobuffer.RefundAgent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.StoragePayload}
 */
proto.io.haveno.protobuffer.StoragePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.StoragePayload;
  return proto.io.haveno.protobuffer.StoragePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.StoragePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.StoragePayload}
 */
proto.io.haveno.protobuffer.StoragePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Alert;
      reader.readMessage(value,proto.io.haveno.protobuffer.Alert.deserializeBinaryFromReader);
      msg.setAlert(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.Arbitrator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Arbitrator.deserializeBinaryFromReader);
      msg.setArbitrator(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.Mediator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Mediator.deserializeBinaryFromReader);
      msg.setMediator(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.Filter;
      reader.readMessage(value,proto.io.haveno.protobuffer.Filter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.MailboxStoragePayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.MailboxStoragePayload.deserializeBinaryFromReader);
      msg.setMailboxStoragePayload(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.OfferPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader);
      msg.setOfferPayload(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.RefundAgent;
      reader.readMessage(value,proto.io.haveno.protobuffer.RefundAgent.deserializeBinaryFromReader);
      msg.setRefundAgent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.StoragePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.StoragePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StoragePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlert();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Alert.serializeBinaryToWriter
    );
  }
  f = message.getArbitrator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.Arbitrator.serializeBinaryToWriter
    );
  }
  f = message.getMediator();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.Mediator.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.Filter.serializeBinaryToWriter
    );
  }
  f = message.getMailboxStoragePayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.MailboxStoragePayload.serializeBinaryToWriter
    );
  }
  f = message.getOfferPayload();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter
    );
  }
  f = message.getRefundAgent();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.RefundAgent.serializeBinaryToWriter
    );
  }
};


/**
 * optional Alert alert = 1;
 * @return {?proto.io.haveno.protobuffer.Alert}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getAlert = function() {
  return /** @type{?proto.io.haveno.protobuffer.Alert} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Alert, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Alert|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setAlert = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearAlert = function() {
  return this.setAlert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasAlert = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Arbitrator arbitrator = 2;
 * @return {?proto.io.haveno.protobuffer.Arbitrator}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getArbitrator = function() {
  return /** @type{?proto.io.haveno.protobuffer.Arbitrator} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Arbitrator, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.Arbitrator|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setArbitrator = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearArbitrator = function() {
  return this.setArbitrator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasArbitrator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Mediator mediator = 3;
 * @return {?proto.io.haveno.protobuffer.Mediator}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getMediator = function() {
  return /** @type{?proto.io.haveno.protobuffer.Mediator} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Mediator, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.Mediator|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setMediator = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearMediator = function() {
  return this.setMediator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasMediator = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Filter filter = 4;
 * @return {?proto.io.haveno.protobuffer.Filter}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getFilter = function() {
  return /** @type{?proto.io.haveno.protobuffer.Filter} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Filter, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.Filter|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MailboxStoragePayload mailbox_storage_payload = 5;
 * @return {?proto.io.haveno.protobuffer.MailboxStoragePayload}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getMailboxStoragePayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.MailboxStoragePayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MailboxStoragePayload, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.MailboxStoragePayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setMailboxStoragePayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearMailboxStoragePayload = function() {
  return this.setMailboxStoragePayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasMailboxStoragePayload = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional OfferPayload offer_payload = 6;
 * @return {?proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getOfferPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferPayload, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setOfferPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearOfferPayload = function() {
  return this.setOfferPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasOfferPayload = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RefundAgent refund_agent = 7;
 * @return {?proto.io.haveno.protobuffer.RefundAgent}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.getRefundAgent = function() {
  return /** @type{?proto.io.haveno.protobuffer.RefundAgent} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RefundAgent, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.RefundAgent|undefined} value
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
*/
proto.io.haveno.protobuffer.StoragePayload.prototype.setRefundAgent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.haveno.protobuffer.StoragePayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StoragePayload} returns this
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.clearRefundAgent = function() {
  return this.setRefundAgent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StoragePayload.prototype.hasRefundAgent = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  ACCOUNT_AGE_WITNESS: 1,
  SIGNED_WITNESS: 2,
  TRADE_STATISTICS3: 3
};

/**
 * @return {proto.io.haveno.protobuffer.PersistableNetworkPayload.MessageCase}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.PersistableNetworkPayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PersistableNetworkPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PersistableNetworkPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountAgeWitness: (f = msg.getAccountAgeWitness()) && proto.io.haveno.protobuffer.AccountAgeWitness.toObject(includeInstance, f),
    signedWitness: (f = msg.getSignedWitness()) && proto.io.haveno.protobuffer.SignedWitness.toObject(includeInstance, f),
    tradeStatistics3: (f = msg.getTradeStatistics3()) && proto.io.haveno.protobuffer.TradeStatistics3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PersistableNetworkPayload;
  return proto.io.haveno.protobuffer.PersistableNetworkPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PersistableNetworkPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader);
      msg.setAccountAgeWitness(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.SignedWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedWitness.deserializeBinaryFromReader);
      msg.setSignedWitness(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.TradeStatistics3;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeStatistics3.deserializeBinaryFromReader);
      msg.setTradeStatistics3(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PersistableNetworkPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PersistableNetworkPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountAgeWitness();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter
    );
  }
  f = message.getSignedWitness();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.SignedWitness.serializeBinaryToWriter
    );
  }
  f = message.getTradeStatistics3();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.TradeStatistics3.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountAgeWitness account_age_witness = 1;
 * @return {?proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.getAccountAgeWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.AccountAgeWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitness, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.AccountAgeWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
*/
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.setAccountAgeWitness = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.clearAccountAgeWitness = function() {
  return this.setAccountAgeWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.hasAccountAgeWitness = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SignedWitness signed_witness = 2;
 * @return {?proto.io.haveno.protobuffer.SignedWitness}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.getSignedWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignedWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignedWitness, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignedWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
*/
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.setSignedWitness = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.clearSignedWitness = function() {
  return this.setSignedWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.hasSignedWitness = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TradeStatistics3 trade_statistics3 = 3;
 * @return {?proto.io.haveno.protobuffer.TradeStatistics3}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.getTradeStatistics3 = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradeStatistics3} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradeStatistics3, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradeStatistics3|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
*/
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.setTradeStatistics3 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.PersistableNetworkPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableNetworkPayload} returns this
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.clearTradeStatistics3 = function() {
  return this.setTradeStatistics3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableNetworkPayload.prototype.hasTradeStatistics3 = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ProtectedStorageEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ProtectedStorageEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    storagepayload: (f = msg.getStoragepayload()) && proto.io.haveno.protobuffer.StoragePayload.toObject(includeInstance, f),
    ownerPubKeyBytes: msg.getOwnerPubKeyBytes_asB64(),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    signature: msg.getSignature_asB64(),
    creationTimeStamp: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ProtectedStorageEntry;
  return proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ProtectedStorageEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.StoragePayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.StoragePayload.deserializeBinaryFromReader);
      msg.setStoragepayload(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwnerPubKeyBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreationTimeStamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ProtectedStorageEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ProtectedStorageEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoragepayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.StoragePayload.serializeBinaryToWriter
    );
  }
  f = message.getOwnerPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getCreationTimeStamp();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional StoragePayload storagePayload = 1;
 * @return {?proto.io.haveno.protobuffer.StoragePayload}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getStoragepayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.StoragePayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.StoragePayload, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.StoragePayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
*/
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.setStoragepayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.clearStoragepayload = function() {
  return this.setStoragepayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.hasStoragepayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes owner_pub_key_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getOwnerPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes owner_pub_key_bytes = 2;
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getOwnerPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwnerPubKeyBytes()));
};


/**
 * optional bytes owner_pub_key_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getOwnerPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwnerPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.setOwnerPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int32 sequence_number = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes signature = 4;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 creation_time_stamp = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.getCreationTimeStamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ProtectedStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedStorageEntry.prototype.setCreationTimeStamp = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.MessageCase = {
  MESSAGE_NOT_SET: 0,
  PROTECTED_STORAGE_ENTRY: 1,
  PROTECTED_MAILBOX_STORAGE_ENTRY: 2
};

/**
 * @return {proto.io.haveno.protobuffer.StorageEntryWrapper.MessageCase}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.StorageEntryWrapper.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.StorageEntryWrapper.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.StorageEntryWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.StorageEntryWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    protectedStorageEntry: (f = msg.getProtectedStorageEntry()) && proto.io.haveno.protobuffer.ProtectedStorageEntry.toObject(includeInstance, f),
    protectedMailboxStorageEntry: (f = msg.getProtectedMailboxStorageEntry()) && proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.StorageEntryWrapper;
  return proto.io.haveno.protobuffer.StorageEntryWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.StorageEntryWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ProtectedStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinaryFromReader);
      msg.setProtectedStorageEntry(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinaryFromReader);
      msg.setProtectedMailboxStorageEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.StorageEntryWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.StorageEntryWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtectedStorageEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ProtectedStorageEntry.serializeBinaryToWriter
    );
  }
  f = message.getProtectedMailboxStorageEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtectedStorageEntry protected_storage_entry = 1;
 * @return {?proto.io.haveno.protobuffer.ProtectedStorageEntry}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.getProtectedStorageEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedStorageEntry, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper} returns this
*/
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.setProtectedStorageEntry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.haveno.protobuffer.StorageEntryWrapper.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper} returns this
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.clearProtectedStorageEntry = function() {
  return this.setProtectedStorageEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.hasProtectedStorageEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProtectedMailboxStorageEntry protected_mailbox_storage_entry = 2;
 * @return {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.getProtectedMailboxStorageEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper} returns this
*/
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.setProtectedMailboxStorageEntry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.StorageEntryWrapper.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.StorageEntryWrapper} returns this
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.clearProtectedMailboxStorageEntry = function() {
  return this.setProtectedMailboxStorageEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.StorageEntryWrapper.prototype.hasProtectedMailboxStorageEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.io.haveno.protobuffer.ProtectedStorageEntry.toObject(includeInstance, f),
    receiversPubKeyBytes: msg.getReceiversPubKeyBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry;
  return proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ProtectedStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedStorageEntry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReceiversPubKeyBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ProtectedStorageEntry.serializeBinaryToWriter
    );
  }
  f = message.getReceiversPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional ProtectedStorageEntry entry = 1;
 * @return {?proto.io.haveno.protobuffer.ProtectedStorageEntry}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.getEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedStorageEntry, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} returns this
*/
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes receivers_pub_key_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.getReceiversPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes receivers_pub_key_bytes = 2;
 * This is a type-conversion wrapper around `getReceiversPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.getReceiversPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReceiversPubKeyBytes()));
};


/**
 * optional bytes receivers_pub_key_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReceiversPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.getReceiversPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReceiversPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} returns this
 */
proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.prototype.setReceiversPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DataAndSeqNrPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DataAndSeqNrPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.io.haveno.protobuffer.StoragePayload.toObject(includeInstance, f),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DataAndSeqNrPair}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DataAndSeqNrPair;
  return proto.io.haveno.protobuffer.DataAndSeqNrPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DataAndSeqNrPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DataAndSeqNrPair}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.StoragePayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.StoragePayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DataAndSeqNrPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DataAndSeqNrPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.StoragePayload.serializeBinaryToWriter
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional StoragePayload payload = 1;
 * @return {?proto.io.haveno.protobuffer.StoragePayload}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.getPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.StoragePayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.StoragePayload, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.StoragePayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.DataAndSeqNrPair} returns this
*/
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DataAndSeqNrPair} returns this
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 sequence_number = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DataAndSeqNrPair} returns this
 */
proto.io.haveno.protobuffer.DataAndSeqNrPair.prototype.setSequenceNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.MailboxMessageList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MailboxMessageList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MailboxMessageList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MailboxMessageList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxMessageList.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailboxItemList: jspb.Message.toObjectList(msg.getMailboxItemList(),
    proto.io.haveno.protobuffer.MailboxItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MailboxMessageList}
 */
proto.io.haveno.protobuffer.MailboxMessageList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MailboxMessageList;
  return proto.io.haveno.protobuffer.MailboxMessageList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MailboxMessageList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MailboxMessageList}
 */
proto.io.haveno.protobuffer.MailboxMessageList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.MailboxItem;
      reader.readMessage(value,proto.io.haveno.protobuffer.MailboxItem.deserializeBinaryFromReader);
      msg.addMailboxItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MailboxMessageList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MailboxMessageList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MailboxMessageList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxMessageList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMailboxItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.MailboxItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MailboxItem mailbox_item = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.MailboxItem>}
 */
proto.io.haveno.protobuffer.MailboxMessageList.prototype.getMailboxItemList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.MailboxItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.MailboxItem, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.MailboxItem>} value
 * @return {!proto.io.haveno.protobuffer.MailboxMessageList} returns this
*/
proto.io.haveno.protobuffer.MailboxMessageList.prototype.setMailboxItemList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.MailboxItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.MailboxItem}
 */
proto.io.haveno.protobuffer.MailboxMessageList.prototype.addMailboxItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.MailboxItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.MailboxMessageList} returns this
 */
proto.io.haveno.protobuffer.MailboxMessageList.prototype.clearMailboxItemList = function() {
  return this.setMailboxItemList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RemovedPayloadsMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RemovedPayloadsMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    dateByHashesMap: (f = msg.getDateByHashesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RemovedPayloadsMap}
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RemovedPayloadsMap;
  return proto.io.haveno.protobuffer.RemovedPayloadsMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RemovedPayloadsMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RemovedPayloadsMap}
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDateByHashesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RemovedPayloadsMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RemovedPayloadsMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDateByHashesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint64);
  }
};


/**
 * map<string, uint64> date_by_hashes = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.prototype.getDateByHashesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.RemovedPayloadsMap} returns this
 */
proto.io.haveno.protobuffer.RemovedPayloadsMap.prototype.clearDateByHashesMap = function() {
  this.getDateByHashesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.IgnoredMailboxMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.IgnoredMailboxMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.IgnoredMailboxMap}
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.IgnoredMailboxMap;
  return proto.io.haveno.protobuffer.IgnoredMailboxMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.IgnoredMailboxMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.IgnoredMailboxMap}
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readUint64, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.IgnoredMailboxMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.IgnoredMailboxMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeUint64);
  }
};


/**
 * map<string, uint64> data = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.IgnoredMailboxMap} returns this
 */
proto.io.haveno.protobuffer.IgnoredMailboxMap.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MailboxItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MailboxItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    protectedMailboxStorageEntry: (f = msg.getProtectedMailboxStorageEntry()) && proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.toObject(includeInstance, f),
    decryptedMessageWithPubKey: (f = msg.getDecryptedMessageWithPubKey()) && proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MailboxItem}
 */
proto.io.haveno.protobuffer.MailboxItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MailboxItem;
  return proto.io.haveno.protobuffer.MailboxItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MailboxItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MailboxItem}
 */
proto.io.haveno.protobuffer.MailboxItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.deserializeBinaryFromReader);
      msg.setProtectedMailboxStorageEntry(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.DecryptedMessageWithPubKey;
      reader.readMessage(value,proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.deserializeBinaryFromReader);
      msg.setDecryptedMessageWithPubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MailboxItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MailboxItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtectedMailboxStorageEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry.serializeBinaryToWriter
    );
  }
  f = message.getDecryptedMessageWithPubKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProtectedMailboxStorageEntry protected_mailbox_storage_entry = 1;
 * @return {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.getProtectedMailboxStorageEntry = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProtectedMailboxStorageEntry|undefined} value
 * @return {!proto.io.haveno.protobuffer.MailboxItem} returns this
*/
proto.io.haveno.protobuffer.MailboxItem.prototype.setProtectedMailboxStorageEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MailboxItem} returns this
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.clearProtectedMailboxStorageEntry = function() {
  return this.setProtectedMailboxStorageEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.hasProtectedMailboxStorageEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DecryptedMessageWithPubKey decrypted_message_with_pub_key = 2;
 * @return {?proto.io.haveno.protobuffer.DecryptedMessageWithPubKey}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.getDecryptedMessageWithPubKey = function() {
  return /** @type{?proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DecryptedMessageWithPubKey, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.DecryptedMessageWithPubKey|undefined} value
 * @return {!proto.io.haveno.protobuffer.MailboxItem} returns this
*/
proto.io.haveno.protobuffer.MailboxItem.prototype.setDecryptedMessageWithPubKey = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MailboxItem} returns this
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.clearDecryptedMessageWithPubKey = function() {
  return this.setDecryptedMessageWithPubKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MailboxItem.prototype.hasDecryptedMessageWithPubKey = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    networkEnvelope: (f = msg.getNetworkEnvelope()) && proto.io.haveno.protobuffer.NetworkEnvelope.toObject(includeInstance, f),
    signaturePubKeyBytes: msg.getSignaturePubKeyBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DecryptedMessageWithPubKey;
  return proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NetworkEnvelope;
      reader.readMessage(value,proto.io.haveno.protobuffer.NetworkEnvelope.deserializeBinaryFromReader);
      msg.setNetworkEnvelope(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignaturePubKeyBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNetworkEnvelope();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NetworkEnvelope.serializeBinaryToWriter
    );
  }
  f = message.getSignaturePubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional NetworkEnvelope network_envelope = 1;
 * @return {?proto.io.haveno.protobuffer.NetworkEnvelope}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.getNetworkEnvelope = function() {
  return /** @type{?proto.io.haveno.protobuffer.NetworkEnvelope} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NetworkEnvelope, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NetworkEnvelope|undefined} value
 * @return {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} returns this
*/
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.setNetworkEnvelope = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} returns this
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.clearNetworkEnvelope = function() {
  return this.setNetworkEnvelope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.hasNetworkEnvelope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes signature_pub_key_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.getSignaturePubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signature_pub_key_bytes = 2;
 * This is a type-conversion wrapper around `getSignaturePubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.getSignaturePubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignaturePubKeyBytes()));
};


/**
 * optional bytes signature_pub_key_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignaturePubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.getSignaturePubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignaturePubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DecryptedMessageWithPubKey} returns this
 */
proto.io.haveno.protobuffer.DecryptedMessageWithPubKey.prototype.setSignaturePubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PrivateNotificationPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signatureAsBase64: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sigPublicKeyBytes: msg.getSigPublicKeyBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationPayload}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PrivateNotificationPayload;
  return proto.io.haveno.protobuffer.PrivateNotificationPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationPayload}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAsBase64(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSigPublicKeyBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PrivateNotificationPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PrivateNotificationPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignatureAsBase64();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSigPublicKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationPayload} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string signature_as_base64 = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.getSignatureAsBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationPayload} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.setSignatureAsBase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes sig_public_key_bytes = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.getSigPublicKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes sig_public_key_bytes = 3;
 * This is a type-conversion wrapper around `getSigPublicKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.getSigPublicKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSigPublicKeyBytes()));
};


/**
 * optional bytes sig_public_key_bytes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSigPublicKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.getSigPublicKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSigPublicKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.PrivateNotificationPayload} returns this
 */
proto.io.haveno.protobuffer.PrivateNotificationPayload.prototype.setSigPublicKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccountFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentMethodId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    getMethodName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccountFilter;
  return proto.io.haveno.protobuffer.PaymentAccountFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGetMethodName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccountFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGetMethodName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string payment_method_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.getPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.setPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string get_method_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.getGetMethodName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.setGetMethodName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFilter.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Alert.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Alert.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Alert} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Alert.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isUpdateInfo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    signatureAsBase64: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ownerPubKeyBytes: msg.getOwnerPubKeyBytes_asB64(),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : [],
    isPreReleaseInfo: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Alert}
 */
proto.io.haveno.protobuffer.Alert.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Alert;
  return proto.io.haveno.protobuffer.Alert.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Alert} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Alert}
 */
proto.io.haveno.protobuffer.Alert.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUpdateInfo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAsBase64(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwnerPubKeyBytes(value);
      break;
    case 6:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPreReleaseInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Alert.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Alert.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Alert} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Alert.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsUpdateInfo();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSignatureAsBase64();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwnerPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getIsPreReleaseInfo();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Alert.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.Alert.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_update_info = 3;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Alert.prototype.getIsUpdateInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setIsUpdateInfo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string signature_as_base64 = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.Alert.prototype.getSignatureAsBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setSignatureAsBase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Alert.prototype.getOwnerPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Alert.prototype.getOwnerPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwnerPubKeyBytes()));
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Alert.prototype.getOwnerPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwnerPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setOwnerPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * map<string, string> extra_data = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.Alert.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};


/**
 * optional bool is_pre_release_info = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Alert.prototype.getIsPreReleaseInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Alert} returns this
 */
proto.io.haveno.protobuffer.Alert.prototype.setIsPreReleaseInfo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Arbitrator.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Arbitrator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Arbitrator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Arbitrator.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    languageCodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    registrationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    registrationSignature: jspb.Message.getFieldWithDefault(msg, 4, ""),
    registrationPubKey: msg.getRegistrationPubKey_asB64(),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    info: jspb.Message.getFieldWithDefault(msg, 8, ""),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Arbitrator}
 */
proto.io.haveno.protobuffer.Arbitrator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Arbitrator;
  return proto.io.haveno.protobuffer.Arbitrator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Arbitrator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Arbitrator}
 */
proto.io.haveno.protobuffer.Arbitrator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguageCodes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRegistrationDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationSignature(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRegistrationPubKey(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 9:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Arbitrator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Arbitrator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Arbitrator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getLanguageCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegistrationDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRegistrationSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegistrationPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
*/
proto.io.haveno.protobuffer.Arbitrator.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string language_codes = 2;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getLanguageCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setLanguageCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.addLanguageCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.clearLanguageCodesList = function() {
  return this.setLanguageCodesList([]);
};


/**
 * optional int64 registration_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getRegistrationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setRegistrationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string registration_signature = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getRegistrationSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setRegistrationSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes registration_pub_key = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getRegistrationPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes registration_pub_key = 5;
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getRegistrationPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRegistrationPubKey()));
};


/**
 * optional bytes registration_pub_key = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getRegistrationPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRegistrationPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setRegistrationPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional PubKeyRing pub_key_ring = 6;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
*/
proto.io.haveno.protobuffer.Arbitrator.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string email_address = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string info = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> extra_data = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.Arbitrator} returns this
 */
proto.io.haveno.protobuffer.Arbitrator.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Mediator.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Mediator.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Mediator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Mediator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Mediator.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    languageCodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    registrationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    registrationSignature: jspb.Message.getFieldWithDefault(msg, 4, ""),
    registrationPubKey: msg.getRegistrationPubKey_asB64(),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    info: jspb.Message.getFieldWithDefault(msg, 8, ""),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Mediator}
 */
proto.io.haveno.protobuffer.Mediator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Mediator;
  return proto.io.haveno.protobuffer.Mediator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Mediator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Mediator}
 */
proto.io.haveno.protobuffer.Mediator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguageCodes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRegistrationDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationSignature(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRegistrationPubKey(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 9:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Mediator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Mediator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Mediator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Mediator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getLanguageCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegistrationDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRegistrationSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegistrationPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
*/
proto.io.haveno.protobuffer.Mediator.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Mediator.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string language_codes = 2;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getLanguageCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setLanguageCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.addLanguageCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.clearLanguageCodesList = function() {
  return this.setLanguageCodesList([]);
};


/**
 * optional int64 registration_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getRegistrationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setRegistrationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string registration_signature = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getRegistrationSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setRegistrationSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes registration_pub_key = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getRegistrationPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes registration_pub_key = 5;
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getRegistrationPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRegistrationPubKey()));
};


/**
 * optional bytes registration_pub_key = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getRegistrationPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRegistrationPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setRegistrationPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional PubKeyRing pub_key_ring = 6;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
*/
proto.io.haveno.protobuffer.Mediator.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Mediator.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string email_address = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string info = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> extra_data = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.Mediator.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.Mediator} returns this
 */
proto.io.haveno.protobuffer.Mediator.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.RefundAgent.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RefundAgent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RefundAgent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefundAgent.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    languageCodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    registrationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    registrationSignature: jspb.Message.getFieldWithDefault(msg, 4, ""),
    registrationPubKey: msg.getRegistrationPubKey_asB64(),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    info: jspb.Message.getFieldWithDefault(msg, 8, ""),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RefundAgent}
 */
proto.io.haveno.protobuffer.RefundAgent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RefundAgent;
  return proto.io.haveno.protobuffer.RefundAgent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RefundAgent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RefundAgent}
 */
proto.io.haveno.protobuffer.RefundAgent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addLanguageCodes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRegistrationDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationSignature(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRegistrationPubKey(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 9:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RefundAgent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RefundAgent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefundAgent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getLanguageCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegistrationDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRegistrationSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegistrationPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
*/
proto.io.haveno.protobuffer.RefundAgent.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string language_codes = 2;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getLanguageCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setLanguageCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.addLanguageCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.clearLanguageCodesList = function() {
  return this.setLanguageCodesList([]);
};


/**
 * optional int64 registration_date = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getRegistrationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setRegistrationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string registration_signature = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getRegistrationSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setRegistrationSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes registration_pub_key = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getRegistrationPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes registration_pub_key = 5;
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getRegistrationPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRegistrationPubKey()));
};


/**
 * optional bytes registration_pub_key = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRegistrationPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getRegistrationPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRegistrationPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setRegistrationPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional PubKeyRing pub_key_ring = 6;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
*/
proto.io.haveno.protobuffer.RefundAgent.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string email_address = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string info = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> extra_data = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.RefundAgent} returns this
 */
proto.io.haveno.protobuffer.RefundAgent.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Filter.repeatedFields_ = [1,2,3,7,8,9,10,11,13,15,16,17,18,21,23,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddressesBannedFromTradingList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    bannedOfferIdsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    bannedPaymentAccountsList: jspb.Message.toObjectList(msg.getBannedPaymentAccountsList(),
    proto.io.haveno.protobuffer.PaymentAccountFilter.toObject, includeInstance),
    signatureAsBase64: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ownerPubKeyBytes: msg.getOwnerPubKeyBytes_asB64(),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : [],
    bannedCurrenciesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    bannedPaymentMethodsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    arbitratorsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    seedNodesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    priceRelayNodesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    preventPublicXmrNetwork: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    xmrNodesList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    disableTradeBelowVersion: jspb.Message.getFieldWithDefault(msg, 14, ""),
    mediatorsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    refundagentsList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    bannedsignerpubkeysList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    xmrFeeReceiverAddressesList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    creationDate: jspb.Message.getFieldWithDefault(msg, 19, 0),
    signerPubKeyAsHex: jspb.Message.getFieldWithDefault(msg, 20, ""),
    bannedprivilegeddevpubkeysList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    disableAutoConf: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    bannedAutoConfExplorersList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    nodeAddressesBannedFromNetworkList: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    disableApi: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    disableMempoolValidation: jspb.Message.getBooleanFieldWithDefault(msg, 26, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Filter}
 */
proto.io.haveno.protobuffer.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Filter;
  return proto.io.haveno.protobuffer.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Filter}
 */
proto.io.haveno.protobuffer.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeAddressesBannedFromTrading(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedOfferIds(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PaymentAccountFilter;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountFilter.deserializeBinaryFromReader);
      msg.addBannedPaymentAccounts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignatureAsBase64(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwnerPubKeyBytes(value);
      break;
    case 6:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedCurrencies(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedPaymentMethods(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addArbitrators(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addSeedNodes(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addPriceRelayNodes(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreventPublicXmrNetwork(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addXmrNodes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisableTradeBelowVersion(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addMediators(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addRefundagents(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedsignerpubkeys(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addXmrFeeReceiverAddresses(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreationDate(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignerPubKeyAsHex(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedprivilegeddevpubkeys(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableAutoConf(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addBannedAutoConfExplorers(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.addNodeAddressesBannedFromNetwork(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableApi(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableMempoolValidation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddressesBannedFromTradingList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getBannedOfferIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getBannedPaymentAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PaymentAccountFilter.serializeBinaryToWriter
    );
  }
  f = message.getSignatureAsBase64();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOwnerPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getBannedCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getBannedPaymentMethodsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getArbitratorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getSeedNodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getPriceRelayNodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getPreventPublicXmrNetwork();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getXmrNodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getDisableTradeBelowVersion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMediatorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getRefundagentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getBannedsignerpubkeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getXmrFeeReceiverAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getCreationDate();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getSignerPubKeyAsHex();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getBannedprivilegeddevpubkeysList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getDisableAutoConf();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getBannedAutoConfExplorersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getNodeAddressesBannedFromNetworkList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      24,
      f
    );
  }
  f = message.getDisableApi();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getDisableMempoolValidation();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
};


/**
 * repeated string node_addresses_banned_from_trading = 1;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getNodeAddressesBannedFromTradingList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setNodeAddressesBannedFromTradingList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addNodeAddressesBannedFromTrading = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearNodeAddressesBannedFromTradingList = function() {
  return this.setNodeAddressesBannedFromTradingList([]);
};


/**
 * repeated string banned_offer_ids = 2;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedOfferIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedOfferIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedOfferIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedOfferIdsList = function() {
  return this.setBannedOfferIdsList([]);
};


/**
 * repeated PaymentAccountFilter banned_payment_accounts = 3;
 * @return {!Array<!proto.io.haveno.protobuffer.PaymentAccountFilter>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedPaymentAccountsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.PaymentAccountFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountFilter, 3));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.PaymentAccountFilter>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
*/
proto.io.haveno.protobuffer.Filter.prototype.setBannedPaymentAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFilter}
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedPaymentAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.haveno.protobuffer.PaymentAccountFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedPaymentAccountsList = function() {
  return this.setBannedPaymentAccountsList([]);
};


/**
 * optional string signature_as_base64 = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.Filter.prototype.getSignatureAsBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setSignatureAsBase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Filter.prototype.getOwnerPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Filter.prototype.getOwnerPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwnerPubKeyBytes()));
};


/**
 * optional bytes owner_pub_key_bytes = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Filter.prototype.getOwnerPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwnerPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setOwnerPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * map<string, string> extra_data = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};


/**
 * repeated string banned_currencies = 7;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedCurrenciesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedCurrenciesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedCurrencies = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedCurrenciesList = function() {
  return this.setBannedCurrenciesList([]);
};


/**
 * repeated string banned_payment_methods = 8;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedPaymentMethodsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedPaymentMethodsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedPaymentMethods = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedPaymentMethodsList = function() {
  return this.setBannedPaymentMethodsList([]);
};


/**
 * repeated string arbitrators = 9;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getArbitratorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setArbitratorsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addArbitrators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearArbitratorsList = function() {
  return this.setArbitratorsList([]);
};


/**
 * repeated string seed_nodes = 10;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getSeedNodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setSeedNodesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addSeedNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearSeedNodesList = function() {
  return this.setSeedNodesList([]);
};


/**
 * repeated string price_relay_nodes = 11;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getPriceRelayNodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setPriceRelayNodesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addPriceRelayNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearPriceRelayNodesList = function() {
  return this.setPriceRelayNodesList([]);
};


/**
 * optional bool prevent_public_xmr_network = 12;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Filter.prototype.getPreventPublicXmrNetwork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setPreventPublicXmrNetwork = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * repeated string xmr_nodes = 13;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getXmrNodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setXmrNodesList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addXmrNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearXmrNodesList = function() {
  return this.setXmrNodesList([]);
};


/**
 * optional string disable_trade_below_version = 14;
 * @return {string}
 */
proto.io.haveno.protobuffer.Filter.prototype.getDisableTradeBelowVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setDisableTradeBelowVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * repeated string mediators = 15;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getMediatorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setMediatorsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addMediators = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearMediatorsList = function() {
  return this.setMediatorsList([]);
};


/**
 * repeated string refundAgents = 16;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getRefundagentsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setRefundagentsList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addRefundagents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearRefundagentsList = function() {
  return this.setRefundagentsList([]);
};


/**
 * repeated string bannedSignerPubKeys = 17;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedsignerpubkeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedsignerpubkeysList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedsignerpubkeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedsignerpubkeysList = function() {
  return this.setBannedsignerpubkeysList([]);
};


/**
 * repeated string xmr_fee_receiver_addresses = 18;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getXmrFeeReceiverAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setXmrFeeReceiverAddressesList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addXmrFeeReceiverAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearXmrFeeReceiverAddressesList = function() {
  return this.setXmrFeeReceiverAddressesList([]);
};


/**
 * optional int64 creation_date = 19;
 * @return {number}
 */
proto.io.haveno.protobuffer.Filter.prototype.getCreationDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setCreationDate = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string signer_pub_key_as_hex = 20;
 * @return {string}
 */
proto.io.haveno.protobuffer.Filter.prototype.getSignerPubKeyAsHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setSignerPubKeyAsHex = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string bannedPrivilegedDevPubKeys = 21;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedprivilegeddevpubkeysList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedprivilegeddevpubkeysList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedprivilegeddevpubkeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedprivilegeddevpubkeysList = function() {
  return this.setBannedprivilegeddevpubkeysList([]);
};


/**
 * optional bool disable_auto_conf = 22;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Filter.prototype.getDisableAutoConf = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setDisableAutoConf = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * repeated string banned_auto_conf_explorers = 23;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getBannedAutoConfExplorersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setBannedAutoConfExplorersList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addBannedAutoConfExplorers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearBannedAutoConfExplorersList = function() {
  return this.setBannedAutoConfExplorersList([]);
};


/**
 * repeated string node_addresses_banned_from_network = 24;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.Filter.prototype.getNodeAddressesBannedFromNetworkList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setNodeAddressesBannedFromNetworkList = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.addNodeAddressesBannedFromNetwork = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.clearNodeAddressesBannedFromNetworkList = function() {
  return this.setNodeAddressesBannedFromNetworkList([]);
};


/**
 * optional bool disable_api = 25;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Filter.prototype.getDisableApi = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setDisableApi = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool disable_mempool_validation = 26;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Filter.prototype.getDisableMempoolValidation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Filter} returns this
 */
proto.io.haveno.protobuffer.Filter.prototype.setDisableMempoolValidation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TradeStatistics3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeStatistics3.toObject = function(includeInstance, msg) {
  var f, obj = {
    currency: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 4, ""),
    date: jspb.Message.getFieldWithDefault(msg, 5, 0),
    arbitrator: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hash: msg.getHash_asB64(),
    makerDepositTxId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    takerDepositTxId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3}
 */
proto.io.haveno.protobuffer.TradeStatistics3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TradeStatistics3;
  return proto.io.haveno.protobuffer.TradeStatistics3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3}
 */
proto.io.haveno.protobuffer.TradeStatistics3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setArbitrator(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerDepositTxId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerDepositTxId(value);
      break;
    case 10:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TradeStatistics3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeStatistics3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getArbitrator();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getMakerDepositTxId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTakerDepositTxId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string currency = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 price = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 amount = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string payment_method = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 date = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string arbitrator = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getArbitrator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setArbitrator = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bytes hash = 7;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes hash = 7;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional string maker_deposit_tx_id = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getMakerDepositTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setMakerDepositTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string taker_deposit_tx_id = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getTakerDepositTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.setTakerDepositTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * map<string, string> extra_data = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MailboxStoragePayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MailboxStoragePayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    prefixedSealedAndSignedMessage: (f = msg.getPrefixedSealedAndSignedMessage()) && proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.toObject(includeInstance, f),
    senderPubKeyForAddOperationBytes: msg.getSenderPubKeyForAddOperationBytes_asB64(),
    ownerPubKeyBytes: msg.getOwnerPubKeyBytes_asB64(),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MailboxStoragePayload;
  return proto.io.haveno.protobuffer.MailboxStoragePayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MailboxStoragePayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.deserializeBinaryFromReader);
      msg.setPrefixedSealedAndSignedMessage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSenderPubKeyForAddOperationBytes(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOwnerPubKeyBytes(value);
      break;
    case 4:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MailboxStoragePayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MailboxStoragePayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrefixedSealedAndSignedMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage.serializeBinaryToWriter
    );
  }
  f = message.getSenderPubKeyForAddOperationBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getOwnerPubKeyBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional PrefixedSealedAndSignedMessage prefixed_sealed_and_signed_message = 1;
 * @return {?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getPrefixedSealedAndSignedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.PrefixedSealedAndSignedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload} returns this
*/
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.setPrefixedSealedAndSignedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload} returns this
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.clearPrefixedSealedAndSignedMessage = function() {
  return this.setPrefixedSealedAndSignedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.hasPrefixedSealedAndSignedMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes sender_pub_key_for_add_operation_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getSenderPubKeyForAddOperationBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sender_pub_key_for_add_operation_bytes = 2;
 * This is a type-conversion wrapper around `getSenderPubKeyForAddOperationBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getSenderPubKeyForAddOperationBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSenderPubKeyForAddOperationBytes()));
};


/**
 * optional bytes sender_pub_key_for_add_operation_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSenderPubKeyForAddOperationBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getSenderPubKeyForAddOperationBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSenderPubKeyForAddOperationBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload} returns this
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.setSenderPubKeyForAddOperationBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes owner_pub_key_bytes = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getOwnerPubKeyBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes owner_pub_key_bytes = 3;
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getOwnerPubKeyBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOwnerPubKeyBytes()));
};


/**
 * optional bytes owner_pub_key_bytes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOwnerPubKeyBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getOwnerPubKeyBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOwnerPubKeyBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload} returns this
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.setOwnerPubKeyBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * map<string, string> extra_data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.MailboxStoragePayload} returns this
 */
proto.io.haveno.protobuffer.MailboxStoragePayload.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.OfferPayload.repeatedFields_ = [16,18,1003];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.OfferPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.OfferPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    date: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerNodeAddress: (f = msg.getOwnerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    price: jspb.Message.getFieldWithDefault(msg, 6, 0),
    marketPriceMarginPct: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    useMarketBasedPrice: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    amount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    minAmount: jspb.Message.getFieldWithDefault(msg, 10, 0),
    baseCurrencyCode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    counterCurrencyCode: jspb.Message.getFieldWithDefault(msg, 12, ""),
    paymentMethodId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    makerPaymentAccountId: jspb.Message.getFieldWithDefault(msg, 14, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 15, ""),
    acceptedCountryCodesList: (f = jspb.Message.getRepeatedField(msg, 16)) == null ? undefined : f,
    bankId: jspb.Message.getFieldWithDefault(msg, 17, ""),
    acceptedBankIdsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    versionNr: jspb.Message.getFieldWithDefault(msg, 19, ""),
    blockHeightAtOfferCreation: jspb.Message.getFieldWithDefault(msg, 20, 0),
    makerFee: jspb.Message.getFieldWithDefault(msg, 21, 0),
    buyerSecurityDepositPct: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    sellerSecurityDepositPct: jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0),
    maxTradeLimit: jspb.Message.getFieldWithDefault(msg, 24, 0),
    maxTradePeriod: jspb.Message.getFieldWithDefault(msg, 25, 0),
    useAutoClose: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    useReOpenAfterAutoClose: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    lowerClosePrice: jspb.Message.getFieldWithDefault(msg, 28, 0),
    upperClosePrice: jspb.Message.getFieldWithDefault(msg, 29, 0),
    isPrivateOffer: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    hashOfChallenge: jspb.Message.getFieldWithDefault(msg, 31, ""),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : [],
    protocolVersion: jspb.Message.getFieldWithDefault(msg, 33, 0),
    arbitratorSigner: (f = msg.getArbitratorSigner()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    arbitratorSignature: msg.getArbitratorSignature_asB64(),
    reserveTxKeyImagesList: (f = jspb.Message.getRepeatedField(msg, 1003)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.OfferPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.OfferPayload;
  return proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.OfferPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setOwnerNodeAddress(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 5:
      var value = /** @type {!proto.io.haveno.protobuffer.OfferDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMarketPriceMarginPct(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseMarketBasedPrice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinAmount(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseCurrencyCode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterCurrencyCode(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerPaymentAccountId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcceptedCountryCodes(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankId(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcceptedBankIds(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionNr(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockHeightAtOfferCreation(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMakerFee(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBuyerSecurityDepositPct(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSellerSecurityDepositPct(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTradeLimit(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTradePeriod(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseAutoClose(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseReOpenAfterAutoClose(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLowerClosePrice(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpperClosePrice(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPrivateOffer(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashOfChallenge(value);
      break;
    case 32:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProtocolVersion(value);
      break;
    case 1001:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setArbitratorSigner(value);
      break;
    case 1002:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArbitratorSignature(value);
      break;
    case 1003:
      var value = /** @type {string} */ (reader.readString());
      msg.addReserveTxKeyImages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.OfferPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOwnerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMarketPriceMarginPct();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getUseMarketBasedPrice();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getMinAmount();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getBaseCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCounterCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMakerPaymentAccountId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getAcceptedCountryCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      16,
      f
    );
  }
  f = message.getBankId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAcceptedBankIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getVersionNr();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBlockHeightAtOfferCreation();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getMakerFee();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getBuyerSecurityDepositPct();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
  f = message.getSellerSecurityDepositPct();
  if (f !== 0.0) {
    writer.writeDouble(
      23,
      f
    );
  }
  f = message.getMaxTradeLimit();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getMaxTradePeriod();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getUseAutoClose();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getUseReOpenAfterAutoClose();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getLowerClosePrice();
  if (f !== 0) {
    writer.writeInt64(
      28,
      f
    );
  }
  f = message.getUpperClosePrice();
  if (f !== 0) {
    writer.writeInt64(
      29,
      f
    );
  }
  f = message.getIsPrivateOffer();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
  f = message.getHashOfChallenge();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(32, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getProtocolVersion();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getArbitratorSigner();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getArbitratorSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1002,
      f
    );
  }
  f = message.getReserveTxKeyImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1003,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 date = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional NodeAddress owner_node_address = 3;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getOwnerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
*/
proto.io.haveno.protobuffer.OfferPayload.prototype.setOwnerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearOwnerNodeAddress = function() {
  return this.setOwnerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.hasOwnerNodeAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PubKeyRing pub_key_ring = 4;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
*/
proto.io.haveno.protobuffer.OfferPayload.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional OfferDirection direction = 5;
 * @return {!proto.io.haveno.protobuffer.OfferDirection}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getDirection = function() {
  return /** @type {!proto.io.haveno.protobuffer.OfferDirection} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.OfferDirection} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional int64 price = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double market_price_margin_pct = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMarketPriceMarginPct = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMarketPriceMarginPct = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool use_market_based_price = 8;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getUseMarketBasedPrice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setUseMarketBasedPrice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int64 amount = 9;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 min_amount = 10;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMinAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMinAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string base_currency_code = 11;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getBaseCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setBaseCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string counter_currency_code = 12;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getCounterCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setCounterCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string payment_method_id = 13;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string maker_payment_account_id = 14;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMakerPaymentAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMakerPaymentAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string country_code = 15;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * repeated string accepted_country_codes = 16;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getAcceptedCountryCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 16));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setAcceptedCountryCodesList = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.addAcceptedCountryCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearAcceptedCountryCodesList = function() {
  return this.setAcceptedCountryCodesList([]);
};


/**
 * optional string bank_id = 17;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getBankId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setBankId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string accepted_bank_ids = 18;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getAcceptedBankIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setAcceptedBankIdsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.addAcceptedBankIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearAcceptedBankIdsList = function() {
  return this.setAcceptedBankIdsList([]);
};


/**
 * optional string version_nr = 19;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getVersionNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setVersionNr = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional int64 block_height_at_offer_creation = 20;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getBlockHeightAtOfferCreation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setBlockHeightAtOfferCreation = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 maker_fee = 21;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMakerFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMakerFee = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional double buyer_security_deposit_pct = 22;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getBuyerSecurityDepositPct = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setBuyerSecurityDepositPct = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional double seller_security_deposit_pct = 23;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getSellerSecurityDepositPct = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setSellerSecurityDepositPct = function(value) {
  return jspb.Message.setProto3FloatField(this, 23, value);
};


/**
 * optional int64 max_trade_limit = 24;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMaxTradeLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMaxTradeLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int64 max_trade_period = 25;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getMaxTradePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setMaxTradePeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional bool use_auto_close = 26;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getUseAutoClose = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setUseAutoClose = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool use_re_open_after_auto_close = 27;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getUseReOpenAfterAutoClose = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setUseReOpenAfterAutoClose = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional int64 lower_close_price = 28;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getLowerClosePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setLowerClosePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional int64 upper_close_price = 29;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getUpperClosePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setUpperClosePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional bool is_private_offer = 30;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getIsPrivateOffer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setIsPrivateOffer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};


/**
 * optional string hash_of_challenge = 31;
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getHashOfChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setHashOfChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * map<string, string> extra_data = 32;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 32, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};


/**
 * optional int32 protocol_version = 33;
 * @return {number}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getProtocolVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setProtocolVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional NodeAddress arbitrator_signer = 1001;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getArbitratorSigner = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1001));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
*/
proto.io.haveno.protobuffer.OfferPayload.prototype.setArbitratorSigner = function(value) {
  return jspb.Message.setWrapperField(this, 1001, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearArbitratorSigner = function() {
  return this.setArbitratorSigner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.hasArbitratorSigner = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * optional bytes arbitrator_signature = 1002;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getArbitratorSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1002, ""));
};


/**
 * optional bytes arbitrator_signature = 1002;
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getArbitratorSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArbitratorSignature()));
};


/**
 * optional bytes arbitrator_signature = 1002;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getArbitratorSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArbitratorSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setArbitratorSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1002, value);
};


/**
 * repeated string reserve_tx_key_images = 1003;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.getReserveTxKeyImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1003));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.setReserveTxKeyImagesList = function(value) {
  return jspb.Message.setField(this, 1003, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.addReserveTxKeyImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1003, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OfferPayload} returns this
 */
proto.io.haveno.protobuffer.OfferPayload.prototype.clearReserveTxKeyImagesList = function() {
  return this.setReserveTxKeyImagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AccountAgeWitness.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitness} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AccountAgeWitness.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    date: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AccountAgeWitness;
  return proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitness} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitness} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitness} returns this
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int64 date = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitness} returns this
 */
proto.io.haveno.protobuffer.AccountAgeWitness.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignedWitness.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignedWitness} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedWitness.toObject = function(includeInstance, msg) {
  var f, obj = {
    verificationMethod: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountAgeWitnessHash: msg.getAccountAgeWitnessHash_asB64(),
    signature: msg.getSignature_asB64(),
    signerPubKey: msg.getSignerPubKey_asB64(),
    witnessOwnerPubKey: msg.getWitnessOwnerPubKey_asB64(),
    date: jspb.Message.getFieldWithDefault(msg, 6, 0),
    tradeAmount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignedWitness}
 */
proto.io.haveno.protobuffer.SignedWitness.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignedWitness;
  return proto.io.haveno.protobuffer.SignedWitness.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignedWitness} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignedWitness}
 */
proto.io.haveno.protobuffer.SignedWitness.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.haveno.protobuffer.SignedWitness.VerificationMethod} */ (reader.readEnum());
      msg.setVerificationMethod(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountAgeWitnessHash(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignerPubKey(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWitnessOwnerPubKey(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignedWitness.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignedWitness} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedWitness.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerificationMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAccountAgeWitnessHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSignerPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getWitnessOwnerPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTradeAmount();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.SignedWitness.VerificationMethod = {
  PB_ERROR: 0,
  ARBITRATOR: 1,
  TRADE: 2
};

/**
 * optional VerificationMethod verification_method = 1;
 * @return {!proto.io.haveno.protobuffer.SignedWitness.VerificationMethod}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getVerificationMethod = function() {
  return /** @type {!proto.io.haveno.protobuffer.SignedWitness.VerificationMethod} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.SignedWitness.VerificationMethod} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setVerificationMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes account_age_witness_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getAccountAgeWitnessHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes account_age_witness_hash = 2;
 * This is a type-conversion wrapper around `getAccountAgeWitnessHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getAccountAgeWitnessHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountAgeWitnessHash()));
};


/**
 * optional bytes account_age_witness_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountAgeWitnessHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getAccountAgeWitnessHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountAgeWitnessHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setAccountAgeWitnessHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes signer_pub_key = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignerPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes signer_pub_key = 4;
 * This is a type-conversion wrapper around `getSignerPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignerPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignerPubKey()));
};


/**
 * optional bytes signer_pub_key = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignerPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getSignerPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignerPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setSignerPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes witness_owner_pub_key = 5;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getWitnessOwnerPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes witness_owner_pub_key = 5;
 * This is a type-conversion wrapper around `getWitnessOwnerPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getWitnessOwnerPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getWitnessOwnerPubKey()));
};


/**
 * optional bytes witness_owner_pub_key = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWitnessOwnerPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getWitnessOwnerPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getWitnessOwnerPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setWitnessOwnerPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional int64 date = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 trade_amount = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.getTradeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedWitness} returns this
 */
proto.io.haveno.protobuffer.SignedWitness.prototype.setTradeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Dispute.repeatedFields_ = [21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Dispute.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Dispute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Dispute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Dispute.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    traderId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    isOpener: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    disputeOpenerIsBuyer: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    disputeOpenerIsMaker: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    openingDate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    traderPubKeyRing: (f = msg.getTraderPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    tradeDate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    contract: (f = msg.getContract()) && proto.io.haveno.protobuffer.Contract.toObject(includeInstance, f),
    contractHash: msg.getContractHash_asB64(),
    payoutTxSerialized: msg.getPayoutTxSerialized_asB64(),
    payoutTxId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    contractAsJson: jspb.Message.getFieldWithDefault(msg, 14, ""),
    makerContractSignature: msg.getMakerContractSignature_asB64(),
    takerContractSignature: msg.getTakerContractSignature_asB64(),
    makerPaymentAccountPayload: (f = msg.getMakerPaymentAccountPayload()) && proto.io.haveno.protobuffer.PaymentAccountPayload.toObject(includeInstance, f),
    takerPaymentAccountPayload: (f = msg.getTakerPaymentAccountPayload()) && proto.io.haveno.protobuffer.PaymentAccountPayload.toObject(includeInstance, f),
    agentPubKeyRing: (f = msg.getAgentPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    isSupportTicket: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    chatMessageList: jspb.Message.toObjectList(msg.getChatMessageList(),
    proto.io.haveno.protobuffer.ChatMessage.toObject, includeInstance),
    isClosed: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    disputeResult: (f = msg.getDisputeResult()) && proto.io.haveno.protobuffer.DisputeResult.toObject(includeInstance, f),
    disputePayoutTxId: jspb.Message.getFieldWithDefault(msg, 24, ""),
    supportType: jspb.Message.getFieldWithDefault(msg, 25, 0),
    mediatorsDisputeResult: jspb.Message.getFieldWithDefault(msg, 26, ""),
    delayedPayoutTxId: jspb.Message.getFieldWithDefault(msg, 27, ""),
    donationAddressOfDelayedPayoutTx: jspb.Message.getFieldWithDefault(msg, 28, ""),
    state: jspb.Message.getFieldWithDefault(msg, 29, 0),
    tradePeriodEnd: jspb.Message.getFieldWithDefault(msg, 30, 0),
    extraDataMap: (f = msg.getExtraDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.Dispute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Dispute;
  return proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Dispute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraderId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOpener(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisputeOpenerIsBuyer(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisputeOpenerIsMaker(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpeningDate(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setTraderPubKeyRing(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeDate(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.Contract;
      reader.readMessage(value,proto.io.haveno.protobuffer.Contract.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractHash(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayoutTxSerialized(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutTxId(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAsJson(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMakerContractSignature(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTakerContractSignature(value);
      break;
    case 17:
      var value = new proto.io.haveno.protobuffer.PaymentAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader);
      msg.setMakerPaymentAccountPayload(value);
      break;
    case 18:
      var value = new proto.io.haveno.protobuffer.PaymentAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader);
      msg.setTakerPaymentAccountPayload(value);
      break;
    case 19:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setAgentPubKeyRing(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSupportTicket(value);
      break;
    case 21:
      var value = new proto.io.haveno.protobuffer.ChatMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader);
      msg.addChatMessage(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsClosed(value);
      break;
    case 23:
      var value = new proto.io.haveno.protobuffer.DisputeResult;
      reader.readMessage(value,proto.io.haveno.protobuffer.DisputeResult.deserializeBinaryFromReader);
      msg.setDisputeResult(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisputePayoutTxId(value);
      break;
    case 25:
      var value = /** @type {!proto.io.haveno.protobuffer.SupportType} */ (reader.readEnum());
      msg.setSupportType(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediatorsDisputeResult(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelayedPayoutTxId(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDonationAddressOfDelayedPayoutTx(value);
      break;
    case 29:
      var value = /** @type {!proto.io.haveno.protobuffer.Dispute.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradePeriodEnd(value);
      break;
    case 31:
      var value = msg.getExtraDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Dispute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Dispute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTraderId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIsOpener();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDisputeOpenerIsBuyer();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDisputeOpenerIsMaker();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getOpeningDate();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTraderPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getTradeDate();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.Contract.serializeBinaryToWriter
    );
  }
  f = message.getContractHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getPayoutTxSerialized_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getPayoutTxId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getContractAsJson();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMakerContractSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getTakerContractSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      16,
      f
    );
  }
  f = message.getMakerPaymentAccountPayload();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getTakerPaymentAccountPayload();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getAgentPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getIsSupportTicket();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getChatMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getIsClosed();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getDisputeResult();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.io.haveno.protobuffer.DisputeResult.serializeBinaryToWriter
    );
  }
  f = message.getDisputePayoutTxId();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSupportType();
  if (f !== 0.0) {
    writer.writeEnum(
      25,
      f
    );
  }
  f = message.getMediatorsDisputeResult();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getDelayedPayoutTxId();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getDonationAddressOfDelayedPayoutTx();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      29,
      f
    );
  }
  f = message.getTradePeriodEnd();
  if (f !== 0) {
    writer.writeInt64(
      30,
      f
    );
  }
  f = message.getExtraDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(31, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Dispute.State = {
  NEEDS_UPGRADE: 0,
  NEW: 1,
  OPEN: 2,
  REOPENED: 3,
  CLOSED: 4
};

/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 trader_id = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTraderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setTraderId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool is_opener = 4;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getIsOpener = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setIsOpener = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool dispute_opener_is_buyer = 5;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDisputeOpenerIsBuyer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setDisputeOpenerIsBuyer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool dispute_opener_is_maker = 6;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDisputeOpenerIsMaker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setDisputeOpenerIsMaker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 opening_date = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getOpeningDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setOpeningDate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional PubKeyRing trader_pub_key_ring = 8;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTraderPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setTraderPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearTraderPubKeyRing = function() {
  return this.setTraderPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasTraderPubKeyRing = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 trade_date = 9;
 * @return {number}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTradeDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setTradeDate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional Contract contract = 10;
 * @return {?proto.io.haveno.protobuffer.Contract}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getContract = function() {
  return /** @type{?proto.io.haveno.protobuffer.Contract} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Contract, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.Contract|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasContract = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes contract_hash = 11;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getContractHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes contract_hash = 11;
 * This is a type-conversion wrapper around `getContractHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getContractHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractHash()));
};


/**
 * optional bytes contract_hash = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getContractHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setContractHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional bytes payout_tx_serialized = 12;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getPayoutTxSerialized = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payout_tx_serialized = 12;
 * This is a type-conversion wrapper around `getPayoutTxSerialized()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getPayoutTxSerialized_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayoutTxSerialized()));
};


/**
 * optional bytes payout_tx_serialized = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayoutTxSerialized()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getPayoutTxSerialized_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayoutTxSerialized()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setPayoutTxSerialized = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional string payout_tx_id = 13;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getPayoutTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setPayoutTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string contract_as_json = 14;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getContractAsJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setContractAsJson = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bytes maker_contract_signature = 15;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getMakerContractSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes maker_contract_signature = 15;
 * This is a type-conversion wrapper around `getMakerContractSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getMakerContractSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMakerContractSignature()));
};


/**
 * optional bytes maker_contract_signature = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMakerContractSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getMakerContractSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMakerContractSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setMakerContractSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 15, value);
};


/**
 * optional bytes taker_contract_signature = 16;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTakerContractSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes taker_contract_signature = 16;
 * This is a type-conversion wrapper around `getTakerContractSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTakerContractSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTakerContractSignature()));
};


/**
 * optional bytes taker_contract_signature = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTakerContractSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTakerContractSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTakerContractSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setTakerContractSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 16, value);
};


/**
 * optional PaymentAccountPayload maker_payment_account_payload = 17;
 * @return {?proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getMakerPaymentAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountPayload, 17));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setMakerPaymentAccountPayload = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearMakerPaymentAccountPayload = function() {
  return this.setMakerPaymentAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasMakerPaymentAccountPayload = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PaymentAccountPayload taker_payment_account_payload = 18;
 * @return {?proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTakerPaymentAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountPayload, 18));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setTakerPaymentAccountPayload = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearTakerPaymentAccountPayload = function() {
  return this.setTakerPaymentAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasTakerPaymentAccountPayload = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional PubKeyRing agent_pub_key_ring = 19;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getAgentPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 19));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setAgentPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearAgentPubKeyRing = function() {
  return this.setAgentPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasAgentPubKeyRing = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool is_support_ticket = 20;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getIsSupportTicket = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setIsSupportTicket = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * repeated ChatMessage chat_message = 21;
 * @return {!Array<!proto.io.haveno.protobuffer.ChatMessage>}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getChatMessageList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.ChatMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.ChatMessage, 21));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.ChatMessage>} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setChatMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.ChatMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.Dispute.prototype.addChatMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.io.haveno.protobuffer.ChatMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearChatMessageList = function() {
  return this.setChatMessageList([]);
};


/**
 * optional bool is_closed = 22;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getIsClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setIsClosed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional DisputeResult dispute_result = 23;
 * @return {?proto.io.haveno.protobuffer.DisputeResult}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDisputeResult = function() {
  return /** @type{?proto.io.haveno.protobuffer.DisputeResult} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DisputeResult, 23));
};


/**
 * @param {?proto.io.haveno.protobuffer.DisputeResult|undefined} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
*/
proto.io.haveno.protobuffer.Dispute.prototype.setDisputeResult = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearDisputeResult = function() {
  return this.setDisputeResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Dispute.prototype.hasDisputeResult = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string dispute_payout_tx_id = 24;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDisputePayoutTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setDisputePayoutTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional SupportType support_type = 25;
 * @return {!proto.io.haveno.protobuffer.SupportType}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getSupportType = function() {
  return /** @type {!proto.io.haveno.protobuffer.SupportType} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.SupportType} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setSupportType = function(value) {
  return jspb.Message.setProto3EnumField(this, 25, value);
};


/**
 * optional string mediators_dispute_result = 26;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getMediatorsDisputeResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setMediatorsDisputeResult = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string delayed_payout_tx_id = 27;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDelayedPayoutTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setDelayedPayoutTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string donation_address_of_delayed_payout_tx = 28;
 * @return {string}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getDonationAddressOfDelayedPayoutTx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setDonationAddressOfDelayedPayoutTx = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional State state = 29;
 * @return {!proto.io.haveno.protobuffer.Dispute.State}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getState = function() {
  return /** @type {!proto.io.haveno.protobuffer.Dispute.State} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.Dispute.State} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 29, value);
};


/**
 * optional int64 trade_period_end = 30;
 * @return {number}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getTradePeriodEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.setTradePeriodEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * map<string, string> extra_data = 31;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.Dispute.prototype.getExtraDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 31, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.Dispute} returns this
 */
proto.io.haveno.protobuffer.Dispute.prototype.clearExtraDataMap = function() {
  this.getExtraDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Attachment.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Attachment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Attachment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Attachment.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Attachment}
 */
proto.io.haveno.protobuffer.Attachment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Attachment;
  return proto.io.haveno.protobuffer.Attachment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Attachment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Attachment}
 */
proto.io.haveno.protobuffer.Attachment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Attachment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Attachment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Attachment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Attachment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Attachment.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Attachment} returns this
 */
proto.io.haveno.protobuffer.Attachment.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Attachment.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes bytes = 2;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Attachment.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Attachment.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Attachment} returns this
 */
proto.io.haveno.protobuffer.Attachment.prototype.setBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DisputeResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DisputeResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traderId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    winner: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reasonOrdinal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tamperProofEvidence: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    idVerification: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    screenCast: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    summaryNotes: jspb.Message.getFieldWithDefault(msg, 8, ""),
    chatMessage: (f = msg.getChatMessage()) && proto.io.haveno.protobuffer.ChatMessage.toObject(includeInstance, f),
    arbitratorSignature: msg.getArbitratorSignature_asB64(),
    buyerPayoutAmountBeforeCost: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sellerPayoutAmountBeforeCost: jspb.Message.getFieldWithDefault(msg, 12, 0),
    subtractFeeFrom: jspb.Message.getFieldWithDefault(msg, 13, 0),
    arbitratorPubKey: msg.getArbitratorPubKey_asB64(),
    closeDate: jspb.Message.getFieldWithDefault(msg, 15, 0),
    isLoserPublisher: jspb.Message.getBooleanFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DisputeResult}
 */
proto.io.haveno.protobuffer.DisputeResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DisputeResult;
  return proto.io.haveno.protobuffer.DisputeResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DisputeResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DisputeResult}
 */
proto.io.haveno.protobuffer.DisputeResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraderId(value);
      break;
    case 3:
      var value = /** @type {!proto.io.haveno.protobuffer.DisputeResult.Winner} */ (reader.readEnum());
      msg.setWinner(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReasonOrdinal(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTamperProofEvidence(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIdVerification(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setScreenCast(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummaryNotes(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.ChatMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader);
      msg.setChatMessage(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArbitratorSignature(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuyerPayoutAmountBeforeCost(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellerPayoutAmountBeforeCost(value);
      break;
    case 13:
      var value = /** @type {!proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom} */ (reader.readEnum());
      msg.setSubtractFeeFrom(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArbitratorPubKey(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCloseDate(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLoserPublisher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DisputeResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DisputeResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DisputeResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradeId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraderId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getWinner();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReasonOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTamperProofEvidence();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIdVerification();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getScreenCast();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getSummaryNotes();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getChatMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getArbitratorSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getBuyerPayoutAmountBeforeCost();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getSellerPayoutAmountBeforeCost();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getSubtractFeeFrom();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getArbitratorPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getCloseDate();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getIsLoserPublisher();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.DisputeResult.Winner = {
  PB_ERROR_WINNER: 0,
  BUYER: 1,
  SELLER: 2
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.DisputeResult.Reason = {
  PB_ERROR_REASON: 0,
  OTHER: 1,
  BUG: 2,
  USABILITY: 3,
  SCAM: 4,
  PROTOCOL_VIOLATION: 5,
  NO_REPLY: 6,
  BANK_PROBLEMS: 7,
  OPTION_TRADE: 8,
  SELLER_NOT_RESPONDING: 9,
  WRONG_SENDER_ACCOUNT: 10,
  TRADE_ALREADY_SETTLED: 11,
  PEER_WAS_LATE: 12
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom = {
  BUYER_ONLY: 0,
  SELLER_ONLY: 1,
  BUYER_AND_SELLER: 2
};

/**
 * optional string trade_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getTradeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setTradeId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 trader_id = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getTraderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setTraderId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Winner winner = 3;
 * @return {!proto.io.haveno.protobuffer.DisputeResult.Winner}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getWinner = function() {
  return /** @type {!proto.io.haveno.protobuffer.DisputeResult.Winner} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.DisputeResult.Winner} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setWinner = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 reason_ordinal = 4;
 * @return {number}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getReasonOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setReasonOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool tamper_proof_evidence = 5;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getTamperProofEvidence = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setTamperProofEvidence = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool id_verification = 6;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getIdVerification = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setIdVerification = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool screen_cast = 7;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getScreenCast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setScreenCast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string summary_notes = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getSummaryNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setSummaryNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ChatMessage chat_message = 9;
 * @return {?proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getChatMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.ChatMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ChatMessage, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.ChatMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
*/
proto.io.haveno.protobuffer.DisputeResult.prototype.setChatMessage = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.clearChatMessage = function() {
  return this.setChatMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.hasChatMessage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes arbitrator_signature = 10;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes arbitrator_signature = 10;
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArbitratorSignature()));
};


/**
 * optional bytes arbitrator_signature = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArbitratorSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setArbitratorSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * optional int64 buyer_payout_amount_before_cost = 11;
 * @return {number}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getBuyerPayoutAmountBeforeCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setBuyerPayoutAmountBeforeCost = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 seller_payout_amount_before_cost = 12;
 * @return {number}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getSellerPayoutAmountBeforeCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setSellerPayoutAmountBeforeCost = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional SubtractFeeFrom subtract_fee_from = 13;
 * @return {!proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getSubtractFeeFrom = function() {
  return /** @type {!proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.DisputeResult.SubtractFeeFrom} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setSubtractFeeFrom = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional bytes arbitrator_pub_key = 14;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes arbitrator_pub_key = 14;
 * This is a type-conversion wrapper around `getArbitratorPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArbitratorPubKey()));
};


/**
 * optional bytes arbitrator_pub_key = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArbitratorPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getArbitratorPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArbitratorPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setArbitratorPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional int64 close_date = 15;
 * @return {number}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getCloseDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setCloseDate = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional bool is_loser_publisher = 16;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.getIsLoserPublisher = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.DisputeResult} returns this
 */
proto.io.haveno.protobuffer.DisputeResult.prototype.setIsLoserPublisher = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Contract.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Contract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Contract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Contract.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerPayload: (f = msg.getOfferPayload()) && proto.io.haveno.protobuffer.OfferPayload.toObject(includeInstance, f),
    tradeAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tradePrice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    arbitratorNodeAddress: (f = msg.getArbitratorNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    isBuyerMakerAndSellerTaker: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    makerAccountId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    takerAccountId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    makerPaymentMethodId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    takerPaymentMethodId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    makerPaymentAccountPayloadHash: msg.getMakerPaymentAccountPayloadHash_asB64(),
    takerPaymentAccountPayloadHash: msg.getTakerPaymentAccountPayloadHash_asB64(),
    makerPubKeyRing: (f = msg.getMakerPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    takerPubKeyRing: (f = msg.getTakerPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    buyerNodeAddress: (f = msg.getBuyerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    sellerNodeAddress: (f = msg.getSellerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    makerPayoutAddressString: jspb.Message.getFieldWithDefault(msg, 16, ""),
    takerPayoutAddressString: jspb.Message.getFieldWithDefault(msg, 17, ""),
    makerDepositTxHash: jspb.Message.getFieldWithDefault(msg, 18, ""),
    takerDepositTxHash: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Contract}
 */
proto.io.haveno.protobuffer.Contract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Contract;
  return proto.io.haveno.protobuffer.Contract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Contract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Contract}
 */
proto.io.haveno.protobuffer.Contract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.OfferPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader);
      msg.setOfferPayload(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradePrice(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setArbitratorNodeAddress(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBuyerMakerAndSellerTaker(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerAccountId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerAccountId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerPaymentMethodId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerPaymentMethodId(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMakerPaymentAccountPayloadHash(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTakerPaymentAccountPayloadHash(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setMakerPubKeyRing(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setTakerPubKeyRing(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setBuyerNodeAddress(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSellerNodeAddress(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerPayoutAddressString(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerPayoutAddressString(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakerDepositTxHash(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakerDepositTxHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Contract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Contract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Contract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Contract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter
    );
  }
  f = message.getTradeAmount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTradePrice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getArbitratorNodeAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getIsBuyerMakerAndSellerTaker();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMakerAccountId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTakerAccountId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMakerPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTakerPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMakerPaymentAccountPayloadHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getTakerPaymentAccountPayloadHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = message.getMakerPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getTakerPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getBuyerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getSellerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getMakerPayoutAddressString();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTakerPayoutAddressString();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getMakerDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getTakerDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional OfferPayload offer_payload = 1;
 * @return {?proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.Contract.prototype.getOfferPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferPayload, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setOfferPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearOfferPayload = function() {
  return this.setOfferPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasOfferPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 trade_amount = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTradeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTradeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 trade_price = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTradePrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTradePrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional NodeAddress arbitrator_node_address = 4;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Contract.prototype.getArbitratorNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setArbitratorNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearArbitratorNodeAddress = function() {
  return this.setArbitratorNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasArbitratorNodeAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool is_buyer_maker_and_seller_taker = 5;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.getIsBuyerMakerAndSellerTaker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setIsBuyerMakerAndSellerTaker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string maker_account_id = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setMakerAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string taker_account_id = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTakerAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string maker_payment_method_id = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setMakerPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string taker_payment_method_id = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTakerPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bytes maker_payment_account_payload_hash = 10;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPaymentAccountPayloadHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes maker_payment_account_payload_hash = 10;
 * This is a type-conversion wrapper around `getMakerPaymentAccountPayloadHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPaymentAccountPayloadHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMakerPaymentAccountPayloadHash()));
};


/**
 * optional bytes maker_payment_account_payload_hash = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMakerPaymentAccountPayloadHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPaymentAccountPayloadHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMakerPaymentAccountPayloadHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setMakerPaymentAccountPayloadHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * optional bytes taker_payment_account_payload_hash = 11;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPaymentAccountPayloadHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes taker_payment_account_payload_hash = 11;
 * This is a type-conversion wrapper around `getTakerPaymentAccountPayloadHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPaymentAccountPayloadHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTakerPaymentAccountPayloadHash()));
};


/**
 * optional bytes taker_payment_account_payload_hash = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTakerPaymentAccountPayloadHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPaymentAccountPayloadHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTakerPaymentAccountPayloadHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTakerPaymentAccountPayloadHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};


/**
 * optional PubKeyRing maker_pub_key_ring = 12;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setMakerPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearMakerPubKeyRing = function() {
  return this.setMakerPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasMakerPubKeyRing = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PubKeyRing taker_pub_key_ring = 13;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setTakerPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearTakerPubKeyRing = function() {
  return this.setTakerPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasTakerPubKeyRing = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional NodeAddress buyer_node_address = 14;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Contract.prototype.getBuyerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setBuyerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearBuyerNodeAddress = function() {
  return this.setBuyerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasBuyerNodeAddress = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional NodeAddress seller_node_address = 15;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Contract.prototype.getSellerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
*/
proto.io.haveno.protobuffer.Contract.prototype.setSellerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.clearSellerNodeAddress = function() {
  return this.setSellerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Contract.prototype.hasSellerNodeAddress = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string maker_payout_address_string = 16;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerPayoutAddressString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setMakerPayoutAddressString = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string taker_payout_address_string = 17;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerPayoutAddressString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTakerPayoutAddressString = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string maker_deposit_tx_hash = 18;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getMakerDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setMakerDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string taker_deposit_tx_hash = 19;
 * @return {string}
 */
proto.io.haveno.protobuffer.Contract.prototype.getTakerDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Contract} returns this
 */
proto.io.haveno.protobuffer.Contract.prototype.setTakerDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RawTransactionInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RawTransactionInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RawTransactionInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parentTransaction: msg.getParentTransaction_asB64(),
    value: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RawTransactionInput}
 */
proto.io.haveno.protobuffer.RawTransactionInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RawTransactionInput;
  return proto.io.haveno.protobuffer.RawTransactionInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RawTransactionInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RawTransactionInput}
 */
proto.io.haveno.protobuffer.RawTransactionInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIndex(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParentTransaction(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RawTransactionInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RawTransactionInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RawTransactionInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParentTransaction_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int64 index = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.RawTransactionInput} returns this
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes parent_transaction = 2;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.getParentTransaction = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes parent_transaction = 2;
 * This is a type-conversion wrapper around `getParentTransaction()`
 * @return {string}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.getParentTransaction_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParentTransaction()));
};


/**
 * optional bytes parent_transaction = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParentTransaction()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.getParentTransaction_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParentTransaction()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.RawTransactionInput} returns this
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.setParentTransaction = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 value = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.RawTransactionInput} returns this
 */
proto.io.haveno.protobuffer.RawTransactionInput.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_ = [[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  ALI_PAY_ACCOUNT_PAYLOAD: 5,
  CHASE_QUICK_PAY_ACCOUNT_PAYLOAD: 6,
  ZELLE_ACCOUNT_PAYLOAD: 7,
  COUNTRY_BASED_PAYMENT_ACCOUNT_PAYLOAD: 8,
  CRYPTO_CURRENCY_ACCOUNT_PAYLOAD: 9,
  FASTER_PAYMENTS_ACCOUNT_PAYLOAD: 10,
  INTERAC_E_TRANSFER_ACCOUNT_PAYLOAD: 11,
  O_K_PAY_ACCOUNT_PAYLOAD: 12,
  PERFECT_MONEY_ACCOUNT_PAYLOAD: 13,
  SWISH_ACCOUNT_PAYLOAD: 14,
  U_S_POSTAL_MONEY_ORDER_ACCOUNT_PAYLOAD: 15,
  UPHOLD_ACCOUNT_PAYLOAD: 16,
  CASH_APP_ACCOUNT_PAYLOAD: 17,
  MONEY_BEAM_ACCOUNT_PAYLOAD: 18,
  VENMO_ACCOUNT_PAYLOAD: 19,
  POPMONEY_ACCOUNT_PAYLOAD: 20,
  REVOLUT_ACCOUNT_PAYLOAD: 21,
  WE_CHAT_PAY_ACCOUNT_PAYLOAD: 22,
  MONEY_GRAM_ACCOUNT_PAYLOAD: 23,
  HAL_CASH_ACCOUNT_PAYLOAD: 24,
  PROMPT_PAY_ACCOUNT_PAYLOAD: 25,
  ADVANCED_CASH_ACCOUNT_PAYLOAD: 26,
  INSTANT_CRYPTO_CURRENCY_ACCOUNT_PAYLOAD: 27,
  JAPAN_BANK_ACCOUNT_PAYLOAD: 28,
  TRANSFERWISE_ACCOUNT_PAYLOAD: 29,
  AUSTRALIA_PAYID_PAYLOAD: 30,
  AMAZON_GIFT_CARD_ACCOUNT_PAYLOAD: 31,
  PAY_BY_MAIL_ACCOUNT_PAYLOAD: 32,
  CAPITUAL_ACCOUNT_PAYLOAD: 33,
  PAYSERA_ACCOUNT_PAYLOAD: 34,
  PAXUM_ACCOUNT_PAYLOAD: 35,
  SWIFT_ACCOUNT_PAYLOAD: 36,
  CEL_PAY_ACCOUNT_PAYLOAD: 37,
  MONESE_ACCOUNT_PAYLOAD: 38,
  VERSE_ACCOUNT_PAYLOAD: 39,
  CASH_AT_ATM_ACCOUNT_PAYLOAD: 40
};

/**
 * @return {proto.io.haveno.protobuffer.PaymentAccountPayload.MessageCase}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.PaymentAccountPayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentMethodId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    maxTradePeriod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    excludeFromJsonDataMap: (f = msg.getExcludeFromJsonDataMap()) ? f.toObject(includeInstance, undefined) : [],
    aliPayAccountPayload: (f = msg.getAliPayAccountPayload()) && proto.io.haveno.protobuffer.AliPayAccountPayload.toObject(includeInstance, f),
    chaseQuickPayAccountPayload: (f = msg.getChaseQuickPayAccountPayload()) && proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.toObject(includeInstance, f),
    zelleAccountPayload: (f = msg.getZelleAccountPayload()) && proto.io.haveno.protobuffer.ZelleAccountPayload.toObject(includeInstance, f),
    countryBasedPaymentAccountPayload: (f = msg.getCountryBasedPaymentAccountPayload()) && proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.toObject(includeInstance, f),
    cryptoCurrencyAccountPayload: (f = msg.getCryptoCurrencyAccountPayload()) && proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.toObject(includeInstance, f),
    fasterPaymentsAccountPayload: (f = msg.getFasterPaymentsAccountPayload()) && proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.toObject(includeInstance, f),
    interacETransferAccountPayload: (f = msg.getInteracETransferAccountPayload()) && proto.io.haveno.protobuffer.InteracETransferAccountPayload.toObject(includeInstance, f),
    oKPayAccountPayload: (f = msg.getOKPayAccountPayload()) && proto.io.haveno.protobuffer.OKPayAccountPayload.toObject(includeInstance, f),
    perfectMoneyAccountPayload: (f = msg.getPerfectMoneyAccountPayload()) && proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.toObject(includeInstance, f),
    swishAccountPayload: (f = msg.getSwishAccountPayload()) && proto.io.haveno.protobuffer.SwishAccountPayload.toObject(includeInstance, f),
    uSPostalMoneyOrderAccountPayload: (f = msg.getUSPostalMoneyOrderAccountPayload()) && proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.toObject(includeInstance, f),
    upholdAccountPayload: (f = msg.getUpholdAccountPayload()) && proto.io.haveno.protobuffer.UpholdAccountPayload.toObject(includeInstance, f),
    cashAppAccountPayload: (f = msg.getCashAppAccountPayload()) && proto.io.haveno.protobuffer.CashAppAccountPayload.toObject(includeInstance, f),
    moneyBeamAccountPayload: (f = msg.getMoneyBeamAccountPayload()) && proto.io.haveno.protobuffer.MoneyBeamAccountPayload.toObject(includeInstance, f),
    venmoAccountPayload: (f = msg.getVenmoAccountPayload()) && proto.io.haveno.protobuffer.VenmoAccountPayload.toObject(includeInstance, f),
    popmoneyAccountPayload: (f = msg.getPopmoneyAccountPayload()) && proto.io.haveno.protobuffer.PopmoneyAccountPayload.toObject(includeInstance, f),
    revolutAccountPayload: (f = msg.getRevolutAccountPayload()) && proto.io.haveno.protobuffer.RevolutAccountPayload.toObject(includeInstance, f),
    weChatPayAccountPayload: (f = msg.getWeChatPayAccountPayload()) && proto.io.haveno.protobuffer.WeChatPayAccountPayload.toObject(includeInstance, f),
    moneyGramAccountPayload: (f = msg.getMoneyGramAccountPayload()) && proto.io.haveno.protobuffer.MoneyGramAccountPayload.toObject(includeInstance, f),
    halCashAccountPayload: (f = msg.getHalCashAccountPayload()) && proto.io.haveno.protobuffer.HalCashAccountPayload.toObject(includeInstance, f),
    promptPayAccountPayload: (f = msg.getPromptPayAccountPayload()) && proto.io.haveno.protobuffer.PromptPayAccountPayload.toObject(includeInstance, f),
    advancedCashAccountPayload: (f = msg.getAdvancedCashAccountPayload()) && proto.io.haveno.protobuffer.AdvancedCashAccountPayload.toObject(includeInstance, f),
    instantCryptoCurrencyAccountPayload: (f = msg.getInstantCryptoCurrencyAccountPayload()) && proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.toObject(includeInstance, f),
    japanBankAccountPayload: (f = msg.getJapanBankAccountPayload()) && proto.io.haveno.protobuffer.JapanBankAccountPayload.toObject(includeInstance, f),
    transferwiseAccountPayload: (f = msg.getTransferwiseAccountPayload()) && proto.io.haveno.protobuffer.TransferwiseAccountPayload.toObject(includeInstance, f),
    australiaPayidPayload: (f = msg.getAustraliaPayidPayload()) && proto.io.haveno.protobuffer.AustraliaPayidPayload.toObject(includeInstance, f),
    amazonGiftCardAccountPayload: (f = msg.getAmazonGiftCardAccountPayload()) && proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.toObject(includeInstance, f),
    payByMailAccountPayload: (f = msg.getPayByMailAccountPayload()) && proto.io.haveno.protobuffer.PayByMailAccountPayload.toObject(includeInstance, f),
    capitualAccountPayload: (f = msg.getCapitualAccountPayload()) && proto.io.haveno.protobuffer.CapitualAccountPayload.toObject(includeInstance, f),
    payseraAccountPayload: (f = msg.getPayseraAccountPayload()) && proto.io.haveno.protobuffer.PayseraAccountPayload.toObject(includeInstance, f),
    paxumAccountPayload: (f = msg.getPaxumAccountPayload()) && proto.io.haveno.protobuffer.PaxumAccountPayload.toObject(includeInstance, f),
    swiftAccountPayload: (f = msg.getSwiftAccountPayload()) && proto.io.haveno.protobuffer.SwiftAccountPayload.toObject(includeInstance, f),
    celPayAccountPayload: (f = msg.getCelPayAccountPayload()) && proto.io.haveno.protobuffer.CelPayAccountPayload.toObject(includeInstance, f),
    moneseAccountPayload: (f = msg.getMoneseAccountPayload()) && proto.io.haveno.protobuffer.MoneseAccountPayload.toObject(includeInstance, f),
    verseAccountPayload: (f = msg.getVerseAccountPayload()) && proto.io.haveno.protobuffer.VerseAccountPayload.toObject(includeInstance, f),
    cashAtAtmAccountPayload: (f = msg.getCashAtAtmAccountPayload()) && proto.io.haveno.protobuffer.CashAtAtmAccountPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccountPayload;
  return proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTradePeriod(value);
      break;
    case 4:
      var value = msg.getExcludeFromJsonDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.AliPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.AliPayAccountPayload.deserializeBinaryFromReader);
      msg.setAliPayAccountPayload(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.deserializeBinaryFromReader);
      msg.setChaseQuickPayAccountPayload(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.ZelleAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.ZelleAccountPayload.deserializeBinaryFromReader);
      msg.setZelleAccountPayload(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.deserializeBinaryFromReader);
      msg.setCountryBasedPaymentAccountPayload(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.deserializeBinaryFromReader);
      msg.setCryptoCurrencyAccountPayload(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.FasterPaymentsAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.deserializeBinaryFromReader);
      msg.setFasterPaymentsAccountPayload(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.InteracETransferAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.InteracETransferAccountPayload.deserializeBinaryFromReader);
      msg.setInteracETransferAccountPayload(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.OKPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OKPayAccountPayload.deserializeBinaryFromReader);
      msg.setOKPayAccountPayload(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.PerfectMoneyAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.deserializeBinaryFromReader);
      msg.setPerfectMoneyAccountPayload(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.SwishAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SwishAccountPayload.deserializeBinaryFromReader);
      msg.setSwishAccountPayload(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.deserializeBinaryFromReader);
      msg.setUSPostalMoneyOrderAccountPayload(value);
      break;
    case 16:
      var value = new proto.io.haveno.protobuffer.UpholdAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.UpholdAccountPayload.deserializeBinaryFromReader);
      msg.setUpholdAccountPayload(value);
      break;
    case 17:
      var value = new proto.io.haveno.protobuffer.CashAppAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CashAppAccountPayload.deserializeBinaryFromReader);
      msg.setCashAppAccountPayload(value);
      break;
    case 18:
      var value = new proto.io.haveno.protobuffer.MoneyBeamAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.MoneyBeamAccountPayload.deserializeBinaryFromReader);
      msg.setMoneyBeamAccountPayload(value);
      break;
    case 19:
      var value = new proto.io.haveno.protobuffer.VenmoAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.VenmoAccountPayload.deserializeBinaryFromReader);
      msg.setVenmoAccountPayload(value);
      break;
    case 20:
      var value = new proto.io.haveno.protobuffer.PopmoneyAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PopmoneyAccountPayload.deserializeBinaryFromReader);
      msg.setPopmoneyAccountPayload(value);
      break;
    case 21:
      var value = new proto.io.haveno.protobuffer.RevolutAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.RevolutAccountPayload.deserializeBinaryFromReader);
      msg.setRevolutAccountPayload(value);
      break;
    case 22:
      var value = new proto.io.haveno.protobuffer.WeChatPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.WeChatPayAccountPayload.deserializeBinaryFromReader);
      msg.setWeChatPayAccountPayload(value);
      break;
    case 23:
      var value = new proto.io.haveno.protobuffer.MoneyGramAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.MoneyGramAccountPayload.deserializeBinaryFromReader);
      msg.setMoneyGramAccountPayload(value);
      break;
    case 24:
      var value = new proto.io.haveno.protobuffer.HalCashAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.HalCashAccountPayload.deserializeBinaryFromReader);
      msg.setHalCashAccountPayload(value);
      break;
    case 25:
      var value = new proto.io.haveno.protobuffer.PromptPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PromptPayAccountPayload.deserializeBinaryFromReader);
      msg.setPromptPayAccountPayload(value);
      break;
    case 26:
      var value = new proto.io.haveno.protobuffer.AdvancedCashAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.AdvancedCashAccountPayload.deserializeBinaryFromReader);
      msg.setAdvancedCashAccountPayload(value);
      break;
    case 27:
      var value = new proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.deserializeBinaryFromReader);
      msg.setInstantCryptoCurrencyAccountPayload(value);
      break;
    case 28:
      var value = new proto.io.haveno.protobuffer.JapanBankAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.JapanBankAccountPayload.deserializeBinaryFromReader);
      msg.setJapanBankAccountPayload(value);
      break;
    case 29:
      var value = new proto.io.haveno.protobuffer.TransferwiseAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.TransferwiseAccountPayload.deserializeBinaryFromReader);
      msg.setTransferwiseAccountPayload(value);
      break;
    case 30:
      var value = new proto.io.haveno.protobuffer.AustraliaPayidPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.AustraliaPayidPayload.deserializeBinaryFromReader);
      msg.setAustraliaPayidPayload(value);
      break;
    case 31:
      var value = new proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.deserializeBinaryFromReader);
      msg.setAmazonGiftCardAccountPayload(value);
      break;
    case 32:
      var value = new proto.io.haveno.protobuffer.PayByMailAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PayByMailAccountPayload.deserializeBinaryFromReader);
      msg.setPayByMailAccountPayload(value);
      break;
    case 33:
      var value = new proto.io.haveno.protobuffer.CapitualAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CapitualAccountPayload.deserializeBinaryFromReader);
      msg.setCapitualAccountPayload(value);
      break;
    case 34:
      var value = new proto.io.haveno.protobuffer.PayseraAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PayseraAccountPayload.deserializeBinaryFromReader);
      msg.setPayseraAccountPayload(value);
      break;
    case 35:
      var value = new proto.io.haveno.protobuffer.PaxumAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaxumAccountPayload.deserializeBinaryFromReader);
      msg.setPaxumAccountPayload(value);
      break;
    case 36:
      var value = new proto.io.haveno.protobuffer.SwiftAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SwiftAccountPayload.deserializeBinaryFromReader);
      msg.setSwiftAccountPayload(value);
      break;
    case 37:
      var value = new proto.io.haveno.protobuffer.CelPayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CelPayAccountPayload.deserializeBinaryFromReader);
      msg.setCelPayAccountPayload(value);
      break;
    case 38:
      var value = new proto.io.haveno.protobuffer.MoneseAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.MoneseAccountPayload.deserializeBinaryFromReader);
      msg.setMoneseAccountPayload(value);
      break;
    case 39:
      var value = new proto.io.haveno.protobuffer.VerseAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.VerseAccountPayload.deserializeBinaryFromReader);
      msg.setVerseAccountPayload(value);
      break;
    case 40:
      var value = new proto.io.haveno.protobuffer.CashAtAtmAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CashAtAtmAccountPayload.deserializeBinaryFromReader);
      msg.setCashAtAtmAccountPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaxTradePeriod();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getExcludeFromJsonDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAliPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.AliPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getChaseQuickPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getZelleAccountPayload();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.ZelleAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCountryBasedPaymentAccountPayload();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCryptoCurrencyAccountPayload();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getFasterPaymentsAccountPayload();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getInteracETransferAccountPayload();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.InteracETransferAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getOKPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.OKPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPerfectMoneyAccountPayload();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSwishAccountPayload();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.SwishAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getUSPostalMoneyOrderAccountPayload();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getUpholdAccountPayload();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.io.haveno.protobuffer.UpholdAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCashAppAccountPayload();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.io.haveno.protobuffer.CashAppAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getMoneyBeamAccountPayload();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.io.haveno.protobuffer.MoneyBeamAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getVenmoAccountPayload();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.io.haveno.protobuffer.VenmoAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPopmoneyAccountPayload();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.io.haveno.protobuffer.PopmoneyAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getRevolutAccountPayload();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.io.haveno.protobuffer.RevolutAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getWeChatPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.io.haveno.protobuffer.WeChatPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getMoneyGramAccountPayload();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.io.haveno.protobuffer.MoneyGramAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getHalCashAccountPayload();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.io.haveno.protobuffer.HalCashAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPromptPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.io.haveno.protobuffer.PromptPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getAdvancedCashAccountPayload();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.io.haveno.protobuffer.AdvancedCashAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getInstantCryptoCurrencyAccountPayload();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getJapanBankAccountPayload();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.io.haveno.protobuffer.JapanBankAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getTransferwiseAccountPayload();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.io.haveno.protobuffer.TransferwiseAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getAustraliaPayidPayload();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.io.haveno.protobuffer.AustraliaPayidPayload.serializeBinaryToWriter
    );
  }
  f = message.getAmazonGiftCardAccountPayload();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPayByMailAccountPayload();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.io.haveno.protobuffer.PayByMailAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCapitualAccountPayload();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.io.haveno.protobuffer.CapitualAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPayseraAccountPayload();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.io.haveno.protobuffer.PayseraAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPaxumAccountPayload();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.io.haveno.protobuffer.PaxumAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSwiftAccountPayload();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.io.haveno.protobuffer.SwiftAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCelPayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.io.haveno.protobuffer.CelPayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getMoneseAccountPayload();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.io.haveno.protobuffer.MoneseAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getVerseAccountPayload();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.io.haveno.protobuffer.VerseAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCashAtAtmAccountPayload();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.io.haveno.protobuffer.CashAtAtmAccountPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payment_method_id = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 max_trade_period = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getMaxTradePeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setMaxTradePeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * map<string, string> exclude_from_json_data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getExcludeFromJsonDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearExcludeFromJsonDataMap = function() {
  this.getExcludeFromJsonDataMap().clear();
  return this;};


/**
 * optional AliPayAccountPayload ali_pay_account_payload = 5;
 * @return {?proto.io.haveno.protobuffer.AliPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getAliPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.AliPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AliPayAccountPayload, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.AliPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setAliPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearAliPayAccountPayload = function() {
  return this.setAliPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasAliPayAccountPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ChaseQuickPayAccountPayload chase_quick_pay_account_payload = 6;
 * @return {?proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getChaseQuickPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setChaseQuickPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearChaseQuickPayAccountPayload = function() {
  return this.setChaseQuickPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasChaseQuickPayAccountPayload = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ZelleAccountPayload zelle_account_payload = 7;
 * @return {?proto.io.haveno.protobuffer.ZelleAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getZelleAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.ZelleAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ZelleAccountPayload, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.ZelleAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setZelleAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearZelleAccountPayload = function() {
  return this.setZelleAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasZelleAccountPayload = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CountryBasedPaymentAccountPayload country_based_payment_account_payload = 8;
 * @return {?proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCountryBasedPaymentAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCountryBasedPaymentAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCountryBasedPaymentAccountPayload = function() {
  return this.setCountryBasedPaymentAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCountryBasedPaymentAccountPayload = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CryptoCurrencyAccountPayload crypto_currency_account_payload = 9;
 * @return {?proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCryptoCurrencyAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCryptoCurrencyAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCryptoCurrencyAccountPayload = function() {
  return this.setCryptoCurrencyAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCryptoCurrencyAccountPayload = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FasterPaymentsAccountPayload faster_payments_account_payload = 10;
 * @return {?proto.io.haveno.protobuffer.FasterPaymentsAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getFasterPaymentsAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.FasterPaymentsAccountPayload, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.FasterPaymentsAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setFasterPaymentsAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearFasterPaymentsAccountPayload = function() {
  return this.setFasterPaymentsAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasFasterPaymentsAccountPayload = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional InteracETransferAccountPayload interac_e_transfer_account_payload = 11;
 * @return {?proto.io.haveno.protobuffer.InteracETransferAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getInteracETransferAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.InteracETransferAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.InteracETransferAccountPayload, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.InteracETransferAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setInteracETransferAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearInteracETransferAccountPayload = function() {
  return this.setInteracETransferAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasInteracETransferAccountPayload = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional OKPayAccountPayload o_k_pay_account_payload = 12;
 * @return {?proto.io.haveno.protobuffer.OKPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getOKPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OKPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OKPayAccountPayload, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.OKPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setOKPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearOKPayAccountPayload = function() {
  return this.setOKPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasOKPayAccountPayload = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PerfectMoneyAccountPayload perfect_money_account_payload = 13;
 * @return {?proto.io.haveno.protobuffer.PerfectMoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPerfectMoneyAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PerfectMoneyAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PerfectMoneyAccountPayload, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.PerfectMoneyAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPerfectMoneyAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPerfectMoneyAccountPayload = function() {
  return this.setPerfectMoneyAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPerfectMoneyAccountPayload = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional SwishAccountPayload swish_account_payload = 14;
 * @return {?proto.io.haveno.protobuffer.SwishAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getSwishAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SwishAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SwishAccountPayload, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.SwishAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setSwishAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearSwishAccountPayload = function() {
  return this.setSwishAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasSwishAccountPayload = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional USPostalMoneyOrderAccountPayload u_s_postal_money_order_account_payload = 15;
 * @return {?proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getUSPostalMoneyOrderAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setUSPostalMoneyOrderAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearUSPostalMoneyOrderAccountPayload = function() {
  return this.setUSPostalMoneyOrderAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasUSPostalMoneyOrderAccountPayload = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional UpholdAccountPayload uphold_account_payload = 16;
 * @return {?proto.io.haveno.protobuffer.UpholdAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getUpholdAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.UpholdAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.UpholdAccountPayload, 16));
};


/**
 * @param {?proto.io.haveno.protobuffer.UpholdAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setUpholdAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearUpholdAccountPayload = function() {
  return this.setUpholdAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasUpholdAccountPayload = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional CashAppAccountPayload cash_app_account_payload = 17;
 * @return {?proto.io.haveno.protobuffer.CashAppAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCashAppAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CashAppAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CashAppAccountPayload, 17));
};


/**
 * @param {?proto.io.haveno.protobuffer.CashAppAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCashAppAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCashAppAccountPayload = function() {
  return this.setCashAppAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCashAppAccountPayload = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional MoneyBeamAccountPayload money_beam_account_payload = 18;
 * @return {?proto.io.haveno.protobuffer.MoneyBeamAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getMoneyBeamAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.MoneyBeamAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MoneyBeamAccountPayload, 18));
};


/**
 * @param {?proto.io.haveno.protobuffer.MoneyBeamAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setMoneyBeamAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearMoneyBeamAccountPayload = function() {
  return this.setMoneyBeamAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasMoneyBeamAccountPayload = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional VenmoAccountPayload venmo_account_payload = 19;
 * @return {?proto.io.haveno.protobuffer.VenmoAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getVenmoAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.VenmoAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.VenmoAccountPayload, 19));
};


/**
 * @param {?proto.io.haveno.protobuffer.VenmoAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setVenmoAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearVenmoAccountPayload = function() {
  return this.setVenmoAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasVenmoAccountPayload = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional PopmoneyAccountPayload popmoney_account_payload = 20;
 * @return {?proto.io.haveno.protobuffer.PopmoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPopmoneyAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PopmoneyAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PopmoneyAccountPayload, 20));
};


/**
 * @param {?proto.io.haveno.protobuffer.PopmoneyAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPopmoneyAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPopmoneyAccountPayload = function() {
  return this.setPopmoneyAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPopmoneyAccountPayload = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional RevolutAccountPayload revolut_account_payload = 21;
 * @return {?proto.io.haveno.protobuffer.RevolutAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getRevolutAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.RevolutAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RevolutAccountPayload, 21));
};


/**
 * @param {?proto.io.haveno.protobuffer.RevolutAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setRevolutAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearRevolutAccountPayload = function() {
  return this.setRevolutAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasRevolutAccountPayload = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional WeChatPayAccountPayload we_chat_pay_account_payload = 22;
 * @return {?proto.io.haveno.protobuffer.WeChatPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getWeChatPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.WeChatPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.WeChatPayAccountPayload, 22));
};


/**
 * @param {?proto.io.haveno.protobuffer.WeChatPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setWeChatPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearWeChatPayAccountPayload = function() {
  return this.setWeChatPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasWeChatPayAccountPayload = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional MoneyGramAccountPayload money_gram_account_payload = 23;
 * @return {?proto.io.haveno.protobuffer.MoneyGramAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getMoneyGramAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.MoneyGramAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MoneyGramAccountPayload, 23));
};


/**
 * @param {?proto.io.haveno.protobuffer.MoneyGramAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setMoneyGramAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearMoneyGramAccountPayload = function() {
  return this.setMoneyGramAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasMoneyGramAccountPayload = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional HalCashAccountPayload hal_cash_account_payload = 24;
 * @return {?proto.io.haveno.protobuffer.HalCashAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getHalCashAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.HalCashAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.HalCashAccountPayload, 24));
};


/**
 * @param {?proto.io.haveno.protobuffer.HalCashAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setHalCashAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearHalCashAccountPayload = function() {
  return this.setHalCashAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasHalCashAccountPayload = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional PromptPayAccountPayload prompt_pay_account_payload = 25;
 * @return {?proto.io.haveno.protobuffer.PromptPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPromptPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PromptPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PromptPayAccountPayload, 25));
};


/**
 * @param {?proto.io.haveno.protobuffer.PromptPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPromptPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPromptPayAccountPayload = function() {
  return this.setPromptPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPromptPayAccountPayload = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional AdvancedCashAccountPayload advanced_cash_account_payload = 26;
 * @return {?proto.io.haveno.protobuffer.AdvancedCashAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getAdvancedCashAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.AdvancedCashAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AdvancedCashAccountPayload, 26));
};


/**
 * @param {?proto.io.haveno.protobuffer.AdvancedCashAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setAdvancedCashAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearAdvancedCashAccountPayload = function() {
  return this.setAdvancedCashAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasAdvancedCashAccountPayload = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional InstantCryptoCurrencyAccountPayload instant_crypto_currency_account_payload = 27;
 * @return {?proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getInstantCryptoCurrencyAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload, 27));
};


/**
 * @param {?proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setInstantCryptoCurrencyAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearInstantCryptoCurrencyAccountPayload = function() {
  return this.setInstantCryptoCurrencyAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasInstantCryptoCurrencyAccountPayload = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional JapanBankAccountPayload japan_bank_account_payload = 28;
 * @return {?proto.io.haveno.protobuffer.JapanBankAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getJapanBankAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.JapanBankAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.JapanBankAccountPayload, 28));
};


/**
 * @param {?proto.io.haveno.protobuffer.JapanBankAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setJapanBankAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearJapanBankAccountPayload = function() {
  return this.setJapanBankAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasJapanBankAccountPayload = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional TransferwiseAccountPayload Transferwise_account_payload = 29;
 * @return {?proto.io.haveno.protobuffer.TransferwiseAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getTransferwiseAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.TransferwiseAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TransferwiseAccountPayload, 29));
};


/**
 * @param {?proto.io.haveno.protobuffer.TransferwiseAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setTransferwiseAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearTransferwiseAccountPayload = function() {
  return this.setTransferwiseAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasTransferwiseAccountPayload = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional AustraliaPayidPayload australia_payid_payload = 30;
 * @return {?proto.io.haveno.protobuffer.AustraliaPayidPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getAustraliaPayidPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.AustraliaPayidPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AustraliaPayidPayload, 30));
};


/**
 * @param {?proto.io.haveno.protobuffer.AustraliaPayidPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setAustraliaPayidPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearAustraliaPayidPayload = function() {
  return this.setAustraliaPayidPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasAustraliaPayidPayload = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional AmazonGiftCardAccountPayload amazon_gift_card_account_payload = 31;
 * @return {?proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getAmazonGiftCardAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload, 31));
};


/**
 * @param {?proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setAmazonGiftCardAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearAmazonGiftCardAccountPayload = function() {
  return this.setAmazonGiftCardAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasAmazonGiftCardAccountPayload = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional PayByMailAccountPayload pay_by_mail_account_payload = 32;
 * @return {?proto.io.haveno.protobuffer.PayByMailAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPayByMailAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PayByMailAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PayByMailAccountPayload, 32));
};


/**
 * @param {?proto.io.haveno.protobuffer.PayByMailAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPayByMailAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 32, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPayByMailAccountPayload = function() {
  return this.setPayByMailAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPayByMailAccountPayload = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional CapitualAccountPayload capitual_account_payload = 33;
 * @return {?proto.io.haveno.protobuffer.CapitualAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCapitualAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CapitualAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CapitualAccountPayload, 33));
};


/**
 * @param {?proto.io.haveno.protobuffer.CapitualAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCapitualAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 33, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCapitualAccountPayload = function() {
  return this.setCapitualAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCapitualAccountPayload = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional PayseraAccountPayload Paysera_account_payload = 34;
 * @return {?proto.io.haveno.protobuffer.PayseraAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPayseraAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PayseraAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PayseraAccountPayload, 34));
};


/**
 * @param {?proto.io.haveno.protobuffer.PayseraAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPayseraAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 34, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPayseraAccountPayload = function() {
  return this.setPayseraAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPayseraAccountPayload = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional PaxumAccountPayload Paxum_account_payload = 35;
 * @return {?proto.io.haveno.protobuffer.PaxumAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getPaxumAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaxumAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaxumAccountPayload, 35));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaxumAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setPaxumAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 35, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearPaxumAccountPayload = function() {
  return this.setPaxumAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasPaxumAccountPayload = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional SwiftAccountPayload swift_account_payload = 36;
 * @return {?proto.io.haveno.protobuffer.SwiftAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getSwiftAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SwiftAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SwiftAccountPayload, 36));
};


/**
 * @param {?proto.io.haveno.protobuffer.SwiftAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setSwiftAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 36, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearSwiftAccountPayload = function() {
  return this.setSwiftAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasSwiftAccountPayload = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional CelPayAccountPayload cel_pay_account_payload = 37;
 * @return {?proto.io.haveno.protobuffer.CelPayAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCelPayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CelPayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CelPayAccountPayload, 37));
};


/**
 * @param {?proto.io.haveno.protobuffer.CelPayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCelPayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 37, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCelPayAccountPayload = function() {
  return this.setCelPayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCelPayAccountPayload = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional MoneseAccountPayload monese_account_payload = 38;
 * @return {?proto.io.haveno.protobuffer.MoneseAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getMoneseAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.MoneseAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MoneseAccountPayload, 38));
};


/**
 * @param {?proto.io.haveno.protobuffer.MoneseAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setMoneseAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 38, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearMoneseAccountPayload = function() {
  return this.setMoneseAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasMoneseAccountPayload = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional VerseAccountPayload verse_account_payload = 39;
 * @return {?proto.io.haveno.protobuffer.VerseAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getVerseAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.VerseAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.VerseAccountPayload, 39));
};


/**
 * @param {?proto.io.haveno.protobuffer.VerseAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setVerseAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 39, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearVerseAccountPayload = function() {
  return this.setVerseAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasVerseAccountPayload = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional CashAtAtmAccountPayload cash_at_atm_account_payload = 40;
 * @return {?proto.io.haveno.protobuffer.CashAtAtmAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.getCashAtAtmAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CashAtAtmAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CashAtAtmAccountPayload, 40));
};


/**
 * @param {?proto.io.haveno.protobuffer.CashAtAtmAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.setCashAtAtmAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 40, proto.io.haveno.protobuffer.PaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.clearCashAtAtmAccountPayload = function() {
  return this.setCashAtAtmAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccountPayload.prototype.hasCashAtAtmAccountPayload = function() {
  return jspb.Message.getField(this, 40) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AliPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AliPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AliPayAccountPayload}
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AliPayAccountPayload;
  return proto.io.haveno.protobuffer.AliPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AliPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AliPayAccountPayload}
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AliPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AliPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AliPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.AliPayAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.WeChatPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.WeChatPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.WeChatPayAccountPayload}
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.WeChatPayAccountPayload;
  return proto.io.haveno.protobuffer.WeChatPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.WeChatPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.WeChatPayAccountPayload}
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.WeChatPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.WeChatPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.WeChatPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.WeChatPayAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload;
  return proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.ChaseQuickPayAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ZelleAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ZelleAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailOrMobileNr: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ZelleAccountPayload}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ZelleAccountPayload;
  return proto.io.haveno.protobuffer.ZelleAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ZelleAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ZelleAccountPayload}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailOrMobileNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ZelleAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ZelleAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailOrMobileNr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ZelleAccountPayload} returns this
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email_or_mobile_nr = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.getEmailOrMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ZelleAccountPayload} returns this
 */
proto.io.haveno.protobuffer.ZelleAccountPayload.prototype.setEmailOrMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_ = [[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  BANK_ACCOUNT_PAYLOAD: 3,
  CASH_DEPOSIT_ACCOUNT_PAYLOAD: 4,
  SEPA_ACCOUNT_PAYLOAD: 5,
  WESTERN_UNION_ACCOUNT_PAYLOAD: 6,
  SEPA_INSTANT_ACCOUNT_PAYLOAD: 7,
  F2F_ACCOUNT_PAYLOAD: 8,
  UPI_ACCOUNT_PAYLOAD: 9,
  PAYTM_ACCOUNT_PAYLOAD: 10,
  IFSC_BASED_ACCOUNT_PAYLOAD: 11,
  NEQUI_ACCOUNT_PAYLOAD: 12,
  BIZUM_ACCOUNT_PAYLOAD: 13,
  PIX_ACCOUNT_PAYLOAD: 14,
  SATISPAY_ACCOUNT_PAYLOAD: 15,
  STRIKE_ACCOUNT_PAYLOAD: 16,
  TIKKIE_ACCOUNT_PAYLOAD: 17,
  TRANSFERWISE_USD_ACCOUNT_PAYLOAD: 18,
  SWIFT_ACCOUNT_PAYLOAD: 19
};

/**
 * @return {proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.MessageCase}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    acceptedCountryCodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    bankAccountPayload: (f = msg.getBankAccountPayload()) && proto.io.haveno.protobuffer.BankAccountPayload.toObject(includeInstance, f),
    cashDepositAccountPayload: (f = msg.getCashDepositAccountPayload()) && proto.io.haveno.protobuffer.CashDepositAccountPayload.toObject(includeInstance, f),
    sepaAccountPayload: (f = msg.getSepaAccountPayload()) && proto.io.haveno.protobuffer.SepaAccountPayload.toObject(includeInstance, f),
    westernUnionAccountPayload: (f = msg.getWesternUnionAccountPayload()) && proto.io.haveno.protobuffer.WesternUnionAccountPayload.toObject(includeInstance, f),
    sepaInstantAccountPayload: (f = msg.getSepaInstantAccountPayload()) && proto.io.haveno.protobuffer.SepaInstantAccountPayload.toObject(includeInstance, f),
    f2fAccountPayload: (f = msg.getF2fAccountPayload()) && proto.io.haveno.protobuffer.F2FAccountPayload.toObject(includeInstance, f),
    upiAccountPayload: (f = msg.getUpiAccountPayload()) && proto.io.haveno.protobuffer.UpiAccountPayload.toObject(includeInstance, f),
    paytmAccountPayload: (f = msg.getPaytmAccountPayload()) && proto.io.haveno.protobuffer.PaytmAccountPayload.toObject(includeInstance, f),
    ifscBasedAccountPayload: (f = msg.getIfscBasedAccountPayload()) && proto.io.haveno.protobuffer.IfscBasedAccountPayload.toObject(includeInstance, f),
    nequiAccountPayload: (f = msg.getNequiAccountPayload()) && proto.io.haveno.protobuffer.NequiAccountPayload.toObject(includeInstance, f),
    bizumAccountPayload: (f = msg.getBizumAccountPayload()) && proto.io.haveno.protobuffer.BizumAccountPayload.toObject(includeInstance, f),
    pixAccountPayload: (f = msg.getPixAccountPayload()) && proto.io.haveno.protobuffer.PixAccountPayload.toObject(includeInstance, f),
    satispayAccountPayload: (f = msg.getSatispayAccountPayload()) && proto.io.haveno.protobuffer.SatispayAccountPayload.toObject(includeInstance, f),
    strikeAccountPayload: (f = msg.getStrikeAccountPayload()) && proto.io.haveno.protobuffer.StrikeAccountPayload.toObject(includeInstance, f),
    tikkieAccountPayload: (f = msg.getTikkieAccountPayload()) && proto.io.haveno.protobuffer.TikkieAccountPayload.toObject(includeInstance, f),
    transferwiseUsdAccountPayload: (f = msg.getTransferwiseUsdAccountPayload()) && proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.toObject(includeInstance, f),
    swiftAccountPayload: (f = msg.getSwiftAccountPayload()) && proto.io.haveno.protobuffer.SwiftAccountPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload;
  return proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcceptedCountryCodes(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.BankAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.BankAccountPayload.deserializeBinaryFromReader);
      msg.setBankAccountPayload(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.CashDepositAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.CashDepositAccountPayload.deserializeBinaryFromReader);
      msg.setCashDepositAccountPayload(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.SepaAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SepaAccountPayload.deserializeBinaryFromReader);
      msg.setSepaAccountPayload(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.WesternUnionAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.WesternUnionAccountPayload.deserializeBinaryFromReader);
      msg.setWesternUnionAccountPayload(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.SepaInstantAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SepaInstantAccountPayload.deserializeBinaryFromReader);
      msg.setSepaInstantAccountPayload(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.F2FAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.F2FAccountPayload.deserializeBinaryFromReader);
      msg.setF2fAccountPayload(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.UpiAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.UpiAccountPayload.deserializeBinaryFromReader);
      msg.setUpiAccountPayload(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.PaytmAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaytmAccountPayload.deserializeBinaryFromReader);
      msg.setPaytmAccountPayload(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.IfscBasedAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.IfscBasedAccountPayload.deserializeBinaryFromReader);
      msg.setIfscBasedAccountPayload(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.NequiAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.NequiAccountPayload.deserializeBinaryFromReader);
      msg.setNequiAccountPayload(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.BizumAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.BizumAccountPayload.deserializeBinaryFromReader);
      msg.setBizumAccountPayload(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.PixAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PixAccountPayload.deserializeBinaryFromReader);
      msg.setPixAccountPayload(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.SatispayAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SatispayAccountPayload.deserializeBinaryFromReader);
      msg.setSatispayAccountPayload(value);
      break;
    case 16:
      var value = new proto.io.haveno.protobuffer.StrikeAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.StrikeAccountPayload.deserializeBinaryFromReader);
      msg.setStrikeAccountPayload(value);
      break;
    case 17:
      var value = new proto.io.haveno.protobuffer.TikkieAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.TikkieAccountPayload.deserializeBinaryFromReader);
      msg.setTikkieAccountPayload(value);
      break;
    case 18:
      var value = new proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.deserializeBinaryFromReader);
      msg.setTransferwiseUsdAccountPayload(value);
      break;
    case 19:
      var value = new proto.io.haveno.protobuffer.SwiftAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SwiftAccountPayload.deserializeBinaryFromReader);
      msg.setSwiftAccountPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAcceptedCountryCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getBankAccountPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.BankAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getCashDepositAccountPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.CashDepositAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSepaAccountPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.SepaAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getWesternUnionAccountPayload();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.WesternUnionAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSepaInstantAccountPayload();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.SepaInstantAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getF2fAccountPayload();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.F2FAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getUpiAccountPayload();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.UpiAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPaytmAccountPayload();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.PaytmAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getIfscBasedAccountPayload();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.IfscBasedAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getNequiAccountPayload();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.NequiAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getBizumAccountPayload();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.BizumAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPixAccountPayload();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.PixAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSatispayAccountPayload();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.SatispayAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getStrikeAccountPayload();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.io.haveno.protobuffer.StrikeAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getTikkieAccountPayload();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.io.haveno.protobuffer.TikkieAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getTransferwiseUsdAccountPayload();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSwiftAccountPayload();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.io.haveno.protobuffer.SwiftAccountPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string country_code = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string accepted_country_codes = 2;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getAcceptedCountryCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setAcceptedCountryCodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.addAcceptedCountryCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearAcceptedCountryCodesList = function() {
  return this.setAcceptedCountryCodesList([]);
};


/**
 * optional BankAccountPayload bank_account_payload = 3;
 * @return {?proto.io.haveno.protobuffer.BankAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getBankAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.BankAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BankAccountPayload, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.BankAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setBankAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearBankAccountPayload = function() {
  return this.setBankAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasBankAccountPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CashDepositAccountPayload cash_deposit_account_payload = 4;
 * @return {?proto.io.haveno.protobuffer.CashDepositAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getCashDepositAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.CashDepositAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CashDepositAccountPayload, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.CashDepositAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setCashDepositAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearCashDepositAccountPayload = function() {
  return this.setCashDepositAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasCashDepositAccountPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SepaAccountPayload sepa_account_payload = 5;
 * @return {?proto.io.haveno.protobuffer.SepaAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getSepaAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SepaAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SepaAccountPayload, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.SepaAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setSepaAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearSepaAccountPayload = function() {
  return this.setSepaAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasSepaAccountPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional WesternUnionAccountPayload western_union_account_payload = 6;
 * @return {?proto.io.haveno.protobuffer.WesternUnionAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getWesternUnionAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.WesternUnionAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.WesternUnionAccountPayload, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.WesternUnionAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setWesternUnionAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearWesternUnionAccountPayload = function() {
  return this.setWesternUnionAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasWesternUnionAccountPayload = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SepaInstantAccountPayload sepa_instant_account_payload = 7;
 * @return {?proto.io.haveno.protobuffer.SepaInstantAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getSepaInstantAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SepaInstantAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SepaInstantAccountPayload, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.SepaInstantAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setSepaInstantAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearSepaInstantAccountPayload = function() {
  return this.setSepaInstantAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasSepaInstantAccountPayload = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional F2FAccountPayload f2f_account_payload = 8;
 * @return {?proto.io.haveno.protobuffer.F2FAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getF2fAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.F2FAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.F2FAccountPayload, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.F2FAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setF2fAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearF2fAccountPayload = function() {
  return this.setF2fAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasF2fAccountPayload = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UpiAccountPayload upi_account_payload = 9;
 * @return {?proto.io.haveno.protobuffer.UpiAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getUpiAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.UpiAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.UpiAccountPayload, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.UpiAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setUpiAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearUpiAccountPayload = function() {
  return this.setUpiAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasUpiAccountPayload = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional PaytmAccountPayload paytm_account_payload = 10;
 * @return {?proto.io.haveno.protobuffer.PaytmAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getPaytmAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaytmAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaytmAccountPayload, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaytmAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setPaytmAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearPaytmAccountPayload = function() {
  return this.setPaytmAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasPaytmAccountPayload = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional IfscBasedAccountPayload ifsc_based_account_payload = 11;
 * @return {?proto.io.haveno.protobuffer.IfscBasedAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getIfscBasedAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.IfscBasedAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.IfscBasedAccountPayload, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.IfscBasedAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setIfscBasedAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearIfscBasedAccountPayload = function() {
  return this.setIfscBasedAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasIfscBasedAccountPayload = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional NequiAccountPayload nequi_account_payload = 12;
 * @return {?proto.io.haveno.protobuffer.NequiAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getNequiAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.NequiAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NequiAccountPayload, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.NequiAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setNequiAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearNequiAccountPayload = function() {
  return this.setNequiAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasNequiAccountPayload = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BizumAccountPayload bizum_account_payload = 13;
 * @return {?proto.io.haveno.protobuffer.BizumAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getBizumAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.BizumAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BizumAccountPayload, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.BizumAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setBizumAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearBizumAccountPayload = function() {
  return this.setBizumAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasBizumAccountPayload = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PixAccountPayload pix_account_payload = 14;
 * @return {?proto.io.haveno.protobuffer.PixAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getPixAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PixAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PixAccountPayload, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.PixAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setPixAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearPixAccountPayload = function() {
  return this.setPixAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasPixAccountPayload = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional SatispayAccountPayload satispay_account_payload = 15;
 * @return {?proto.io.haveno.protobuffer.SatispayAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getSatispayAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SatispayAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SatispayAccountPayload, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.SatispayAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setSatispayAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearSatispayAccountPayload = function() {
  return this.setSatispayAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasSatispayAccountPayload = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional StrikeAccountPayload strike_account_payload = 16;
 * @return {?proto.io.haveno.protobuffer.StrikeAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getStrikeAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.StrikeAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.StrikeAccountPayload, 16));
};


/**
 * @param {?proto.io.haveno.protobuffer.StrikeAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setStrikeAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearStrikeAccountPayload = function() {
  return this.setStrikeAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasStrikeAccountPayload = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional TikkieAccountPayload tikkie_account_payload = 17;
 * @return {?proto.io.haveno.protobuffer.TikkieAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getTikkieAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.TikkieAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TikkieAccountPayload, 17));
};


/**
 * @param {?proto.io.haveno.protobuffer.TikkieAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setTikkieAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearTikkieAccountPayload = function() {
  return this.setTikkieAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasTikkieAccountPayload = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional TransferwiseUsdAccountPayload transferwise_usd_account_payload = 18;
 * @return {?proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getTransferwiseUsdAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload, 18));
};


/**
 * @param {?proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setTransferwiseUsdAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearTransferwiseUsdAccountPayload = function() {
  return this.setTransferwiseUsdAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasTransferwiseUsdAccountPayload = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional SwiftAccountPayload swift_account_payload = 19;
 * @return {?proto.io.haveno.protobuffer.SwiftAccountPayload}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.getSwiftAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SwiftAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SwiftAccountPayload, 19));
};


/**
 * @param {?proto.io.haveno.protobuffer.SwiftAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
*/
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.setSwiftAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.clearSwiftAccountPayload = function() {
  return this.setSwiftAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CountryBasedPaymentAccountPayload.prototype.hasSwiftAccountPayload = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_ = [[9,10,11,13,14]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.BankAccountPayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  NATIONAL_BANK_ACCOUNT_PAYLOAD: 9,
  SAME_BANK_ACCONT_PAYLOAD: 10,
  SPECIFIC_BANKS_ACCOUNT_PAYLOAD: 11,
  ACH_TRANSFER_ACCOUNT_PAYLOAD: 13,
  DOMESTIC_WIRE_TRANSFER_ACCOUNT_PAYLOAD: 14
};

/**
 * @return {proto.io.haveno.protobuffer.BankAccountPayload.MessageCase}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.BankAccountPayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BankAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BankAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BankAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    branchId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountNr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accountType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    holderTaxId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    nationalBankAccountPayload: (f = msg.getNationalBankAccountPayload()) && proto.io.haveno.protobuffer.NationalBankAccountPayload.toObject(includeInstance, f),
    sameBankAccontPayload: (f = msg.getSameBankAccontPayload()) && proto.io.haveno.protobuffer.SameBankAccountPayload.toObject(includeInstance, f),
    specificBanksAccountPayload: (f = msg.getSpecificBanksAccountPayload()) && proto.io.haveno.protobuffer.SpecificBanksAccountPayload.toObject(includeInstance, f),
    achTransferAccountPayload: (f = msg.getAchTransferAccountPayload()) && proto.io.haveno.protobuffer.AchTransferAccountPayload.toObject(includeInstance, f),
    domesticWireTransferAccountPayload: (f = msg.getDomesticWireTransferAccountPayload()) && proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.toObject(includeInstance, f),
    nationalAccountId: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BankAccountPayload;
  return proto.io.haveno.protobuffer.BankAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BankAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranchId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderTaxId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.NationalBankAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.NationalBankAccountPayload.deserializeBinaryFromReader);
      msg.setNationalBankAccountPayload(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.SameBankAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SameBankAccountPayload.deserializeBinaryFromReader);
      msg.setSameBankAccontPayload(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.SpecificBanksAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.SpecificBanksAccountPayload.deserializeBinaryFromReader);
      msg.setSpecificBanksAccountPayload(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.AchTransferAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.AchTransferAccountPayload.deserializeBinaryFromReader);
      msg.setAchTransferAccountPayload(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.deserializeBinaryFromReader);
      msg.setDomesticWireTransferAccountPayload(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNationalAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BankAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BankAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BankAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBranchId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccountType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHolderTaxId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNationalBankAccountPayload();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.NationalBankAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSameBankAccontPayload();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.SameBankAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getSpecificBanksAccountPayload();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.SpecificBanksAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getAchTransferAccountPayload();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.AchTransferAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getDomesticWireTransferAccountPayload();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getNationalAccountId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bank_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bank_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getBankId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setBankId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string branch_id = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getBranchId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setBranchId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string account_nr = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string account_type = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getAccountType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setAccountType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string holder_tax_id = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getHolderTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setHolderTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional NationalBankAccountPayload national_bank_account_payload = 9;
 * @return {?proto.io.haveno.protobuffer.NationalBankAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getNationalBankAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.NationalBankAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NationalBankAccountPayload, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.NationalBankAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
*/
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setNationalBankAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.clearNationalBankAccountPayload = function() {
  return this.setNationalBankAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.hasNationalBankAccountPayload = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional SameBankAccountPayload same_bank_accont_payload = 10;
 * @return {?proto.io.haveno.protobuffer.SameBankAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getSameBankAccontPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SameBankAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SameBankAccountPayload, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.SameBankAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
*/
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setSameBankAccontPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.clearSameBankAccontPayload = function() {
  return this.setSameBankAccontPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.hasSameBankAccontPayload = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SpecificBanksAccountPayload specific_banks_account_payload = 11;
 * @return {?proto.io.haveno.protobuffer.SpecificBanksAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getSpecificBanksAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.SpecificBanksAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SpecificBanksAccountPayload, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.SpecificBanksAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
*/
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setSpecificBanksAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.clearSpecificBanksAccountPayload = function() {
  return this.setSpecificBanksAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.hasSpecificBanksAccountPayload = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional AchTransferAccountPayload ach_transfer_account_payload = 13;
 * @return {?proto.io.haveno.protobuffer.AchTransferAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getAchTransferAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.AchTransferAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AchTransferAccountPayload, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.AchTransferAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
*/
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setAchTransferAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.clearAchTransferAccountPayload = function() {
  return this.setAchTransferAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.hasAchTransferAccountPayload = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional DomesticWireTransferAccountPayload domestic_wire_transfer_account_payload = 14;
 * @return {?proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getDomesticWireTransferAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
*/
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setDomesticWireTransferAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.io.haveno.protobuffer.BankAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.clearDomesticWireTransferAccountPayload = function() {
  return this.setDomesticWireTransferAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.hasDomesticWireTransferAccountPayload = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string national_account_id = 12;
 * @return {string}
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.getNationalAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BankAccountPayload.prototype.setNationalAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AchTransferAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AchTransferAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AchTransferAccountPayload}
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AchTransferAccountPayload;
  return proto.io.haveno.protobuffer.AchTransferAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AchTransferAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AchTransferAccountPayload}
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AchTransferAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AchTransferAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string holder_address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AchTransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.AchTransferAccountPayload.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload}
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload;
  return proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload}
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string holder_address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.prototype.getHolderAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.DomesticWireTransferAccountPayload.prototype.setHolderAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NationalBankAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NationalBankAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NationalBankAccountPayload}
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NationalBankAccountPayload;
  return proto.io.haveno.protobuffer.NationalBankAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NationalBankAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NationalBankAccountPayload}
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NationalBankAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NationalBankAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NationalBankAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SameBankAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SameBankAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SameBankAccountPayload}
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SameBankAccountPayload;
  return proto.io.haveno.protobuffer.SameBankAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SameBankAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SameBankAccountPayload}
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SameBankAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SameBankAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SameBankAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.JapanBankAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.JapanBankAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    bankName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bankCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankBranchName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankBranchCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bankAccountType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bankAccountName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bankAccountNumber: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.JapanBankAccountPayload;
  return proto.io.haveno.protobuffer.JapanBankAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.JapanBankAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankBranchName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankBranchCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.JapanBankAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.JapanBankAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBankCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankBranchName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankBranchCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBankAccountType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBankAccountName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBankAccountNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string bank_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bank_code = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bank_branch_name = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankBranchName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankBranchName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bank_branch_code = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankBranchCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankBranchCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bank_account_type = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankAccountType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankAccountType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string bank_account_name = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bank_account_number = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.getBankAccountNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.JapanBankAccountPayload} returns this
 */
proto.io.haveno.protobuffer.JapanBankAccountPayload.prototype.setBankAccountNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AustraliaPayidPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AustraliaPayidPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    bankAccountName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    payid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AustraliaPayidPayload}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AustraliaPayidPayload;
  return proto.io.haveno.protobuffer.AustraliaPayidPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AustraliaPayidPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AustraliaPayidPayload}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAccountName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AustraliaPayidPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AustraliaPayidPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBankAccountName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPayid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bank_account_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.getBankAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AustraliaPayidPayload} returns this
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.setBankAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payid = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.getPayid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AustraliaPayidPayload} returns this
 */
proto.io.haveno.protobuffer.AustraliaPayidPayload.prototype.setPayid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SpecificBanksAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    acceptedBanksList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload}
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SpecificBanksAccountPayload;
  return proto.io.haveno.protobuffer.SpecificBanksAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload}
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcceptedBanks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SpecificBanksAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAcceptedBanksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string accepted_banks = 1;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.getAcceptedBanksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.setAcceptedBanksList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.addAcceptedBanks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SpecificBanksAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SpecificBanksAccountPayload.prototype.clearAcceptedBanksList = function() {
  return this.setAcceptedBanksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CashDepositAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CashDepositAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    branchId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accountNr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accountType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    requirements: jspb.Message.getFieldWithDefault(msg, 8, ""),
    holderTaxId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    nationalAccountId: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CashDepositAccountPayload;
  return proto.io.haveno.protobuffer.CashDepositAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CashDepositAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranchId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequirements(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderTaxId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNationalAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CashDepositAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CashDepositAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBranchId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccountType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRequirements();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHolderTaxId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getNationalAccountId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_email = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getHolderEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setHolderEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bank_name = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bank_id = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getBankId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setBankId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string branch_id = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getBranchId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setBranchId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string account_nr = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string account_type = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getAccountType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setAccountType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string requirements = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getRequirements = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setRequirements = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string holder_tax_id = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getHolderTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setHolderTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string national_account_id = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.getNationalAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashDepositAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashDepositAccountPayload.prototype.setNationalAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MoneyGramAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MoneyGramAccountPayload;
  return proto.io.haveno.protobuffer.MoneyGramAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MoneyGramAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country_code = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneyGramAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneyGramAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.HalCashAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.HalCashAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.HalCashAccountPayload}
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.HalCashAccountPayload;
  return proto.io.haveno.protobuffer.HalCashAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.HalCashAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.HalCashAccountPayload}
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.HalCashAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.HalCashAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.HalCashAccountPayload} returns this
 */
proto.io.haveno.protobuffer.HalCashAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.WesternUnionAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    city: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.WesternUnionAccountPayload;
  return proto.io.haveno.protobuffer.WesternUnionAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.WesternUnionAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} returns this
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string city = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} returns this
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string state = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} returns this
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.WesternUnionAccountPayload} returns this
 */
proto.io.haveno.protobuffer.WesternUnionAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailOrMobileNr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload;
  return proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailOrMobileNr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailOrMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email_or_mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.getEmailOrMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} returns this
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.setEmailOrMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country_code = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload} returns this
 */
proto.io.haveno.protobuffer.AmazonGiftCardAccountPayload.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SepaAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SepaAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SepaAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iban: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bic: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SepaAccountPayload;
  return proto.io.haveno.protobuffer.SepaAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SepaAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIban(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBic(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SepaAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SepaAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SepaAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIban();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string iban = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.getIban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.setIban = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bic = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.getBic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.setBic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SepaInstantAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iban: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bic: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SepaInstantAccountPayload}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SepaInstantAccountPayload;
  return proto.io.haveno.protobuffer.SepaInstantAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SepaInstantAccountPayload}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIban(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SepaInstantAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIban();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBic();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string iban = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.getIban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.setIban = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bic = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.getBic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SepaInstantAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SepaInstantAccountPayload.prototype.setBic = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload;
  return proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CryptoCurrencyAccountPayload.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload;
  return proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload}
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload} returns this
 */
proto.io.haveno.protobuffer.InstantCryptoCurrencyAccountPayload.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sortCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    accountNr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.FasterPaymentsAccountPayload;
  return proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSortCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} returns this
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sort_code = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.getSortCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} returns this
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.setSortCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string account_nr = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.FasterPaymentsAccountPayload} returns this
 */
proto.io.haveno.protobuffer.FasterPaymentsAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.InteracETransferAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    question: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answer: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.InteracETransferAccountPayload;
  return proto.io.haveno.protobuffer.InteracETransferAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.InteracETransferAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string question = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string answer = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.InteracETransferAccountPayload} returns this
 */
proto.io.haveno.protobuffer.InteracETransferAccountPayload.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.OKPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.OKPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.OKPayAccountPayload}
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.OKPayAccountPayload;
  return proto.io.haveno.protobuffer.OKPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.OKPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.OKPayAccountPayload}
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.OKPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.OKPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OKPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.OKPayAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.UpholdAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.UpholdAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountOwner: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.UpholdAccountPayload}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.UpholdAccountPayload;
  return proto.io.haveno.protobuffer.UpholdAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.UpholdAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.UpholdAccountPayload}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountOwner(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.UpholdAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.UpholdAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountOwner();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.UpholdAccountPayload} returns this
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_owner = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.getAccountOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.UpholdAccountPayload} returns this
 */
proto.io.haveno.protobuffer.UpholdAccountPayload.prototype.setAccountOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CashAppAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CashAppAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    cashTag: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CashAppAccountPayload}
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CashAppAccountPayload;
  return proto.io.haveno.protobuffer.CashAppAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CashAppAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CashAppAccountPayload}
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CashAppAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CashAppAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCashTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cash_tag = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.prototype.getCashTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashAppAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashAppAccountPayload.prototype.setCashTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MoneyBeamAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload}
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MoneyBeamAccountPayload;
  return proto.io.haveno.protobuffer.MoneyBeamAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload}
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MoneyBeamAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneyBeamAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneyBeamAccountPayload.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.VenmoAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.VenmoAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    venmoUserName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.VenmoAccountPayload}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.VenmoAccountPayload;
  return proto.io.haveno.protobuffer.VenmoAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.VenmoAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.VenmoAccountPayload}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenmoUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.VenmoAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.VenmoAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVenmoUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string venmo_user_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.getVenmoUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.VenmoAccountPayload} returns this
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.setVenmoUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.VenmoAccountPayload} returns this
 */
proto.io.haveno.protobuffer.VenmoAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PopmoneyAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PopmoneyAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PopmoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PopmoneyAccountPayload;
  return proto.io.haveno.protobuffer.PopmoneyAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PopmoneyAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PopmoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PopmoneyAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PopmoneyAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PopmoneyAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PopmoneyAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PopmoneyAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RevolutAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RevolutAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RevolutAccountPayload}
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RevolutAccountPayload;
  return proto.io.haveno.protobuffer.RevolutAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RevolutAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RevolutAccountPayload}
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RevolutAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RevolutAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.RevolutAccountPayload} returns this
 */
proto.io.haveno.protobuffer.RevolutAccountPayload.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PerfectMoneyAccountPayload;
  return proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload}
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PerfectMoneyAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PerfectMoneyAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SwishAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SwishAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SwishAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SwishAccountPayload}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SwishAccountPayload;
  return proto.io.haveno.protobuffer.SwishAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SwishAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SwishAccountPayload}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SwishAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SwishAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SwishAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwishAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwishAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwishAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    postalAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload;
  return proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPostalAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string postal_address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.getPostalAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} returns this
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.setPostalAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload} returns this
 */
proto.io.haveno.protobuffer.USPostalMoneyOrderAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.F2FAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.F2FAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.F2FAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    contact: jspb.Message.getFieldWithDefault(msg, 1, ""),
    city: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extraInfo: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.F2FAccountPayload}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.F2FAccountPayload;
  return proto.io.haveno.protobuffer.F2FAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.F2FAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.F2FAccountPayload}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtraInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.F2FAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.F2FAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.F2FAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contact = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.F2FAccountPayload} returns this
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.setContact = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string city = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.F2FAccountPayload} returns this
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string extra_info = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.getExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.F2FAccountPayload} returns this
 */
proto.io.haveno.protobuffer.F2FAccountPayload.prototype.setExtraInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.MessageCase = {
  MESSAGE_NOT_SET: 0,
  NEFT_ACCOUNT_PAYLOAD: 4,
  RTGS_ACCOUNT_PAYLOAD: 5,
  IMPS_ACCOUNT_PAYLOAD: 6
};

/**
 * @return {proto.io.haveno.protobuffer.IfscBasedAccountPayload.MessageCase}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.IfscBasedAccountPayload.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.IfscBasedAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountNr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ifsc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    neftAccountPayload: (f = msg.getNeftAccountPayload()) && proto.io.haveno.protobuffer.NeftAccountPayload.toObject(includeInstance, f),
    rtgsAccountPayload: (f = msg.getRtgsAccountPayload()) && proto.io.haveno.protobuffer.RtgsAccountPayload.toObject(includeInstance, f),
    impsAccountPayload: (f = msg.getImpsAccountPayload()) && proto.io.haveno.protobuffer.ImpsAccountPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.IfscBasedAccountPayload;
  return proto.io.haveno.protobuffer.IfscBasedAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfsc(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.NeftAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.NeftAccountPayload.deserializeBinaryFromReader);
      msg.setNeftAccountPayload(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.RtgsAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.RtgsAccountPayload.deserializeBinaryFromReader);
      msg.setRtgsAccountPayload(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.ImpsAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.ImpsAccountPayload.deserializeBinaryFromReader);
      msg.setImpsAccountPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.IfscBasedAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIfsc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNeftAccountPayload();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.NeftAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getRtgsAccountPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.RtgsAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getImpsAccountPayload();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.ImpsAccountPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_nr = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ifsc = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getIfsc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setIfsc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional NeftAccountPayload neft_account_payload = 4;
 * @return {?proto.io.haveno.protobuffer.NeftAccountPayload}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getNeftAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.NeftAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NeftAccountPayload, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.NeftAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
*/
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setNeftAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.clearNeftAccountPayload = function() {
  return this.setNeftAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.hasNeftAccountPayload = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RtgsAccountPayload rtgs_account_payload = 5;
 * @return {?proto.io.haveno.protobuffer.RtgsAccountPayload}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getRtgsAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.RtgsAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RtgsAccountPayload, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.RtgsAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
*/
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setRtgsAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.clearRtgsAccountPayload = function() {
  return this.setRtgsAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.hasRtgsAccountPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ImpsAccountPayload imps_account_payload = 6;
 * @return {?proto.io.haveno.protobuffer.ImpsAccountPayload}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.getImpsAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.ImpsAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ImpsAccountPayload, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.ImpsAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
*/
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.setImpsAccountPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.IfscBasedAccountPayload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.IfscBasedAccountPayload} returns this
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.clearImpsAccountPayload = function() {
  return this.setImpsAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.IfscBasedAccountPayload.prototype.hasImpsAccountPayload = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NeftAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NeftAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NeftAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NeftAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NeftAccountPayload}
 */
proto.io.haveno.protobuffer.NeftAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NeftAccountPayload;
  return proto.io.haveno.protobuffer.NeftAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NeftAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NeftAccountPayload}
 */
proto.io.haveno.protobuffer.NeftAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NeftAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NeftAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NeftAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NeftAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RtgsAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RtgsAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RtgsAccountPayload}
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RtgsAccountPayload;
  return proto.io.haveno.protobuffer.RtgsAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RtgsAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RtgsAccountPayload}
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RtgsAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RtgsAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RtgsAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ImpsAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ImpsAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ImpsAccountPayload}
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ImpsAccountPayload;
  return proto.io.haveno.protobuffer.ImpsAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ImpsAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ImpsAccountPayload}
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ImpsAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ImpsAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ImpsAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.UpiAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.UpiAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.UpiAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UpiAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    virtualPaymentAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.UpiAccountPayload}
 */
proto.io.haveno.protobuffer.UpiAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.UpiAccountPayload;
  return proto.io.haveno.protobuffer.UpiAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.UpiAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.UpiAccountPayload}
 */
proto.io.haveno.protobuffer.UpiAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVirtualPaymentAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.UpiAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.UpiAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.UpiAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UpiAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVirtualPaymentAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string virtual_payment_address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.UpiAccountPayload.prototype.getVirtualPaymentAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.UpiAccountPayload} returns this
 */
proto.io.haveno.protobuffer.UpiAccountPayload.prototype.setVirtualPaymentAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaytmAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaytmAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailOrMobileNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaytmAccountPayload}
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaytmAccountPayload;
  return proto.io.haveno.protobuffer.PaytmAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaytmAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaytmAccountPayload}
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailOrMobileNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaytmAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaytmAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailOrMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email_or_mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.prototype.getEmailOrMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaytmAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaytmAccountPayload.prototype.setEmailOrMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PayByMailAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PayByMailAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    postalAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    contact: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extraInfo: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PayByMailAccountPayload}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PayByMailAccountPayload;
  return proto.io.haveno.protobuffer.PayByMailAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PayByMailAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PayByMailAccountPayload}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContact(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtraInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PayByMailAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PayByMailAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPostalAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContact();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string postal_address = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.getPostalAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PayByMailAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.setPostalAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string contact = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.getContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PayByMailAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.setContact = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string extra_info = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.getExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PayByMailAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PayByMailAccountPayload.prototype.setExtraInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CashAtAtmAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    extraInfo: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload}
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CashAtAtmAccountPayload;
  return proto.io.haveno.protobuffer.CashAtAtmAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload}
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtraInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CashAtAtmAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtraInfo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string extra_info = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.prototype.getExtraInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CashAtAtmAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CashAtAtmAccountPayload.prototype.setExtraInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PromptPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PromptPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    promptPayId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PromptPayAccountPayload}
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PromptPayAccountPayload;
  return proto.io.haveno.protobuffer.PromptPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PromptPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PromptPayAccountPayload}
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromptPayId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PromptPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PromptPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPromptPayId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string prompt_pay_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.prototype.getPromptPayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PromptPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PromptPayAccountPayload.prototype.setPromptPayId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AdvancedCashAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload}
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AdvancedCashAccountPayload;
  return proto.io.haveno.protobuffer.AdvancedCashAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload}
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AdvancedCashAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AdvancedCashAccountPayload} returns this
 */
proto.io.haveno.protobuffer.AdvancedCashAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TransferwiseAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TransferwiseAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TransferwiseAccountPayload}
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TransferwiseAccountPayload;
  return proto.io.haveno.protobuffer.TransferwiseAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TransferwiseAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TransferwiseAccountPayload}
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TransferwiseAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TransferwiseAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TransferwiseAccountPayload} returns this
 */
proto.io.haveno.protobuffer.TransferwiseAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    beneficiaryAddress: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload;
  return proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBeneficiaryAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} returns this
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} returns this
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string beneficiary_address = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.getBeneficiaryAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload} returns this
 */
proto.io.haveno.protobuffer.TransferwiseUsdAccountPayload.prototype.setBeneficiaryAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PayseraAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PayseraAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PayseraAccountPayload}
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PayseraAccountPayload;
  return proto.io.haveno.protobuffer.PayseraAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PayseraAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PayseraAccountPayload}
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PayseraAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PayseraAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PayseraAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PayseraAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaxumAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaxumAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaxumAccountPayload}
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaxumAccountPayload;
  return proto.io.haveno.protobuffer.PaxumAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaxumAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaxumAccountPayload}
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaxumAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaxumAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaxumAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PaxumAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CapitualAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CapitualAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CapitualAccountPayload}
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CapitualAccountPayload;
  return proto.io.haveno.protobuffer.CapitualAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CapitualAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CapitualAccountPayload}
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CapitualAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CapitualAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.prototype.getAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CapitualAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CapitualAccountPayload.prototype.setAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CelPayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CelPayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CelPayAccountPayload}
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CelPayAccountPayload;
  return proto.io.haveno.protobuffer.CelPayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CelPayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CelPayAccountPayload}
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CelPayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CelPayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.CelPayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.CelPayAccountPayload.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NequiAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NequiAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NequiAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NequiAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NequiAccountPayload}
 */
proto.io.haveno.protobuffer.NequiAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NequiAccountPayload;
  return proto.io.haveno.protobuffer.NequiAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NequiAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NequiAccountPayload}
 */
proto.io.haveno.protobuffer.NequiAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NequiAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NequiAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NequiAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NequiAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.NequiAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.NequiAccountPayload} returns this
 */
proto.io.haveno.protobuffer.NequiAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BizumAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BizumAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BizumAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BizumAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BizumAccountPayload}
 */
proto.io.haveno.protobuffer.BizumAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BizumAccountPayload;
  return proto.io.haveno.protobuffer.BizumAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BizumAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BizumAccountPayload}
 */
proto.io.haveno.protobuffer.BizumAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BizumAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BizumAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BizumAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BizumAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.BizumAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BizumAccountPayload} returns this
 */
proto.io.haveno.protobuffer.BizumAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PixAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PixAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PixAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PixAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    pixKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PixAccountPayload}
 */
proto.io.haveno.protobuffer.PixAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PixAccountPayload;
  return proto.io.haveno.protobuffer.PixAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PixAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PixAccountPayload}
 */
proto.io.haveno.protobuffer.PixAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPixKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PixAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PixAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PixAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PixAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPixKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string pix_key = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PixAccountPayload.prototype.getPixKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PixAccountPayload} returns this
 */
proto.io.haveno.protobuffer.PixAccountPayload.prototype.setPixKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MoneseAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MoneseAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MoneseAccountPayload}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MoneseAccountPayload;
  return proto.io.haveno.protobuffer.MoneseAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MoneseAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MoneseAccountPayload}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MoneseAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MoneseAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneseAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MoneseAccountPayload} returns this
 */
proto.io.haveno.protobuffer.MoneseAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SatispayAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SatispayAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobileNr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    holderName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SatispayAccountPayload}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SatispayAccountPayload;
  return proto.io.haveno.protobuffer.SatispayAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SatispayAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SatispayAccountPayload}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileNr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SatispayAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SatispayAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobileNr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string mobile_nr = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.getMobileNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SatispayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.setMobileNr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string holder_name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SatispayAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SatispayAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.StrikeAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.StrikeAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.StrikeAccountPayload}
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.StrikeAccountPayload;
  return proto.io.haveno.protobuffer.StrikeAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.StrikeAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.StrikeAccountPayload}
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.StrikeAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.StrikeAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.StrikeAccountPayload} returns this
 */
proto.io.haveno.protobuffer.StrikeAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TikkieAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TikkieAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    iban: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TikkieAccountPayload}
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TikkieAccountPayload;
  return proto.io.haveno.protobuffer.TikkieAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TikkieAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TikkieAccountPayload}
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIban(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TikkieAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TikkieAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIban();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string iban = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.prototype.getIban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TikkieAccountPayload} returns this
 */
proto.io.haveno.protobuffer.TikkieAccountPayload.prototype.setIban = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.VerseAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.VerseAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.VerseAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.VerseAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    holderName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.VerseAccountPayload}
 */
proto.io.haveno.protobuffer.VerseAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.VerseAccountPayload;
  return proto.io.haveno.protobuffer.VerseAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.VerseAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.VerseAccountPayload}
 */
proto.io.haveno.protobuffer.VerseAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.VerseAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.VerseAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.VerseAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.VerseAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string holder_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.VerseAccountPayload.prototype.getHolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.VerseAccountPayload} returns this
 */
proto.io.haveno.protobuffer.VerseAccountPayload.prototype.setHolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SwiftAccountPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SwiftAccountPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    beneficiaryName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beneficiaryAccountNr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    beneficiaryAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    beneficiaryCity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    beneficiaryPhone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    specialInstructions: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bankSwiftCode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bankCountryCode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bankBranch: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bankAddress: jspb.Message.getFieldWithDefault(msg, 11, ""),
    intermediarySwiftCode: jspb.Message.getFieldWithDefault(msg, 12, ""),
    intermediaryCountryCode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    intermediaryName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    intermediaryBranch: jspb.Message.getFieldWithDefault(msg, 15, ""),
    intermediaryAddress: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SwiftAccountPayload;
  return proto.io.haveno.protobuffer.SwiftAccountPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SwiftAccountPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryAccountNr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeneficiaryPhone(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecialInstructions(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankSwiftCode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankCountryCode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankBranch(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankAddress(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntermediarySwiftCode(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntermediaryCountryCode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntermediaryName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntermediaryBranch(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntermediaryAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SwiftAccountPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SwiftAccountPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBeneficiaryName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeneficiaryAccountNr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBeneficiaryAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBeneficiaryCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBeneficiaryPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSpecialInstructions();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBankSwiftCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBankCountryCode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBankBranch();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBankAddress();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIntermediarySwiftCode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIntermediaryCountryCode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getIntermediaryName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIntermediaryBranch();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getIntermediaryAddress();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string beneficiary_name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBeneficiaryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBeneficiaryName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string beneficiary_account_nr = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBeneficiaryAccountNr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBeneficiaryAccountNr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string beneficiary_address = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBeneficiaryAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBeneficiaryAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string beneficiary_city = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBeneficiaryCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBeneficiaryCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string beneficiary_phone = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBeneficiaryPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBeneficiaryPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string special_instructions = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getSpecialInstructions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setSpecialInstructions = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string bank_swift_code = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBankSwiftCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBankSwiftCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string bank_country_code = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBankCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBankCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string bank_name = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string bank_branch = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBankBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBankBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string bank_address = 11;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getBankAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setBankAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string intermediary_swift_code = 12;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getIntermediarySwiftCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setIntermediarySwiftCode = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string intermediary_country_code = 13;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getIntermediaryCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setIntermediaryCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string intermediary_name = 14;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getIntermediaryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setIntermediaryName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string intermediary_branch = 15;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getIntermediaryBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setIntermediaryBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string intermediary_address = 16;
 * @return {string}
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.getIntermediaryAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SwiftAccountPayload} returns this
 */
proto.io.haveno.protobuffer.SwiftAccountPayload.prototype.setIntermediaryAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,1001,1002,1003]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.MessageCase = {
  MESSAGE_NOT_SET: 0,
  SEQUENCE_NUMBER_MAP: 1,
  PEER_LIST: 2,
  ADDRESS_ENTRY_LIST: 3,
  NAVIGATION_PATH: 4,
  TRADABLE_LIST: 5,
  ARBITRATION_DISPUTE_LIST: 6,
  PREFERENCES_PAYLOAD: 7,
  USER_PAYLOAD: 8,
  PAYMENT_ACCOUNT_LIST: 9,
  ACCOUNT_AGE_WITNESS_STORE: 10,
  SIGNED_WITNESS_STORE: 11,
  MEDIATION_DISPUTE_LIST: 12,
  REFUND_DISPUTE_LIST: 13,
  TRADE_STATISTICS3_STORE: 14,
  MAILBOX_MESSAGE_LIST: 15,
  IGNORED_MAILBOX_MAP: 16,
  REMOVED_PAYLOADS_MAP: 17,
  XMR_ADDRESS_ENTRY_LIST: 1001,
  SIGNED_OFFER_LIST: 1002,
  ENCRYPTED_CONNECTION_LIST: 1003
};

/**
 * @return {proto.io.haveno.protobuffer.PersistableEnvelope.MessageCase}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.PersistableEnvelope.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PersistableEnvelope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PersistableEnvelope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PersistableEnvelope.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumberMap: (f = msg.getSequenceNumberMap()) && proto.io.haveno.protobuffer.SequenceNumberMap.toObject(includeInstance, f),
    peerList: (f = msg.getPeerList()) && proto.io.haveno.protobuffer.PeerList.toObject(includeInstance, f),
    addressEntryList: (f = msg.getAddressEntryList()) && proto.io.haveno.protobuffer.AddressEntryList.toObject(includeInstance, f),
    navigationPath: (f = msg.getNavigationPath()) && proto.io.haveno.protobuffer.NavigationPath.toObject(includeInstance, f),
    tradableList: (f = msg.getTradableList()) && proto.io.haveno.protobuffer.TradableList.toObject(includeInstance, f),
    arbitrationDisputeList: (f = msg.getArbitrationDisputeList()) && proto.io.haveno.protobuffer.ArbitrationDisputeList.toObject(includeInstance, f),
    preferencesPayload: (f = msg.getPreferencesPayload()) && proto.io.haveno.protobuffer.PreferencesPayload.toObject(includeInstance, f),
    userPayload: (f = msg.getUserPayload()) && proto.io.haveno.protobuffer.UserPayload.toObject(includeInstance, f),
    paymentAccountList: (f = msg.getPaymentAccountList()) && proto.io.haveno.protobuffer.PaymentAccountList.toObject(includeInstance, f),
    accountAgeWitnessStore: (f = msg.getAccountAgeWitnessStore()) && proto.io.haveno.protobuffer.AccountAgeWitnessStore.toObject(includeInstance, f),
    signedWitnessStore: (f = msg.getSignedWitnessStore()) && proto.io.haveno.protobuffer.SignedWitnessStore.toObject(includeInstance, f),
    mediationDisputeList: (f = msg.getMediationDisputeList()) && proto.io.haveno.protobuffer.MediationDisputeList.toObject(includeInstance, f),
    refundDisputeList: (f = msg.getRefundDisputeList()) && proto.io.haveno.protobuffer.RefundDisputeList.toObject(includeInstance, f),
    tradeStatistics3Store: (f = msg.getTradeStatistics3Store()) && proto.io.haveno.protobuffer.TradeStatistics3Store.toObject(includeInstance, f),
    mailboxMessageList: (f = msg.getMailboxMessageList()) && proto.io.haveno.protobuffer.MailboxMessageList.toObject(includeInstance, f),
    ignoredMailboxMap: (f = msg.getIgnoredMailboxMap()) && proto.io.haveno.protobuffer.IgnoredMailboxMap.toObject(includeInstance, f),
    removedPayloadsMap: (f = msg.getRemovedPayloadsMap()) && proto.io.haveno.protobuffer.RemovedPayloadsMap.toObject(includeInstance, f),
    xmrAddressEntryList: (f = msg.getXmrAddressEntryList()) && proto.io.haveno.protobuffer.XmrAddressEntryList.toObject(includeInstance, f),
    signedOfferList: (f = msg.getSignedOfferList()) && proto.io.haveno.protobuffer.SignedOfferList.toObject(includeInstance, f),
    encryptedConnectionList: (f = msg.getEncryptedConnectionList()) && proto.io.haveno.protobuffer.EncryptedConnectionList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PersistableEnvelope;
  return proto.io.haveno.protobuffer.PersistableEnvelope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PersistableEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.SequenceNumberMap;
      reader.readMessage(value,proto.io.haveno.protobuffer.SequenceNumberMap.deserializeBinaryFromReader);
      msg.setSequenceNumberMap(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PeerList;
      reader.readMessage(value,proto.io.haveno.protobuffer.PeerList.deserializeBinaryFromReader);
      msg.setPeerList(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.AddressEntryList;
      reader.readMessage(value,proto.io.haveno.protobuffer.AddressEntryList.deserializeBinaryFromReader);
      msg.setAddressEntryList(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.NavigationPath;
      reader.readMessage(value,proto.io.haveno.protobuffer.NavigationPath.deserializeBinaryFromReader);
      msg.setNavigationPath(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.TradableList;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradableList.deserializeBinaryFromReader);
      msg.setTradableList(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.ArbitrationDisputeList;
      reader.readMessage(value,proto.io.haveno.protobuffer.ArbitrationDisputeList.deserializeBinaryFromReader);
      msg.setArbitrationDisputeList(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.PreferencesPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PreferencesPayload.deserializeBinaryFromReader);
      msg.setPreferencesPayload(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.UserPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.UserPayload.deserializeBinaryFromReader);
      msg.setUserPayload(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.PaymentAccountList;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountList.deserializeBinaryFromReader);
      msg.setPaymentAccountList(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitnessStore;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitnessStore.deserializeBinaryFromReader);
      msg.setAccountAgeWitnessStore(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.SignedWitnessStore;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedWitnessStore.deserializeBinaryFromReader);
      msg.setSignedWitnessStore(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.MediationDisputeList;
      reader.readMessage(value,proto.io.haveno.protobuffer.MediationDisputeList.deserializeBinaryFromReader);
      msg.setMediationDisputeList(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.RefundDisputeList;
      reader.readMessage(value,proto.io.haveno.protobuffer.RefundDisputeList.deserializeBinaryFromReader);
      msg.setRefundDisputeList(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.TradeStatistics3Store;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeStatistics3Store.deserializeBinaryFromReader);
      msg.setTradeStatistics3Store(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.MailboxMessageList;
      reader.readMessage(value,proto.io.haveno.protobuffer.MailboxMessageList.deserializeBinaryFromReader);
      msg.setMailboxMessageList(value);
      break;
    case 16:
      var value = new proto.io.haveno.protobuffer.IgnoredMailboxMap;
      reader.readMessage(value,proto.io.haveno.protobuffer.IgnoredMailboxMap.deserializeBinaryFromReader);
      msg.setIgnoredMailboxMap(value);
      break;
    case 17:
      var value = new proto.io.haveno.protobuffer.RemovedPayloadsMap;
      reader.readMessage(value,proto.io.haveno.protobuffer.RemovedPayloadsMap.deserializeBinaryFromReader);
      msg.setRemovedPayloadsMap(value);
      break;
    case 1001:
      var value = new proto.io.haveno.protobuffer.XmrAddressEntryList;
      reader.readMessage(value,proto.io.haveno.protobuffer.XmrAddressEntryList.deserializeBinaryFromReader);
      msg.setXmrAddressEntryList(value);
      break;
    case 1002:
      var value = new proto.io.haveno.protobuffer.SignedOfferList;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedOfferList.deserializeBinaryFromReader);
      msg.setSignedOfferList(value);
      break;
    case 1003:
      var value = new proto.io.haveno.protobuffer.EncryptedConnectionList;
      reader.readMessage(value,proto.io.haveno.protobuffer.EncryptedConnectionList.deserializeBinaryFromReader);
      msg.setEncryptedConnectionList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PersistableEnvelope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PersistableEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PersistableEnvelope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumberMap();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.SequenceNumberMap.serializeBinaryToWriter
    );
  }
  f = message.getPeerList();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PeerList.serializeBinaryToWriter
    );
  }
  f = message.getAddressEntryList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.AddressEntryList.serializeBinaryToWriter
    );
  }
  f = message.getNavigationPath();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.NavigationPath.serializeBinaryToWriter
    );
  }
  f = message.getTradableList();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.TradableList.serializeBinaryToWriter
    );
  }
  f = message.getArbitrationDisputeList();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.ArbitrationDisputeList.serializeBinaryToWriter
    );
  }
  f = message.getPreferencesPayload();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.PreferencesPayload.serializeBinaryToWriter
    );
  }
  f = message.getUserPayload();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.io.haveno.protobuffer.UserPayload.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAccountList();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.PaymentAccountList.serializeBinaryToWriter
    );
  }
  f = message.getAccountAgeWitnessStore();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitnessStore.serializeBinaryToWriter
    );
  }
  f = message.getSignedWitnessStore();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.SignedWitnessStore.serializeBinaryToWriter
    );
  }
  f = message.getMediationDisputeList();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.MediationDisputeList.serializeBinaryToWriter
    );
  }
  f = message.getRefundDisputeList();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.RefundDisputeList.serializeBinaryToWriter
    );
  }
  f = message.getTradeStatistics3Store();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.io.haveno.protobuffer.TradeStatistics3Store.serializeBinaryToWriter
    );
  }
  f = message.getMailboxMessageList();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.MailboxMessageList.serializeBinaryToWriter
    );
  }
  f = message.getIgnoredMailboxMap();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.io.haveno.protobuffer.IgnoredMailboxMap.serializeBinaryToWriter
    );
  }
  f = message.getRemovedPayloadsMap();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.io.haveno.protobuffer.RemovedPayloadsMap.serializeBinaryToWriter
    );
  }
  f = message.getXmrAddressEntryList();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.io.haveno.protobuffer.XmrAddressEntryList.serializeBinaryToWriter
    );
  }
  f = message.getSignedOfferList();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.io.haveno.protobuffer.SignedOfferList.serializeBinaryToWriter
    );
  }
  f = message.getEncryptedConnectionList();
  if (f != null) {
    writer.writeMessage(
      1003,
      f,
      proto.io.haveno.protobuffer.EncryptedConnectionList.serializeBinaryToWriter
    );
  }
};


/**
 * optional SequenceNumberMap sequence_number_map = 1;
 * @return {?proto.io.haveno.protobuffer.SequenceNumberMap}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getSequenceNumberMap = function() {
  return /** @type{?proto.io.haveno.protobuffer.SequenceNumberMap} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SequenceNumberMap, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.SequenceNumberMap|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setSequenceNumberMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearSequenceNumberMap = function() {
  return this.setSequenceNumberMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasSequenceNumberMap = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PeerList peer_list = 2;
 * @return {?proto.io.haveno.protobuffer.PeerList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getPeerList = function() {
  return /** @type{?proto.io.haveno.protobuffer.PeerList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PeerList, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.PeerList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setPeerList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearPeerList = function() {
  return this.setPeerList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasPeerList = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AddressEntryList address_entry_list = 3;
 * @return {?proto.io.haveno.protobuffer.AddressEntryList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getAddressEntryList = function() {
  return /** @type{?proto.io.haveno.protobuffer.AddressEntryList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AddressEntryList, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.AddressEntryList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setAddressEntryList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearAddressEntryList = function() {
  return this.setAddressEntryList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasAddressEntryList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NavigationPath navigation_path = 4;
 * @return {?proto.io.haveno.protobuffer.NavigationPath}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getNavigationPath = function() {
  return /** @type{?proto.io.haveno.protobuffer.NavigationPath} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NavigationPath, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.NavigationPath|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setNavigationPath = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearNavigationPath = function() {
  return this.setNavigationPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasNavigationPath = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TradableList tradable_list = 5;
 * @return {?proto.io.haveno.protobuffer.TradableList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getTradableList = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradableList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradableList, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradableList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setTradableList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearTradableList = function() {
  return this.setTradableList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasTradableList = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ArbitrationDisputeList arbitration_dispute_list = 6;
 * @return {?proto.io.haveno.protobuffer.ArbitrationDisputeList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getArbitrationDisputeList = function() {
  return /** @type{?proto.io.haveno.protobuffer.ArbitrationDisputeList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ArbitrationDisputeList, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.ArbitrationDisputeList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setArbitrationDisputeList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearArbitrationDisputeList = function() {
  return this.setArbitrationDisputeList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasArbitrationDisputeList = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PreferencesPayload preferences_payload = 7;
 * @return {?proto.io.haveno.protobuffer.PreferencesPayload}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getPreferencesPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PreferencesPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PreferencesPayload, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.PreferencesPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setPreferencesPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearPreferencesPayload = function() {
  return this.setPreferencesPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasPreferencesPayload = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional UserPayload user_payload = 8;
 * @return {?proto.io.haveno.protobuffer.UserPayload}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getUserPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.UserPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.UserPayload, 8));
};


/**
 * @param {?proto.io.haveno.protobuffer.UserPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setUserPayload = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearUserPayload = function() {
  return this.setUserPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasUserPayload = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PaymentAccountList payment_account_list = 9;
 * @return {?proto.io.haveno.protobuffer.PaymentAccountList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getPaymentAccountList = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccountList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountList, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccountList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setPaymentAccountList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearPaymentAccountList = function() {
  return this.setPaymentAccountList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasPaymentAccountList = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional AccountAgeWitnessStore account_age_witness_store = 10;
 * @return {?proto.io.haveno.protobuffer.AccountAgeWitnessStore}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getAccountAgeWitnessStore = function() {
  return /** @type{?proto.io.haveno.protobuffer.AccountAgeWitnessStore} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitnessStore, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.AccountAgeWitnessStore|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setAccountAgeWitnessStore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearAccountAgeWitnessStore = function() {
  return this.setAccountAgeWitnessStore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasAccountAgeWitnessStore = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional SignedWitnessStore signed_witness_store = 11;
 * @return {?proto.io.haveno.protobuffer.SignedWitnessStore}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getSignedWitnessStore = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignedWitnessStore} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignedWitnessStore, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignedWitnessStore|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setSignedWitnessStore = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearSignedWitnessStore = function() {
  return this.setSignedWitnessStore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasSignedWitnessStore = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional MediationDisputeList mediation_dispute_list = 12;
 * @return {?proto.io.haveno.protobuffer.MediationDisputeList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getMediationDisputeList = function() {
  return /** @type{?proto.io.haveno.protobuffer.MediationDisputeList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MediationDisputeList, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.MediationDisputeList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setMediationDisputeList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearMediationDisputeList = function() {
  return this.setMediationDisputeList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasMediationDisputeList = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional RefundDisputeList refund_dispute_list = 13;
 * @return {?proto.io.haveno.protobuffer.RefundDisputeList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getRefundDisputeList = function() {
  return /** @type{?proto.io.haveno.protobuffer.RefundDisputeList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RefundDisputeList, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.RefundDisputeList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setRefundDisputeList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearRefundDisputeList = function() {
  return this.setRefundDisputeList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasRefundDisputeList = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional TradeStatistics3Store trade_statistics3_store = 14;
 * @return {?proto.io.haveno.protobuffer.TradeStatistics3Store}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getTradeStatistics3Store = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradeStatistics3Store} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradeStatistics3Store, 14));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradeStatistics3Store|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setTradeStatistics3Store = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearTradeStatistics3Store = function() {
  return this.setTradeStatistics3Store(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasTradeStatistics3Store = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional MailboxMessageList mailbox_message_list = 15;
 * @return {?proto.io.haveno.protobuffer.MailboxMessageList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getMailboxMessageList = function() {
  return /** @type{?proto.io.haveno.protobuffer.MailboxMessageList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MailboxMessageList, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.MailboxMessageList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setMailboxMessageList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearMailboxMessageList = function() {
  return this.setMailboxMessageList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasMailboxMessageList = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional IgnoredMailboxMap ignored_mailbox_map = 16;
 * @return {?proto.io.haveno.protobuffer.IgnoredMailboxMap}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getIgnoredMailboxMap = function() {
  return /** @type{?proto.io.haveno.protobuffer.IgnoredMailboxMap} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.IgnoredMailboxMap, 16));
};


/**
 * @param {?proto.io.haveno.protobuffer.IgnoredMailboxMap|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setIgnoredMailboxMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearIgnoredMailboxMap = function() {
  return this.setIgnoredMailboxMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasIgnoredMailboxMap = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RemovedPayloadsMap removed_payloads_map = 17;
 * @return {?proto.io.haveno.protobuffer.RemovedPayloadsMap}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getRemovedPayloadsMap = function() {
  return /** @type{?proto.io.haveno.protobuffer.RemovedPayloadsMap} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RemovedPayloadsMap, 17));
};


/**
 * @param {?proto.io.haveno.protobuffer.RemovedPayloadsMap|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setRemovedPayloadsMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearRemovedPayloadsMap = function() {
  return this.setRemovedPayloadsMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasRemovedPayloadsMap = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional XmrAddressEntryList xmr_address_entry_list = 1001;
 * @return {?proto.io.haveno.protobuffer.XmrAddressEntryList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getXmrAddressEntryList = function() {
  return /** @type{?proto.io.haveno.protobuffer.XmrAddressEntryList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.XmrAddressEntryList, 1001));
};


/**
 * @param {?proto.io.haveno.protobuffer.XmrAddressEntryList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setXmrAddressEntryList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1001, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearXmrAddressEntryList = function() {
  return this.setXmrAddressEntryList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasXmrAddressEntryList = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * optional SignedOfferList signed_offer_list = 1002;
 * @return {?proto.io.haveno.protobuffer.SignedOfferList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getSignedOfferList = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignedOfferList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignedOfferList, 1002));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignedOfferList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setSignedOfferList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1002, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearSignedOfferList = function() {
  return this.setSignedOfferList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasSignedOfferList = function() {
  return jspb.Message.getField(this, 1002) != null;
};


/**
 * optional EncryptedConnectionList encrypted_connection_list = 1003;
 * @return {?proto.io.haveno.protobuffer.EncryptedConnectionList}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.getEncryptedConnectionList = function() {
  return /** @type{?proto.io.haveno.protobuffer.EncryptedConnectionList} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.EncryptedConnectionList, 1003));
};


/**
 * @param {?proto.io.haveno.protobuffer.EncryptedConnectionList|undefined} value
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
*/
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.setEncryptedConnectionList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1003, proto.io.haveno.protobuffer.PersistableEnvelope.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PersistableEnvelope} returns this
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.clearEncryptedConnectionList = function() {
  return this.setEncryptedConnectionList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PersistableEnvelope.prototype.hasEncryptedConnectionList = function() {
  return jspb.Message.getField(this, 1003) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SequenceNumberMap.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SequenceNumberMap.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SequenceNumberMap} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SequenceNumberMap.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNumberEntriesList: jspb.Message.toObjectList(msg.getSequenceNumberEntriesList(),
    proto.io.haveno.protobuffer.SequenceNumberEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberMap}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SequenceNumberMap;
  return proto.io.haveno.protobuffer.SequenceNumberMap.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SequenceNumberMap} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberMap}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.SequenceNumberEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.SequenceNumberEntry.deserializeBinaryFromReader);
      msg.addSequenceNumberEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SequenceNumberMap.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SequenceNumberMap} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SequenceNumberMap.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNumberEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.SequenceNumberEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SequenceNumberEntry sequence_number_entries = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.SequenceNumberEntry>}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.getSequenceNumberEntriesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.SequenceNumberEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.SequenceNumberEntry, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.SequenceNumberEntry>} value
 * @return {!proto.io.haveno.protobuffer.SequenceNumberMap} returns this
*/
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.setSequenceNumberEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.SequenceNumberEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry}
 */
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.addSequenceNumberEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.SequenceNumberEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberMap} returns this
 */
proto.io.haveno.protobuffer.SequenceNumberMap.prototype.clearSequenceNumberEntriesList = function() {
  return this.setSequenceNumberEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SequenceNumberEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SequenceNumberEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    bytes: (f = msg.getBytes()) && proto.io.haveno.protobuffer.ByteArray.toObject(includeInstance, f),
    mapValue: (f = msg.getMapValue()) && proto.io.haveno.protobuffer.MapValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SequenceNumberEntry;
  return proto.io.haveno.protobuffer.SequenceNumberEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SequenceNumberEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.ByteArray;
      reader.readMessage(value,proto.io.haveno.protobuffer.ByteArray.deserializeBinaryFromReader);
      msg.setBytes(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.MapValue;
      reader.readMessage(value,proto.io.haveno.protobuffer.MapValue.deserializeBinaryFromReader);
      msg.setMapValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SequenceNumberEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SequenceNumberEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.ByteArray.serializeBinaryToWriter
    );
  }
  f = message.getMapValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.MapValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional ByteArray bytes = 1;
 * @return {?proto.io.haveno.protobuffer.ByteArray}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.getBytes = function() {
  return /** @type{?proto.io.haveno.protobuffer.ByteArray} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ByteArray, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.ByteArray|undefined} value
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry} returns this
*/
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.setBytes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry} returns this
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.clearBytes = function() {
  return this.setBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.hasBytes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MapValue map_value = 2;
 * @return {?proto.io.haveno.protobuffer.MapValue}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.getMapValue = function() {
  return /** @type{?proto.io.haveno.protobuffer.MapValue} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.MapValue, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.MapValue|undefined} value
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry} returns this
*/
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.setMapValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SequenceNumberEntry} returns this
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.clearMapValue = function() {
  return this.setMapValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SequenceNumberEntry.prototype.hasMapValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ByteArray.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ByteArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ByteArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ByteArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ByteArray}
 */
proto.io.haveno.protobuffer.ByteArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ByteArray;
  return proto.io.haveno.protobuffer.ByteArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ByteArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ByteArray}
 */
proto.io.haveno.protobuffer.ByteArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ByteArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ByteArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ByteArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ByteArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes bytes = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ByteArray.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes bytes = 1;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ByteArray.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ByteArray.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ByteArray} returns this
 */
proto.io.haveno.protobuffer.ByteArray.prototype.setBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MapValue.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MapValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MapValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MapValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequenceNr: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeStamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MapValue}
 */
proto.io.haveno.protobuffer.MapValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MapValue;
  return proto.io.haveno.protobuffer.MapValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MapValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MapValue}
 */
proto.io.haveno.protobuffer.MapValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequenceNr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeStamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MapValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MapValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MapValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MapValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequenceNr();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimeStamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 sequence_nr = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.MapValue.prototype.getSequenceNr = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.MapValue} returns this
 */
proto.io.haveno.protobuffer.MapValue.prototype.setSequenceNr = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 time_stamp = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.MapValue.prototype.getTimeStamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.MapValue} returns this
 */
proto.io.haveno.protobuffer.MapValue.prototype.setTimeStamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AccountAgeWitnessStore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitnessStore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.io.haveno.protobuffer.AccountAgeWitness.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitnessStore}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AccountAgeWitnessStore;
  return proto.io.haveno.protobuffer.AccountAgeWitnessStore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitnessStore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitnessStore}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AccountAgeWitnessStore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitnessStore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccountAgeWitness items = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.AccountAgeWitness>}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.AccountAgeWitness>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitness, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.AccountAgeWitness>} value
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitnessStore} returns this
*/
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.AccountAgeWitness=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.AccountAgeWitness, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.AccountAgeWitnessStore} returns this
 */
proto.io.haveno.protobuffer.AccountAgeWitnessStore.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SignedWitnessStore.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignedWitnessStore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignedWitnessStore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedWitnessStore.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.io.haveno.protobuffer.SignedWitness.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignedWitnessStore}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignedWitnessStore;
  return proto.io.haveno.protobuffer.SignedWitnessStore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignedWitnessStore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignedWitnessStore}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.SignedWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedWitness.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignedWitnessStore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignedWitnessStore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedWitnessStore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.SignedWitness.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SignedWitness items = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.SignedWitness>}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.SignedWitness>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.SignedWitness, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.SignedWitness>} value
 * @return {!proto.io.haveno.protobuffer.SignedWitnessStore} returns this
*/
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.SignedWitness=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SignedWitness}
 */
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.SignedWitness, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SignedWitnessStore} returns this
 */
proto.io.haveno.protobuffer.SignedWitnessStore.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TradeStatistics3Store.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3Store} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.io.haveno.protobuffer.TradeStatistics3.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3Store}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TradeStatistics3Store;
  return proto.io.haveno.protobuffer.TradeStatistics3Store.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3Store} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3Store}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.TradeStatistics3;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeStatistics3.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TradeStatistics3Store.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3Store} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.TradeStatistics3.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TradeStatistics3 items = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.TradeStatistics3>}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.TradeStatistics3>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.TradeStatistics3, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.TradeStatistics3>} value
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3Store} returns this
*/
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.TradeStatistics3=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3}
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.TradeStatistics3, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.TradeStatistics3Store} returns this
 */
proto.io.haveno.protobuffer.TradeStatistics3Store.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PeerList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PeerList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PeerList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PeerList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PeerList.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerList: jspb.Message.toObjectList(msg.getPeerList(),
    proto.io.haveno.protobuffer.Peer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PeerList}
 */
proto.io.haveno.protobuffer.PeerList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PeerList;
  return proto.io.haveno.protobuffer.PeerList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PeerList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PeerList}
 */
proto.io.haveno.protobuffer.PeerList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Peer;
      reader.readMessage(value,proto.io.haveno.protobuffer.Peer.deserializeBinaryFromReader);
      msg.addPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PeerList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PeerList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PeerList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PeerList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Peer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Peer peer = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.Peer>}
 */
proto.io.haveno.protobuffer.PeerList.prototype.getPeerList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Peer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Peer, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Peer>} value
 * @return {!proto.io.haveno.protobuffer.PeerList} returns this
*/
proto.io.haveno.protobuffer.PeerList.prototype.setPeerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Peer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Peer}
 */
proto.io.haveno.protobuffer.PeerList.prototype.addPeer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.Peer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PeerList} returns this
 */
proto.io.haveno.protobuffer.PeerList.prototype.clearPeerList = function() {
  return this.setPeerList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.AddressEntryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AddressEntryList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AddressEntryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AddressEntryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddressEntryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressEntryList: jspb.Message.toObjectList(msg.getAddressEntryList(),
    proto.io.haveno.protobuffer.AddressEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AddressEntryList}
 */
proto.io.haveno.protobuffer.AddressEntryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AddressEntryList;
  return proto.io.haveno.protobuffer.AddressEntryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AddressEntryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AddressEntryList}
 */
proto.io.haveno.protobuffer.AddressEntryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.AddressEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.AddressEntry.deserializeBinaryFromReader);
      msg.addAddressEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddressEntryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AddressEntryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AddressEntryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddressEntryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.AddressEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AddressEntry address_entry = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.AddressEntry>}
 */
proto.io.haveno.protobuffer.AddressEntryList.prototype.getAddressEntryList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.AddressEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.AddressEntry, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.AddressEntry>} value
 * @return {!proto.io.haveno.protobuffer.AddressEntryList} returns this
*/
proto.io.haveno.protobuffer.AddressEntryList.prototype.setAddressEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.AddressEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.AddressEntry}
 */
proto.io.haveno.protobuffer.AddressEntryList.prototype.addAddressEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.AddressEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.AddressEntryList} returns this
 */
proto.io.haveno.protobuffer.AddressEntryList.prototype.clearAddressEntryList = function() {
  return this.setAddressEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AddressEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AddressEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddressEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    context: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pubKey: msg.getPubKey_asB64(),
    pubKeyHash: msg.getPubKeyHash_asB64(),
    coinLockedInMultiSig: jspb.Message.getFieldWithDefault(msg, 11, 0),
    segwit: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AddressEntry}
 */
proto.io.haveno.protobuffer.AddressEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AddressEntry;
  return proto.io.haveno.protobuffer.AddressEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AddressEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AddressEntry}
 */
proto.io.haveno.protobuffer.AddressEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 8:
      var value = /** @type {!proto.io.haveno.protobuffer.AddressEntry.Context} */ (reader.readEnum());
      msg.setContext(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKey(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKeyHash(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCoinLockedInMultiSig(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSegwit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AddressEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AddressEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AddressEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getContext();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getPubKeyHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getCoinLockedInMultiSig();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getSegwit();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.AddressEntry.Context = {
  PB_ERROR: 0,
  ARBITRATOR: 1,
  AVAILABLE: 2,
  OFFER_FUNDING: 3,
  RESERVED_FOR_TRADE: 4,
  MULTI_SIG: 5,
  TRADE_PAYOUT: 6
};

/**
 * optional string offer_id = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Context context = 8;
 * @return {!proto.io.haveno.protobuffer.AddressEntry.Context}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getContext = function() {
  return /** @type {!proto.io.haveno.protobuffer.AddressEntry.Context} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.AddressEntry.Context} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setContext = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bytes pub_key = 9;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes pub_key = 9;
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKey()));
};


/**
 * optional bytes pub_key = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setPubKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional bytes pub_key_hash = 10;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKeyHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes pub_key_hash = 10;
 * This is a type-conversion wrapper around `getPubKeyHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKeyHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKeyHash()));
};


/**
 * optional bytes pub_key_hash = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKeyHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getPubKeyHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKeyHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setPubKeyHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};


/**
 * optional int64 coin_locked_in_multi_sig = 11;
 * @return {number}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getCoinLockedInMultiSig = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setCoinLockedInMultiSig = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool segwit = 12;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.getSegwit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.AddressEntry} returns this
 */
proto.io.haveno.protobuffer.AddressEntry.prototype.setSegwit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.XmrAddressEntryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    xmrAddressEntryList: jspb.Message.toObjectList(msg.getXmrAddressEntryList(),
    proto.io.haveno.protobuffer.XmrAddressEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntryList}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.XmrAddressEntryList;
  return proto.io.haveno.protobuffer.XmrAddressEntryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntryList}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.XmrAddressEntry;
      reader.readMessage(value,proto.io.haveno.protobuffer.XmrAddressEntry.deserializeBinaryFromReader);
      msg.addXmrAddressEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.XmrAddressEntryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXmrAddressEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.XmrAddressEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated XmrAddressEntry xmr_address_entry = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.XmrAddressEntry>}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.getXmrAddressEntryList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.XmrAddressEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.XmrAddressEntry, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.XmrAddressEntry>} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntryList} returns this
*/
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.setXmrAddressEntryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry}
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.addXmrAddressEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.XmrAddressEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntryList} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntryList.prototype.clearXmrAddressEntryList = function() {
  return this.setXmrAddressEntryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.XmrAddressEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrAddressEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    subaddressIndex: jspb.Message.getFieldWithDefault(msg, 7, 0),
    addressString: jspb.Message.getFieldWithDefault(msg, 8, ""),
    offerId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    context: jspb.Message.getFieldWithDefault(msg, 10, 0),
    coinLockedInMultiSig: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.XmrAddressEntry;
  return proto.io.haveno.protobuffer.XmrAddressEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubaddressIndex(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressString(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 10:
      var value = /** @type {!proto.io.haveno.protobuffer.XmrAddressEntry.Context} */ (reader.readEnum());
      msg.setContext(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCoinLockedInMultiSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.XmrAddressEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrAddressEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubaddressIndex();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAddressString();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getContext();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getCoinLockedInMultiSig();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.Context = {
  PB_ERROR: 0,
  ARBITRATOR: 1,
  BASE_ADDRESS: 2,
  AVAILABLE: 3,
  OFFER_FUNDING: 4,
  TRADE_PAYOUT: 5
};

/**
 * optional int32 subaddress_index = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.getSubaddressIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.setSubaddressIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string address_string = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.getAddressString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.setAddressString = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string offer_id = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Context context = 10;
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry.Context}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.getContext = function() {
  return /** @type {!proto.io.haveno.protobuffer.XmrAddressEntry.Context} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.XmrAddressEntry.Context} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.setContext = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional int64 coin_locked_in_multi_sig = 11;
 * @return {number}
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.getCoinLockedInMultiSig = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.XmrAddressEntry} returns this
 */
proto.io.haveno.protobuffer.XmrAddressEntry.prototype.setCoinLockedInMultiSig = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.NavigationPath.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.NavigationPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.NavigationPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NavigationPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.NavigationPath}
 */
proto.io.haveno.protobuffer.NavigationPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.NavigationPath;
  return proto.io.haveno.protobuffer.NavigationPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.NavigationPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.NavigationPath}
 */
proto.io.haveno.protobuffer.NavigationPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.NavigationPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.NavigationPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.NavigationPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string path = 1;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.getPathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.NavigationPath} returns this
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.setPathList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.NavigationPath} returns this
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.addPath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.NavigationPath} returns this
 */
proto.io.haveno.protobuffer.NavigationPath.prototype.clearPathList = function() {
  return this.setPathList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentAccountList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccountList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccountList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccountList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountList.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentAccountList: jspb.Message.toObjectList(msg.getPaymentAccountList(),
    proto.io.haveno.protobuffer.PaymentAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountList}
 */
proto.io.haveno.protobuffer.PaymentAccountList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccountList;
  return proto.io.haveno.protobuffer.PaymentAccountList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountList}
 */
proto.io.haveno.protobuffer.PaymentAccountList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.PaymentAccount;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader);
      msg.addPaymentAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccountList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccountList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentAccountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PaymentAccount payment_account = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.PaymentAccount>}
 */
proto.io.haveno.protobuffer.PaymentAccountList.prototype.getPaymentAccountList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.PaymentAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.PaymentAccount, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.PaymentAccount>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountList} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountList.prototype.setPaymentAccountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.PaymentAccountList.prototype.addPaymentAccount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.PaymentAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountList} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountList.prototype.clearPaymentAccountList = function() {
  return this.setPaymentAccountList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.TradableList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TradableList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TradableList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TradableList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradableList.toObject = function(includeInstance, msg) {
  var f, obj = {
    tradableList: jspb.Message.toObjectList(msg.getTradableList(),
    proto.io.haveno.protobuffer.Tradable.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TradableList}
 */
proto.io.haveno.protobuffer.TradableList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TradableList;
  return proto.io.haveno.protobuffer.TradableList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TradableList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TradableList}
 */
proto.io.haveno.protobuffer.TradableList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Tradable;
      reader.readMessage(value,proto.io.haveno.protobuffer.Tradable.deserializeBinaryFromReader);
      msg.addTradable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradableList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TradableList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TradableList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradableList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTradableList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Tradable.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Tradable tradable = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.Tradable>}
 */
proto.io.haveno.protobuffer.TradableList.prototype.getTradableList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Tradable>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Tradable, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Tradable>} value
 * @return {!proto.io.haveno.protobuffer.TradableList} returns this
*/
proto.io.haveno.protobuffer.TradableList.prototype.setTradableList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Tradable=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Tradable}
 */
proto.io.haveno.protobuffer.TradableList.prototype.addTradable = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.Tradable, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.TradableList} returns this
 */
proto.io.haveno.protobuffer.TradableList.prototype.clearTradableList = function() {
  return this.setTradableList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Offer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Offer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Offer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Offer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerPayload: (f = msg.getOfferPayload()) && proto.io.haveno.protobuffer.OfferPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Offer}
 */
proto.io.haveno.protobuffer.Offer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Offer;
  return proto.io.haveno.protobuffer.Offer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Offer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Offer}
 */
proto.io.haveno.protobuffer.Offer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.OfferPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.OfferPayload.deserializeBinaryFromReader);
      msg.setOfferPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Offer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Offer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Offer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Offer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.OfferPayload.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Offer.State = {
  PB_ERROR: 0,
  UNKNOWN: 1,
  OFFER_FEE_RESERVED: 2,
  AVAILABLE: 3,
  NOT_AVAILABLE: 4,
  REMOVED: 5,
  MAKER_OFFLINE: 6
};

/**
 * optional OfferPayload offer_payload = 1;
 * @return {?proto.io.haveno.protobuffer.OfferPayload}
 */
proto.io.haveno.protobuffer.Offer.prototype.getOfferPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.OfferPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OfferPayload, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.OfferPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.Offer} returns this
*/
proto.io.haveno.protobuffer.Offer.prototype.setOfferPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Offer} returns this
 */
proto.io.haveno.protobuffer.Offer.prototype.clearOfferPayload = function() {
  return this.setOfferPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Offer.prototype.hasOfferPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SignedOfferList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignedOfferList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignedOfferList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignedOfferList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedOfferList.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedOfferList: jspb.Message.toObjectList(msg.getSignedOfferList(),
    proto.io.haveno.protobuffer.SignedOffer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignedOfferList}
 */
proto.io.haveno.protobuffer.SignedOfferList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignedOfferList;
  return proto.io.haveno.protobuffer.SignedOfferList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignedOfferList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignedOfferList}
 */
proto.io.haveno.protobuffer.SignedOfferList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.SignedOffer;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedOffer.deserializeBinaryFromReader);
      msg.addSignedOffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedOfferList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignedOfferList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignedOfferList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedOfferList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedOfferList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.SignedOffer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SignedOffer signed_offer = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.SignedOffer>}
 */
proto.io.haveno.protobuffer.SignedOfferList.prototype.getSignedOfferList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.SignedOffer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.SignedOffer, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.SignedOffer>} value
 * @return {!proto.io.haveno.protobuffer.SignedOfferList} returns this
*/
proto.io.haveno.protobuffer.SignedOfferList.prototype.setSignedOfferList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.SignedOffer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SignedOffer}
 */
proto.io.haveno.protobuffer.SignedOfferList.prototype.addSignedOffer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.SignedOffer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SignedOfferList} returns this
 */
proto.io.haveno.protobuffer.SignedOfferList.prototype.clearSignedOfferList = function() {
  return this.setSignedOfferList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.SignedOffer.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SignedOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SignedOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeStamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    traderId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tradeAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    penaltyAmount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reserveTxHash: jspb.Message.getFieldWithDefault(msg, 6, ""),
    reserveTxHex: jspb.Message.getFieldWithDefault(msg, 7, ""),
    reserveTxKeyImagesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    reserveTxMinerFee: jspb.Message.getFieldWithDefault(msg, 9, 0),
    arbitratorSignature: msg.getArbitratorSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SignedOffer}
 */
proto.io.haveno.protobuffer.SignedOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SignedOffer;
  return proto.io.haveno.protobuffer.SignedOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SignedOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SignedOffer}
 */
proto.io.haveno.protobuffer.SignedOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeStamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTraderId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTradeAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPenaltyAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHash(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHex(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addReserveTxKeyImages(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReserveTxMinerFee(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setArbitratorSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SignedOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SignedOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SignedOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeStamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTraderId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTradeAmount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPenaltyAmount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getReserveTxHash();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReserveTxHex();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReserveTxKeyImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getReserveTxMinerFee();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getArbitratorSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * optional int64 time_stamp = 1;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getTimeStamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setTimeStamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 trader_id = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getTraderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setTraderId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string offer_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 trade_amount = 4;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getTradeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setTradeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 penalty_amount = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getPenaltyAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setPenaltyAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string reserve_tx_hash = 6;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getReserveTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setReserveTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string reserve_tx_hex = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getReserveTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setReserveTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string reserve_tx_key_images = 8;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getReserveTxKeyImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setReserveTxKeyImagesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.addReserveTxKeyImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.clearReserveTxKeyImagesList = function() {
  return this.setReserveTxKeyImagesList([]);
};


/**
 * optional uint64 reserve_tx_miner_fee = 9;
 * @return {number}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getReserveTxMinerFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setReserveTxMinerFee = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bytes arbitrator_signature = 10;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getArbitratorSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes arbitrator_signature = 10;
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getArbitratorSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getArbitratorSignature()));
};


/**
 * optional bytes arbitrator_signature = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getArbitratorSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.getArbitratorSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getArbitratorSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.SignedOffer} returns this
 */
proto.io.haveno.protobuffer.SignedOffer.prototype.setArbitratorSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.OpenOffer.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.OpenOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.OpenOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OpenOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    offer: (f = msg.getOffer()) && proto.io.haveno.protobuffer.Offer.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    triggerPrice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reserveExactAmount: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    splitOutputTxHash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    splitOutputTxFee: jspb.Message.getFieldWithDefault(msg, 6, 0),
    scheduledTxHashesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    scheduledAmount: jspb.Message.getFieldWithDefault(msg, 8, ""),
    reserveTxHash: jspb.Message.getFieldWithDefault(msg, 9, ""),
    reserveTxHex: jspb.Message.getFieldWithDefault(msg, 10, ""),
    reserveTxKey: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.OpenOffer}
 */
proto.io.haveno.protobuffer.OpenOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.OpenOffer;
  return proto.io.haveno.protobuffer.OpenOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.OpenOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.OpenOffer}
 */
proto.io.haveno.protobuffer.OpenOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Offer;
      reader.readMessage(value,proto.io.haveno.protobuffer.Offer.deserializeBinaryFromReader);
      msg.setOffer(value);
      break;
    case 2:
      var value = /** @type {!proto.io.haveno.protobuffer.OpenOffer.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTriggerPrice(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserveExactAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSplitOutputTxHash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSplitOutputTxFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addScheduledTxHashes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduledAmount(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHash(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHex(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.OpenOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.OpenOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.OpenOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Offer.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTriggerPrice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getReserveExactAmount();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSplitOutputTxHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSplitOutputTxFee();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getScheduledTxHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getScheduledAmount();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getReserveTxHash();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getReserveTxHex();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getReserveTxKey();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.OpenOffer.State = {
  PB_ERROR: 0,
  SCHEDULED: 1,
  AVAILABLE: 2,
  RESERVED: 3,
  CLOSED: 4,
  CANCELED: 5,
  DEACTIVATED: 6
};

/**
 * optional Offer offer = 1;
 * @return {?proto.io.haveno.protobuffer.Offer}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getOffer = function() {
  return /** @type{?proto.io.haveno.protobuffer.Offer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Offer, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Offer|undefined} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
*/
proto.io.haveno.protobuffer.OpenOffer.prototype.setOffer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.clearOffer = function() {
  return this.setOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.hasOffer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State state = 2;
 * @return {!proto.io.haveno.protobuffer.OpenOffer.State}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getState = function() {
  return /** @type {!proto.io.haveno.protobuffer.OpenOffer.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.OpenOffer.State} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 trigger_price = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getTriggerPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setTriggerPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool reserve_exact_amount = 4;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getReserveExactAmount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setReserveExactAmount = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string split_output_tx_hash = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getSplitOutputTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setSplitOutputTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 split_output_tx_fee = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getSplitOutputTxFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setSplitOutputTxFee = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string scheduled_tx_hashes = 7;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getScheduledTxHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setScheduledTxHashesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.addScheduledTxHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.clearScheduledTxHashesList = function() {
  return this.setScheduledTxHashesList([]);
};


/**
 * optional string scheduled_amount = 8;
 * @return {string}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getScheduledAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setScheduledAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string reserve_tx_hash = 9;
 * @return {string}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getReserveTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setReserveTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string reserve_tx_hex = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getReserveTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setReserveTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string reserve_tx_key = 11;
 * @return {string}
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.getReserveTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.OpenOffer} returns this
 */
proto.io.haveno.protobuffer.OpenOffer.prototype.setReserveTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.Tradable.oneofGroups_ = [[1,2,3,4,5,6,1001]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Tradable.MessageCase = {
  MESSAGE_NOT_SET: 0,
  OPEN_OFFER: 1,
  BUYER_AS_MAKER_TRADE: 2,
  BUYER_AS_TAKER_TRADE: 3,
  SELLER_AS_MAKER_TRADE: 4,
  SELLER_AS_TAKER_TRADE: 5,
  ARBITRATOR_TRADE: 6,
  SIGNED_OFFER: 1001
};

/**
 * @return {proto.io.haveno.protobuffer.Tradable.MessageCase}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.Tradable.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Tradable.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Tradable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Tradable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Tradable.toObject = function(includeInstance, msg) {
  var f, obj = {
    openOffer: (f = msg.getOpenOffer()) && proto.io.haveno.protobuffer.OpenOffer.toObject(includeInstance, f),
    buyerAsMakerTrade: (f = msg.getBuyerAsMakerTrade()) && proto.io.haveno.protobuffer.BuyerAsMakerTrade.toObject(includeInstance, f),
    buyerAsTakerTrade: (f = msg.getBuyerAsTakerTrade()) && proto.io.haveno.protobuffer.BuyerAsTakerTrade.toObject(includeInstance, f),
    sellerAsMakerTrade: (f = msg.getSellerAsMakerTrade()) && proto.io.haveno.protobuffer.SellerAsMakerTrade.toObject(includeInstance, f),
    sellerAsTakerTrade: (f = msg.getSellerAsTakerTrade()) && proto.io.haveno.protobuffer.SellerAsTakerTrade.toObject(includeInstance, f),
    arbitratorTrade: (f = msg.getArbitratorTrade()) && proto.io.haveno.protobuffer.ArbitratorTrade.toObject(includeInstance, f),
    signedOffer: (f = msg.getSignedOffer()) && proto.io.haveno.protobuffer.SignedOffer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Tradable}
 */
proto.io.haveno.protobuffer.Tradable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Tradable;
  return proto.io.haveno.protobuffer.Tradable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Tradable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Tradable}
 */
proto.io.haveno.protobuffer.Tradable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.OpenOffer;
      reader.readMessage(value,proto.io.haveno.protobuffer.OpenOffer.deserializeBinaryFromReader);
      msg.setOpenOffer(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.BuyerAsMakerTrade;
      reader.readMessage(value,proto.io.haveno.protobuffer.BuyerAsMakerTrade.deserializeBinaryFromReader);
      msg.setBuyerAsMakerTrade(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.BuyerAsTakerTrade;
      reader.readMessage(value,proto.io.haveno.protobuffer.BuyerAsTakerTrade.deserializeBinaryFromReader);
      msg.setBuyerAsTakerTrade(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.SellerAsMakerTrade;
      reader.readMessage(value,proto.io.haveno.protobuffer.SellerAsMakerTrade.deserializeBinaryFromReader);
      msg.setSellerAsMakerTrade(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.SellerAsTakerTrade;
      reader.readMessage(value,proto.io.haveno.protobuffer.SellerAsTakerTrade.deserializeBinaryFromReader);
      msg.setSellerAsTakerTrade(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.ArbitratorTrade;
      reader.readMessage(value,proto.io.haveno.protobuffer.ArbitratorTrade.deserializeBinaryFromReader);
      msg.setArbitratorTrade(value);
      break;
    case 1001:
      var value = new proto.io.haveno.protobuffer.SignedOffer;
      reader.readMessage(value,proto.io.haveno.protobuffer.SignedOffer.deserializeBinaryFromReader);
      msg.setSignedOffer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Tradable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Tradable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Tradable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Tradable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenOffer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.OpenOffer.serializeBinaryToWriter
    );
  }
  f = message.getBuyerAsMakerTrade();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.BuyerAsMakerTrade.serializeBinaryToWriter
    );
  }
  f = message.getBuyerAsTakerTrade();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.BuyerAsTakerTrade.serializeBinaryToWriter
    );
  }
  f = message.getSellerAsMakerTrade();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.SellerAsMakerTrade.serializeBinaryToWriter
    );
  }
  f = message.getSellerAsTakerTrade();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.SellerAsTakerTrade.serializeBinaryToWriter
    );
  }
  f = message.getArbitratorTrade();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.ArbitratorTrade.serializeBinaryToWriter
    );
  }
  f = message.getSignedOffer();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.io.haveno.protobuffer.SignedOffer.serializeBinaryToWriter
    );
  }
};


/**
 * optional OpenOffer open_offer = 1;
 * @return {?proto.io.haveno.protobuffer.OpenOffer}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getOpenOffer = function() {
  return /** @type{?proto.io.haveno.protobuffer.OpenOffer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.OpenOffer, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.OpenOffer|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setOpenOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearOpenOffer = function() {
  return this.setOpenOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasOpenOffer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BuyerAsMakerTrade buyer_as_maker_trade = 2;
 * @return {?proto.io.haveno.protobuffer.BuyerAsMakerTrade}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getBuyerAsMakerTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.BuyerAsMakerTrade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BuyerAsMakerTrade, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.BuyerAsMakerTrade|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setBuyerAsMakerTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearBuyerAsMakerTrade = function() {
  return this.setBuyerAsMakerTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasBuyerAsMakerTrade = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BuyerAsTakerTrade buyer_as_taker_trade = 3;
 * @return {?proto.io.haveno.protobuffer.BuyerAsTakerTrade}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getBuyerAsTakerTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.BuyerAsTakerTrade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BuyerAsTakerTrade, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.BuyerAsTakerTrade|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setBuyerAsTakerTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearBuyerAsTakerTrade = function() {
  return this.setBuyerAsTakerTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasBuyerAsTakerTrade = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SellerAsMakerTrade seller_as_maker_trade = 4;
 * @return {?proto.io.haveno.protobuffer.SellerAsMakerTrade}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getSellerAsMakerTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.SellerAsMakerTrade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SellerAsMakerTrade, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.SellerAsMakerTrade|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setSellerAsMakerTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearSellerAsMakerTrade = function() {
  return this.setSellerAsMakerTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasSellerAsMakerTrade = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SellerAsTakerTrade seller_as_taker_trade = 5;
 * @return {?proto.io.haveno.protobuffer.SellerAsTakerTrade}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getSellerAsTakerTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.SellerAsTakerTrade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SellerAsTakerTrade, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.SellerAsTakerTrade|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setSellerAsTakerTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearSellerAsTakerTrade = function() {
  return this.setSellerAsTakerTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasSellerAsTakerTrade = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ArbitratorTrade arbitrator_trade = 6;
 * @return {?proto.io.haveno.protobuffer.ArbitratorTrade}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getArbitratorTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.ArbitratorTrade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ArbitratorTrade, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.ArbitratorTrade|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setArbitratorTrade = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearArbitratorTrade = function() {
  return this.setArbitratorTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasArbitratorTrade = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional SignedOffer signed_offer = 1001;
 * @return {?proto.io.haveno.protobuffer.SignedOffer}
 */
proto.io.haveno.protobuffer.Tradable.prototype.getSignedOffer = function() {
  return /** @type{?proto.io.haveno.protobuffer.SignedOffer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.SignedOffer, 1001));
};


/**
 * @param {?proto.io.haveno.protobuffer.SignedOffer|undefined} value
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
*/
proto.io.haveno.protobuffer.Tradable.prototype.setSignedOffer = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1001, proto.io.haveno.protobuffer.Tradable.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Tradable} returns this
 */
proto.io.haveno.protobuffer.Tradable.prototype.clearSignedOffer = function() {
  return this.setSignedOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Tradable.prototype.hasSignedOffer = function() {
  return jspb.Message.getField(this, 1001) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.Trade.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Trade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Trade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Trade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Trade.toObject = function(includeInstance, msg) {
  var f, obj = {
    offer: (f = msg.getOffer()) && proto.io.haveno.protobuffer.Offer.toObject(includeInstance, f),
    processModel: (f = msg.getProcessModel()) && proto.io.haveno.protobuffer.ProcessModel.toObject(includeInstance, f),
    payoutTxId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payoutTxHex: jspb.Message.getFieldWithDefault(msg, 4, ""),
    payoutTxKey: jspb.Message.getFieldWithDefault(msg, 5, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    takerFee: jspb.Message.getFieldWithDefault(msg, 8, 0),
    takeOfferDate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    price: jspb.Message.getFieldWithDefault(msg, 10, 0),
    state: jspb.Message.getFieldWithDefault(msg, 11, 0),
    payoutState: jspb.Message.getFieldWithDefault(msg, 12, 0),
    disputeState: jspb.Message.getFieldWithDefault(msg, 13, 0),
    periodState: jspb.Message.getFieldWithDefault(msg, 14, 0),
    contract: (f = msg.getContract()) && proto.io.haveno.protobuffer.Contract.toObject(includeInstance, f),
    contractAsJson: jspb.Message.getFieldWithDefault(msg, 16, ""),
    contractHash: msg.getContractHash_asB64(),
    arbitratorNodeAddress: (f = msg.getArbitratorNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    mediatorNodeAddress: (f = msg.getMediatorNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 20, ""),
    counterCurrencyTxId: jspb.Message.getFieldWithDefault(msg, 21, ""),
    chatMessageList: jspb.Message.toObjectList(msg.getChatMessageList(),
    proto.io.haveno.protobuffer.ChatMessage.toObject, includeInstance),
    mediationResultState: jspb.Message.getFieldWithDefault(msg, 23, 0),
    lockTime: jspb.Message.getFieldWithDefault(msg, 24, 0),
    startTime: jspb.Message.getFieldWithDefault(msg, 25, 0),
    refundAgentNodeAddress: (f = msg.getRefundAgentNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    refundResultState: jspb.Message.getFieldWithDefault(msg, 27, 0),
    counterCurrencyExtraData: jspb.Message.getFieldWithDefault(msg, 28, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 29, ""),
    isCompleted: jspb.Message.getBooleanFieldWithDefault(msg, 30, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.Trade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Trade;
  return proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Trade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Offer;
      reader.readMessage(value,proto.io.haveno.protobuffer.Offer.deserializeBinaryFromReader);
      msg.setOffer(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.ProcessModel;
      reader.readMessage(value,proto.io.haveno.protobuffer.ProcessModel.deserializeBinaryFromReader);
      msg.setProcessModel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutTxId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutTxHex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutTxKey(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTakerFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTakeOfferDate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 11:
      var value = /** @type {!proto.io.haveno.protobuffer.Trade.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 12:
      var value = /** @type {!proto.io.haveno.protobuffer.Trade.PayoutState} */ (reader.readEnum());
      msg.setPayoutState(value);
      break;
    case 13:
      var value = /** @type {!proto.io.haveno.protobuffer.Trade.DisputeState} */ (reader.readEnum());
      msg.setDisputeState(value);
      break;
    case 14:
      var value = /** @type {!proto.io.haveno.protobuffer.Trade.TradePeriodState} */ (reader.readEnum());
      msg.setPeriodState(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.Contract;
      reader.readMessage(value,proto.io.haveno.protobuffer.Contract.deserializeBinaryFromReader);
      msg.setContract(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAsJson(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractHash(value);
      break;
    case 18:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setArbitratorNodeAddress(value);
      break;
    case 19:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setMediatorNodeAddress(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterCurrencyTxId(value);
      break;
    case 22:
      var value = new proto.io.haveno.protobuffer.ChatMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.ChatMessage.deserializeBinaryFromReader);
      msg.addChatMessage(value);
      break;
    case 23:
      var value = /** @type {!proto.io.haveno.protobuffer.MediationResultState} */ (reader.readEnum());
      msg.setMediationResultState(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLockTime(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 26:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setRefundAgentNodeAddress(value);
      break;
    case 27:
      var value = /** @type {!proto.io.haveno.protobuffer.RefundResultState} */ (reader.readEnum());
      msg.setRefundResultState(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCounterCurrencyExtraData(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCompleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Trade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Trade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Offer.serializeBinaryToWriter
    );
  }
  f = message.getProcessModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.ProcessModel.serializeBinaryToWriter
    );
  }
  f = message.getPayoutTxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPayoutTxKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTakerFee();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getTakeOfferDate();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getPayoutState();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getDisputeState();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getPeriodState();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getContract();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.Contract.serializeBinaryToWriter
    );
  }
  f = message.getContractAsJson();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getContractHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = message.getArbitratorNodeAddress();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getMediatorNodeAddress();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getCounterCurrencyTxId();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getChatMessageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.io.haveno.protobuffer.ChatMessage.serializeBinaryToWriter
    );
  }
  f = message.getMediationResultState();
  if (f !== 0.0) {
    writer.writeEnum(
      23,
      f
    );
  }
  f = message.getLockTime();
  if (f !== 0) {
    writer.writeInt64(
      24,
      f
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = message.getRefundAgentNodeAddress();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getRefundResultState();
  if (f !== 0.0) {
    writer.writeEnum(
      27,
      f
    );
  }
  f = message.getCounterCurrencyExtraData();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getIsCompleted();
  if (f) {
    writer.writeBool(
      30,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Trade.State = {
  PB_ERROR_STATE: 0,
  PREPARATION: 1,
  MULTISIG_PREPARED: 2,
  MULTISIG_MADE: 3,
  MULTISIG_EXCHANGED: 4,
  MULTISIG_COMPLETED: 5,
  CONTRACT_SIGNATURE_REQUESTED: 6,
  CONTRACT_SIGNED: 7,
  SENT_PUBLISH_DEPOSIT_TX_REQUEST: 8,
  SEND_FAILED_PUBLISH_DEPOSIT_TX_REQUEST: 9,
  SAW_ARRIVED_PUBLISH_DEPOSIT_TX_REQUEST: 10,
  PUBLISH_DEPOSIT_TX_REQUEST_FAILED: 11,
  ARBITRATOR_PUBLISHED_DEPOSIT_TXS: 12,
  DEPOSIT_TXS_SEEN_IN_NETWORK: 13,
  DEPOSIT_TXS_CONFIRMED_IN_BLOCKCHAIN: 14,
  DEPOSIT_TXS_UNLOCKED_IN_BLOCKCHAIN: 15,
  BUYER_CONFIRMED_IN_UI_PAYMENT_SENT: 16,
  BUYER_SENT_PAYMENT_SENT_MSG: 17,
  BUYER_SEND_FAILED_PAYMENT_SENT_MSG: 18,
  BUYER_STORED_IN_MAILBOX_PAYMENT_SENT_MSG: 19,
  BUYER_SAW_ARRIVED_PAYMENT_SENT_MSG: 20,
  SELLER_RECEIVED_PAYMENT_SENT_MSG: 21,
  SELLER_CONFIRMED_IN_UI_PAYMENT_RECEIPT: 22,
  SELLER_SENT_PAYMENT_RECEIVED_MSG: 23,
  SELLER_SEND_FAILED_PAYMENT_RECEIVED_MSG: 24,
  SELLER_STORED_IN_MAILBOX_PAYMENT_RECEIVED_MSG: 25,
  SELLER_SAW_ARRIVED_PAYMENT_RECEIVED_MSG: 26
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Trade.Phase = {
  PB_ERROR_PHASE: 0,
  INIT: 1,
  DEPOSIT_REQUESTED: 2,
  DEPOSITS_PUBLISHED: 3,
  DEPOSITS_CONFIRMED: 4,
  DEPOSITS_UNLOCKED: 5,
  PAYMENT_SENT: 6,
  PAYMENT_RECEIVED: 7
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Trade.PayoutState = {
  PAYOUT_UNPUBLISHED: 0,
  PAYOUT_PUBLISHED: 1,
  PAYOUT_CONFIRMED: 2,
  PAYOUT_UNLOCKED: 3
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Trade.DisputeState = {
  PB_ERROR_DISPUTE_STATE: 0,
  NO_DISPUTE: 1,
  DISPUTE_REQUESTED: 2,
  DISPUTE_OPENED: 3,
  ARBITRATOR_SENT_DISPUTE_CLOSED_MSG: 4,
  ARBITRATOR_SEND_FAILED_DISPUTE_CLOSED_MSG: 5,
  ARBITRATOR_STORED_IN_MAILBOX_DISPUTE_CLOSED_MSG: 6,
  ARBITRATOR_SAW_ARRIVED_DISPUTE_CLOSED_MSG: 7,
  DISPUTE_CLOSED: 8,
  MEDIATION_REQUESTED: 9,
  MEDIATION_STARTED_BY_PEER: 10,
  MEDIATION_CLOSED: 11,
  REFUND_REQUESTED: 12,
  REFUND_REQUEST_STARTED_BY_PEER: 13,
  REFUND_REQUEST_CLOSED: 14
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.Trade.TradePeriodState = {
  PB_ERROR_TRADE_PERIOD_STATE: 0,
  FIRST_HALF: 1,
  SECOND_HALF: 2,
  TRADE_PERIOD_OVER: 3
};

/**
 * optional Offer offer = 1;
 * @return {?proto.io.haveno.protobuffer.Offer}
 */
proto.io.haveno.protobuffer.Trade.prototype.getOffer = function() {
  return /** @type{?proto.io.haveno.protobuffer.Offer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Offer, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Offer|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setOffer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearOffer = function() {
  return this.setOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasOffer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProcessModel process_model = 2;
 * @return {?proto.io.haveno.protobuffer.ProcessModel}
 */
proto.io.haveno.protobuffer.Trade.prototype.getProcessModel = function() {
  return /** @type{?proto.io.haveno.protobuffer.ProcessModel} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.ProcessModel, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.ProcessModel|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setProcessModel = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearProcessModel = function() {
  return this.setProcessModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasProcessModel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string payout_tx_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPayoutTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPayoutTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payout_tx_hex = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payout_tx_key = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPayoutTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPayoutTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 amount = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 taker_fee = 8;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getTakerFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setTakerFee = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 take_offer_date = 9;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getTakeOfferDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setTakeOfferDate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 price = 10;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional State state = 11;
 * @return {!proto.io.haveno.protobuffer.Trade.State}
 */
proto.io.haveno.protobuffer.Trade.prototype.getState = function() {
  return /** @type {!proto.io.haveno.protobuffer.Trade.State} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.Trade.State} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional PayoutState payout_state = 12;
 * @return {!proto.io.haveno.protobuffer.Trade.PayoutState}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPayoutState = function() {
  return /** @type {!proto.io.haveno.protobuffer.Trade.PayoutState} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.Trade.PayoutState} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPayoutState = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional DisputeState dispute_state = 13;
 * @return {!proto.io.haveno.protobuffer.Trade.DisputeState}
 */
proto.io.haveno.protobuffer.Trade.prototype.getDisputeState = function() {
  return /** @type {!proto.io.haveno.protobuffer.Trade.DisputeState} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.Trade.DisputeState} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setDisputeState = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional TradePeriodState period_state = 14;
 * @return {!proto.io.haveno.protobuffer.Trade.TradePeriodState}
 */
proto.io.haveno.protobuffer.Trade.prototype.getPeriodState = function() {
  return /** @type {!proto.io.haveno.protobuffer.Trade.TradePeriodState} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.Trade.TradePeriodState} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setPeriodState = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional Contract contract = 15;
 * @return {?proto.io.haveno.protobuffer.Contract}
 */
proto.io.haveno.protobuffer.Trade.prototype.getContract = function() {
  return /** @type{?proto.io.haveno.protobuffer.Contract} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Contract, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.Contract|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setContract = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearContract = function() {
  return this.setContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasContract = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string contract_as_json = 16;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getContractAsJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setContractAsJson = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional bytes contract_hash = 17;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.Trade.prototype.getContractHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes contract_hash = 17;
 * This is a type-conversion wrapper around `getContractHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getContractHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractHash()));
};


/**
 * optional bytes contract_hash = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Trade.prototype.getContractHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setContractHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 17, value);
};


/**
 * optional NodeAddress arbitrator_node_address = 18;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Trade.prototype.getArbitratorNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 18));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setArbitratorNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearArbitratorNodeAddress = function() {
  return this.setArbitratorNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasArbitratorNodeAddress = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional NodeAddress mediator_node_address = 19;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Trade.prototype.getMediatorNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 19));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setMediatorNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearMediatorNodeAddress = function() {
  return this.setMediatorNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasMediatorNodeAddress = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string error_message = 20;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string counter_currency_tx_id = 21;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getCounterCurrencyTxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setCounterCurrencyTxId = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated ChatMessage chat_message = 22;
 * @return {!Array<!proto.io.haveno.protobuffer.ChatMessage>}
 */
proto.io.haveno.protobuffer.Trade.prototype.getChatMessageList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.ChatMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.ChatMessage, 22));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.ChatMessage>} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setChatMessageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.ChatMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.ChatMessage}
 */
proto.io.haveno.protobuffer.Trade.prototype.addChatMessage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.io.haveno.protobuffer.ChatMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearChatMessageList = function() {
  return this.setChatMessageList([]);
};


/**
 * optional MediationResultState mediation_result_state = 23;
 * @return {!proto.io.haveno.protobuffer.MediationResultState}
 */
proto.io.haveno.protobuffer.Trade.prototype.getMediationResultState = function() {
  return /** @type {!proto.io.haveno.protobuffer.MediationResultState} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.MediationResultState} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setMediationResultState = function(value) {
  return jspb.Message.setProto3EnumField(this, 23, value);
};


/**
 * optional int64 lock_time = 24;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getLockTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setLockTime = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int64 start_time = 25;
 * @return {number}
 */
proto.io.haveno.protobuffer.Trade.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional NodeAddress refund_agent_node_address = 26;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.Trade.prototype.getRefundAgentNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 26));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
*/
proto.io.haveno.protobuffer.Trade.prototype.setRefundAgentNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.clearRefundAgentNodeAddress = function() {
  return this.setRefundAgentNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.hasRefundAgentNodeAddress = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional RefundResultState refund_result_state = 27;
 * @return {!proto.io.haveno.protobuffer.RefundResultState}
 */
proto.io.haveno.protobuffer.Trade.prototype.getRefundResultState = function() {
  return /** @type {!proto.io.haveno.protobuffer.RefundResultState} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.RefundResultState} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setRefundResultState = function(value) {
  return jspb.Message.setProto3EnumField(this, 27, value);
};


/**
 * optional string counter_currency_extra_data = 28;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getCounterCurrencyExtraData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setCounterCurrencyExtraData = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string uid = 29;
 * @return {string}
 */
proto.io.haveno.protobuffer.Trade.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional bool is_completed = 30;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Trade.prototype.getIsCompleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.Trade} returns this
 */
proto.io.haveno.protobuffer.Trade.prototype.setIsCompleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 30, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BuyerAsMakerTrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BuyerAsMakerTrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && proto.io.haveno.protobuffer.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BuyerAsMakerTrade}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BuyerAsMakerTrade;
  return proto.io.haveno.protobuffer.BuyerAsMakerTrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BuyerAsMakerTrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BuyerAsMakerTrade}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Trade;
      reader.readMessage(value,proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BuyerAsMakerTrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BuyerAsMakerTrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional Trade trade = 1;
 * @return {?proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.getTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.Trade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Trade, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Trade|undefined} value
 * @return {!proto.io.haveno.protobuffer.BuyerAsMakerTrade} returns this
*/
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BuyerAsMakerTrade} returns this
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BuyerAsMakerTrade.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BuyerAsTakerTrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BuyerAsTakerTrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && proto.io.haveno.protobuffer.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BuyerAsTakerTrade}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BuyerAsTakerTrade;
  return proto.io.haveno.protobuffer.BuyerAsTakerTrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BuyerAsTakerTrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BuyerAsTakerTrade}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Trade;
      reader.readMessage(value,proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BuyerAsTakerTrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BuyerAsTakerTrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional Trade trade = 1;
 * @return {?proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.getTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.Trade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Trade, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Trade|undefined} value
 * @return {!proto.io.haveno.protobuffer.BuyerAsTakerTrade} returns this
*/
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.BuyerAsTakerTrade} returns this
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.BuyerAsTakerTrade.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SellerAsMakerTrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SellerAsMakerTrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && proto.io.haveno.protobuffer.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SellerAsMakerTrade}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SellerAsMakerTrade;
  return proto.io.haveno.protobuffer.SellerAsMakerTrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SellerAsMakerTrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SellerAsMakerTrade}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Trade;
      reader.readMessage(value,proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SellerAsMakerTrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SellerAsMakerTrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional Trade trade = 1;
 * @return {?proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.getTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.Trade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Trade, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Trade|undefined} value
 * @return {!proto.io.haveno.protobuffer.SellerAsMakerTrade} returns this
*/
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SellerAsMakerTrade} returns this
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SellerAsMakerTrade.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.SellerAsTakerTrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.SellerAsTakerTrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && proto.io.haveno.protobuffer.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.SellerAsTakerTrade}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.SellerAsTakerTrade;
  return proto.io.haveno.protobuffer.SellerAsTakerTrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.SellerAsTakerTrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.SellerAsTakerTrade}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Trade;
      reader.readMessage(value,proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.SellerAsTakerTrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.SellerAsTakerTrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional Trade trade = 1;
 * @return {?proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.getTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.Trade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Trade, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Trade|undefined} value
 * @return {!proto.io.haveno.protobuffer.SellerAsTakerTrade} returns this
*/
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.SellerAsTakerTrade} returns this
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.SellerAsTakerTrade.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ArbitratorTrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ArbitratorTrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ArbitratorTrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    trade: (f = msg.getTrade()) && proto.io.haveno.protobuffer.Trade.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ArbitratorTrade}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ArbitratorTrade;
  return proto.io.haveno.protobuffer.ArbitratorTrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ArbitratorTrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ArbitratorTrade}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Trade;
      reader.readMessage(value,proto.io.haveno.protobuffer.Trade.deserializeBinaryFromReader);
      msg.setTrade(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ArbitratorTrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ArbitratorTrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ArbitratorTrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTrade();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Trade.serializeBinaryToWriter
    );
  }
};


/**
 * optional Trade trade = 1;
 * @return {?proto.io.haveno.protobuffer.Trade}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.getTrade = function() {
  return /** @type{?proto.io.haveno.protobuffer.Trade} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Trade, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.Trade|undefined} value
 * @return {!proto.io.haveno.protobuffer.ArbitratorTrade} returns this
*/
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.setTrade = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ArbitratorTrade} returns this
 */
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.clearTrade = function() {
  return this.setTrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ArbitratorTrade.prototype.hasTrade = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ProcessModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ProcessModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProcessModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    payoutTxSignature: msg.getPayoutTxSignature_asB64(),
    useSavingsWallet: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    fundsNeededForTrade: jspb.Message.getFieldWithDefault(msg, 6, 0),
    paymentSentMessageState: jspb.Message.getFieldWithDefault(msg, 7, ""),
    makerSignature: msg.getMakerSignature_asB64(),
    maker: (f = msg.getMaker()) && proto.io.haveno.protobuffer.TradePeer.toObject(includeInstance, f),
    taker: (f = msg.getTaker()) && proto.io.haveno.protobuffer.TradePeer.toObject(includeInstance, f),
    arbitrator: (f = msg.getArbitrator()) && proto.io.haveno.protobuffer.TradePeer.toObject(includeInstance, f),
    tempTradePeerNodeAddress: (f = msg.getTempTradePeerNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    multisigAddress: jspb.Message.getFieldWithDefault(msg, 13, ""),
    mediatedPayoutTxSignature: msg.getMediatedPayoutTxSignature_asB64(),
    buyerPayoutAmountFromMediation: jspb.Message.getFieldWithDefault(msg, 18, 0),
    sellerPayoutAmountFromMediation: jspb.Message.getFieldWithDefault(msg, 19, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ProcessModel}
 */
proto.io.haveno.protobuffer.ProcessModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ProcessModel;
  return proto.io.haveno.protobuffer.ProcessModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ProcessModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ProcessModel}
 */
proto.io.haveno.protobuffer.ProcessModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayoutTxSignature(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseSavingsWallet(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFundsNeededForTrade(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentSentMessageState(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMakerSignature(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.TradePeer;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradePeer.deserializeBinaryFromReader);
      msg.setMaker(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.TradePeer;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradePeer.deserializeBinaryFromReader);
      msg.setTaker(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.TradePeer;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradePeer.deserializeBinaryFromReader);
      msg.setArbitrator(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setTempTradePeerNodeAddress(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMultisigAddress(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMediatedPayoutTxSignature(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBuyerPayoutAmountFromMediation(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellerPayoutAmountFromMediation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ProcessModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ProcessModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ProcessModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getPayoutTxSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getUseSavingsWallet();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getFundsNeededForTrade();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getPaymentSentMessageState();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMakerSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getMaker();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.TradePeer.serializeBinaryToWriter
    );
  }
  f = message.getTaker();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.TradePeer.serializeBinaryToWriter
    );
  }
  f = message.getArbitrator();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.TradePeer.serializeBinaryToWriter
    );
  }
  f = message.getTempTradePeerNodeAddress();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getMultisigAddress();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMediatedPayoutTxSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = message.getBuyerPayoutAmountFromMediation();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getSellerPayoutAmountFromMediation();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
};


/**
 * optional string offer_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PubKeyRing pub_key_ring = 3;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
*/
proto.io.haveno.protobuffer.ProcessModel.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes payout_tx_signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getPayoutTxSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payout_tx_signature = 4;
 * This is a type-conversion wrapper around `getPayoutTxSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getPayoutTxSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayoutTxSignature()));
};


/**
 * optional bytes payout_tx_signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayoutTxSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getPayoutTxSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayoutTxSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setPayoutTxSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bool use_savings_wallet = 5;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getUseSavingsWallet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setUseSavingsWallet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int64 funds_needed_for_trade = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getFundsNeededForTrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setFundsNeededForTrade = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string payment_sent_message_state = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getPaymentSentMessageState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setPaymentSentMessageState = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bytes maker_signature = 8;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMakerSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes maker_signature = 8;
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMakerSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMakerSignature()));
};


/**
 * optional bytes maker_signature = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMakerSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMakerSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMakerSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setMakerSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional TradePeer maker = 9;
 * @return {?proto.io.haveno.protobuffer.TradePeer}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMaker = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradePeer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradePeer, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradePeer|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
*/
proto.io.haveno.protobuffer.ProcessModel.prototype.setMaker = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.clearMaker = function() {
  return this.setMaker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.hasMaker = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional TradePeer taker = 10;
 * @return {?proto.io.haveno.protobuffer.TradePeer}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getTaker = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradePeer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradePeer, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradePeer|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
*/
proto.io.haveno.protobuffer.ProcessModel.prototype.setTaker = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.clearTaker = function() {
  return this.setTaker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.hasTaker = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional TradePeer arbitrator = 11;
 * @return {?proto.io.haveno.protobuffer.TradePeer}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getArbitrator = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradePeer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradePeer, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradePeer|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
*/
proto.io.haveno.protobuffer.ProcessModel.prototype.setArbitrator = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.clearArbitrator = function() {
  return this.setArbitrator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.hasArbitrator = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional NodeAddress temp_trade_peer_node_address = 12;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getTempTradePeerNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
*/
proto.io.haveno.protobuffer.ProcessModel.prototype.setTempTradePeerNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.clearTempTradePeerNodeAddress = function() {
  return this.setTempTradePeerNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.hasTempTradePeerNodeAddress = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string multisig_address = 13;
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMultisigAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setMultisigAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bytes mediated_payout_tx_signature = 17;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMediatedPayoutTxSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes mediated_payout_tx_signature = 17;
 * This is a type-conversion wrapper around `getMediatedPayoutTxSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMediatedPayoutTxSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMediatedPayoutTxSignature()));
};


/**
 * optional bytes mediated_payout_tx_signature = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMediatedPayoutTxSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getMediatedPayoutTxSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMediatedPayoutTxSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setMediatedPayoutTxSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 17, value);
};


/**
 * optional int64 buyer_payout_amount_from_mediation = 18;
 * @return {number}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getBuyerPayoutAmountFromMediation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setBuyerPayoutAmountFromMediation = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 seller_payout_amount_from_mediation = 19;
 * @return {number}
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.getSellerPayoutAmountFromMediation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.ProcessModel} returns this
 */
proto.io.haveno.protobuffer.ProcessModel.prototype.setSellerPayoutAmountFromMediation = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.TradePeer.repeatedFields_ = [29];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TradePeer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TradePeer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradePeer.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeAddress: (f = msg.getNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    pubKeyRing: (f = msg.getPubKeyRing()) && proto.io.haveno.protobuffer.PubKeyRing.toObject(includeInstance, f),
    accountId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentAccountId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paymentMethodId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentAccountPayloadHash: msg.getPaymentAccountPayloadHash_asB64(),
    encryptedPaymentAccountPayload: msg.getEncryptedPaymentAccountPayload_asB64(),
    paymentAccountKey: msg.getPaymentAccountKey_asB64(),
    paymentAccountPayload: (f = msg.getPaymentAccountPayload()) && proto.io.haveno.protobuffer.PaymentAccountPayload.toObject(includeInstance, f),
    payoutAddressString: jspb.Message.getFieldWithDefault(msg, 10, ""),
    contractAsJson: jspb.Message.getFieldWithDefault(msg, 11, ""),
    contractSignature: msg.getContractSignature_asB64(),
    accountAgeWitnessNonce: msg.getAccountAgeWitnessNonce_asB64(),
    accountAgeWitnessSignature: msg.getAccountAgeWitnessSignature_asB64(),
    accountAgeWitness: (f = msg.getAccountAgeWitness()) && proto.io.haveno.protobuffer.AccountAgeWitness.toObject(includeInstance, f),
    currentDate: jspb.Message.getFieldWithDefault(msg, 21, 0),
    mediatedPayoutTxSignature: msg.getMediatedPayoutTxSignature_asB64(),
    paymentSentMessage: (f = msg.getPaymentSentMessage()) && proto.io.haveno.protobuffer.PaymentSentMessage.toObject(includeInstance, f),
    paymentReceivedMessage: (f = msg.getPaymentReceivedMessage()) && proto.io.haveno.protobuffer.PaymentReceivedMessage.toObject(includeInstance, f),
    disputeClosedMessage: (f = msg.getDisputeClosedMessage()) && proto.io.haveno.protobuffer.DisputeClosedMessage.toObject(includeInstance, f),
    reserveTxHash: jspb.Message.getFieldWithDefault(msg, 26, ""),
    reserveTxHex: jspb.Message.getFieldWithDefault(msg, 27, ""),
    reserveTxKey: jspb.Message.getFieldWithDefault(msg, 28, ""),
    reserveTxKeyImagesList: (f = jspb.Message.getRepeatedField(msg, 29)) == null ? undefined : f,
    preparedMultisigHex: jspb.Message.getFieldWithDefault(msg, 30, ""),
    madeMultisigHex: jspb.Message.getFieldWithDefault(msg, 31, ""),
    exchangedMultisigHex: jspb.Message.getFieldWithDefault(msg, 32, ""),
    updatedMultisigHex: jspb.Message.getFieldWithDefault(msg, 33, ""),
    depositsConfirmedMessageAcked: jspb.Message.getBooleanFieldWithDefault(msg, 34, false),
    depositTxHash: jspb.Message.getFieldWithDefault(msg, 35, ""),
    depositTxHex: jspb.Message.getFieldWithDefault(msg, 36, ""),
    depositTxKey: jspb.Message.getFieldWithDefault(msg, 37, ""),
    depositTxFee: jspb.Message.getFieldWithDefault(msg, 38, 0),
    securityDeposit: jspb.Message.getFieldWithDefault(msg, 39, 0),
    unsignedPayoutTxHex: jspb.Message.getFieldWithDefault(msg, 40, ""),
    payoutTxFee: jspb.Message.getFieldWithDefault(msg, 41, 0),
    payoutAmount: jspb.Message.getFieldWithDefault(msg, 42, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TradePeer}
 */
proto.io.haveno.protobuffer.TradePeer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TradePeer;
  return proto.io.haveno.protobuffer.TradePeer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TradePeer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TradePeer}
 */
proto.io.haveno.protobuffer.TradePeer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setNodeAddress(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PubKeyRing;
      reader.readMessage(value,proto.io.haveno.protobuffer.PubKeyRing.deserializeBinaryFromReader);
      msg.setPubKeyRing(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentAccountId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethodId(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentAccountPayloadHash(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedPaymentAccountPayload(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentAccountKey(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.PaymentAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader);
      msg.setPaymentAccountPayload(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayoutAddressString(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAsJson(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContractSignature(value);
      break;
    case 18:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountAgeWitnessNonce(value);
      break;
    case 19:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountAgeWitnessSignature(value);
      break;
    case 20:
      var value = new proto.io.haveno.protobuffer.AccountAgeWitness;
      reader.readMessage(value,proto.io.haveno.protobuffer.AccountAgeWitness.deserializeBinaryFromReader);
      msg.setAccountAgeWitness(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentDate(value);
      break;
    case 22:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMediatedPayoutTxSignature(value);
      break;
    case 23:
      var value = new proto.io.haveno.protobuffer.PaymentSentMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentSentMessage.deserializeBinaryFromReader);
      msg.setPaymentSentMessage(value);
      break;
    case 24:
      var value = new proto.io.haveno.protobuffer.PaymentReceivedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentReceivedMessage.deserializeBinaryFromReader);
      msg.setPaymentReceivedMessage(value);
      break;
    case 25:
      var value = new proto.io.haveno.protobuffer.DisputeClosedMessage;
      reader.readMessage(value,proto.io.haveno.protobuffer.DisputeClosedMessage.deserializeBinaryFromReader);
      msg.setDisputeClosedMessage(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHash(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxHex(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setReserveTxKey(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.addReserveTxKeyImages(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreparedMultisigHex(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setMadeMultisigHex(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangedMultisigHex(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedMultisigHex(value);
      break;
    case 34:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDepositsConfirmedMessageAcked(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxHash(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxHex(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepositTxKey(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDepositTxFee(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSecurityDeposit(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnsignedPayoutTxHex(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPayoutTxFee(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPayoutAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TradePeer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TradePeer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradePeer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getPubKeyRing();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PubKeyRing.serializeBinaryToWriter
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentAccountId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPaymentMethodId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaymentAccountPayloadHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getEncryptedPaymentAccountPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getPaymentAccountKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getPaymentAccountPayload();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter
    );
  }
  f = message.getPayoutAddressString();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getContractAsJson();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getContractSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getAccountAgeWitnessNonce_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      18,
      f
    );
  }
  f = message.getAccountAgeWitnessSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      19,
      f
    );
  }
  f = message.getAccountAgeWitness();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.io.haveno.protobuffer.AccountAgeWitness.serializeBinaryToWriter
    );
  }
  f = message.getCurrentDate();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
  f = message.getMediatedPayoutTxSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      22,
      f
    );
  }
  f = message.getPaymentSentMessage();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.io.haveno.protobuffer.PaymentSentMessage.serializeBinaryToWriter
    );
  }
  f = message.getPaymentReceivedMessage();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.io.haveno.protobuffer.PaymentReceivedMessage.serializeBinaryToWriter
    );
  }
  f = message.getDisputeClosedMessage();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.io.haveno.protobuffer.DisputeClosedMessage.serializeBinaryToWriter
    );
  }
  f = message.getReserveTxHash();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getReserveTxHex();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getReserveTxKey();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getReserveTxKeyImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      29,
      f
    );
  }
  f = message.getPreparedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getMadeMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getExchangedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getUpdatedMultisigHex();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getDepositsConfirmedMessageAcked();
  if (f) {
    writer.writeBool(
      34,
      f
    );
  }
  f = message.getDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getDepositTxHex();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getDepositTxKey();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getDepositTxFee();
  if (f !== 0) {
    writer.writeInt64(
      38,
      f
    );
  }
  f = message.getSecurityDeposit();
  if (f !== 0) {
    writer.writeInt64(
      39,
      f
    );
  }
  f = message.getUnsignedPayoutTxHex();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getPayoutTxFee();
  if (f !== 0) {
    writer.writeInt64(
      41,
      f
    );
  }
  f = message.getPayoutAmount();
  if (f !== 0) {
    writer.writeInt64(
      42,
      f
    );
  }
};


/**
 * optional NodeAddress node_address = 1;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearNodeAddress = function() {
  return this.setNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasNodeAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PubKeyRing pub_key_ring = 2;
 * @return {?proto.io.haveno.protobuffer.PubKeyRing}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPubKeyRing = function() {
  return /** @type{?proto.io.haveno.protobuffer.PubKeyRing} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PubKeyRing, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.PubKeyRing|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setPubKeyRing = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearPubKeyRing = function() {
  return this.setPubKeyRing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasPubKeyRing = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string account_id = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string payment_account_id = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string payment_method_id = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentMethodId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentMethodId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes payment_account_payload_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountPayloadHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_account_payload_hash = 6;
 * This is a type-conversion wrapper around `getPaymentAccountPayloadHash()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountPayloadHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentAccountPayloadHash()));
};


/**
 * optional bytes payment_account_payload_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentAccountPayloadHash()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountPayloadHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentAccountPayloadHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentAccountPayloadHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes encrypted_payment_account_payload = 7;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getEncryptedPaymentAccountPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes encrypted_payment_account_payload = 7;
 * This is a type-conversion wrapper around `getEncryptedPaymentAccountPayload()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getEncryptedPaymentAccountPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedPaymentAccountPayload()));
};


/**
 * optional bytes encrypted_payment_account_payload = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedPaymentAccountPayload()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getEncryptedPaymentAccountPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedPaymentAccountPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setEncryptedPaymentAccountPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bytes payment_account_key = 8;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes payment_account_key = 8;
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentAccountKey()));
};


/**
 * optional bytes payment_account_key = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentAccountKey()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentAccountKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentAccountKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};


/**
 * optional PaymentAccountPayload payment_account_payload = 9;
 * @return {?proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountPayload, 9));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentAccountPayload = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearPaymentAccountPayload = function() {
  return this.setPaymentAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasPaymentAccountPayload = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string payout_address_string = 10;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPayoutAddressString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPayoutAddressString = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string contract_as_json = 11;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getContractAsJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setContractAsJson = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bytes contract_signature = 12;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getContractSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes contract_signature = 12;
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getContractSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContractSignature()));
};


/**
 * optional bytes contract_signature = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getContractSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContractSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setContractSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional bytes account_age_witness_nonce = 18;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessNonce = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * optional bytes account_age_witness_nonce = 18;
 * This is a type-conversion wrapper around `getAccountAgeWitnessNonce()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessNonce_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountAgeWitnessNonce()));
};


/**
 * optional bytes account_age_witness_nonce = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountAgeWitnessNonce()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessNonce_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountAgeWitnessNonce()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setAccountAgeWitnessNonce = function(value) {
  return jspb.Message.setProto3BytesField(this, 18, value);
};


/**
 * optional bytes account_age_witness_signature = 19;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * optional bytes account_age_witness_signature = 19;
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountAgeWitnessSignature()));
};


/**
 * optional bytes account_age_witness_signature = 19;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountAgeWitnessSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitnessSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountAgeWitnessSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setAccountAgeWitnessSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 19, value);
};


/**
 * optional AccountAgeWitness account_age_witness = 20;
 * @return {?proto.io.haveno.protobuffer.AccountAgeWitness}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getAccountAgeWitness = function() {
  return /** @type{?proto.io.haveno.protobuffer.AccountAgeWitness} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.AccountAgeWitness, 20));
};


/**
 * @param {?proto.io.haveno.protobuffer.AccountAgeWitness|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setAccountAgeWitness = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearAccountAgeWitness = function() {
  return this.setAccountAgeWitness(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasAccountAgeWitness = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional int64 current_date = 21;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getCurrentDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setCurrentDate = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bytes mediated_payout_tx_signature = 22;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getMediatedPayoutTxSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * optional bytes mediated_payout_tx_signature = 22;
 * This is a type-conversion wrapper around `getMediatedPayoutTxSignature()`
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getMediatedPayoutTxSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMediatedPayoutTxSignature()));
};


/**
 * optional bytes mediated_payout_tx_signature = 22;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMediatedPayoutTxSignature()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getMediatedPayoutTxSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMediatedPayoutTxSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setMediatedPayoutTxSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 22, value);
};


/**
 * optional PaymentSentMessage payment_sent_message = 23;
 * @return {?proto.io.haveno.protobuffer.PaymentSentMessage}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentSentMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentSentMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentSentMessage, 23));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentSentMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentSentMessage = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearPaymentSentMessage = function() {
  return this.setPaymentSentMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasPaymentSentMessage = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional PaymentReceivedMessage payment_received_message = 24;
 * @return {?proto.io.haveno.protobuffer.PaymentReceivedMessage}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPaymentReceivedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentReceivedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentReceivedMessage, 24));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentReceivedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setPaymentReceivedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearPaymentReceivedMessage = function() {
  return this.setPaymentReceivedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasPaymentReceivedMessage = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional DisputeClosedMessage dispute_closed_message = 25;
 * @return {?proto.io.haveno.protobuffer.DisputeClosedMessage}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDisputeClosedMessage = function() {
  return /** @type{?proto.io.haveno.protobuffer.DisputeClosedMessage} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.DisputeClosedMessage, 25));
};


/**
 * @param {?proto.io.haveno.protobuffer.DisputeClosedMessage|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
*/
proto.io.haveno.protobuffer.TradePeer.prototype.setDisputeClosedMessage = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearDisputeClosedMessage = function() {
  return this.setDisputeClosedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.hasDisputeClosedMessage = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string reserve_tx_hash = 26;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getReserveTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setReserveTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string reserve_tx_hex = 27;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getReserveTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setReserveTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string reserve_tx_key = 28;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getReserveTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setReserveTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * repeated string reserve_tx_key_images = 29;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getReserveTxKeyImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 29));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setReserveTxKeyImagesList = function(value) {
  return jspb.Message.setField(this, 29, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.addReserveTxKeyImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 29, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.clearReserveTxKeyImagesList = function() {
  return this.setReserveTxKeyImagesList([]);
};


/**
 * optional string prepared_multisig_hex = 30;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPreparedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPreparedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string made_multisig_hex = 31;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getMadeMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setMadeMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string exchanged_multisig_hex = 32;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getExchangedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setExchangedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string updated_multisig_hex = 33;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getUpdatedMultisigHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setUpdatedMultisigHex = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional bool deposits_confirmed_message_acked = 34;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDepositsConfirmedMessageAcked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 34, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setDepositsConfirmedMessageAcked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 34, value);
};


/**
 * optional string deposit_tx_hash = 35;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string deposit_tx_hex = 36;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDepositTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setDepositTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string deposit_tx_key = 37;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDepositTxKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setDepositTxKey = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional int64 deposit_tx_fee = 38;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getDepositTxFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setDepositTxFee = function(value) {
  return jspb.Message.setProto3IntField(this, 38, value);
};


/**
 * optional int64 security_deposit = 39;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getSecurityDeposit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setSecurityDeposit = function(value) {
  return jspb.Message.setProto3IntField(this, 39, value);
};


/**
 * optional string unsigned_payout_tx_hex = 40;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getUnsignedPayoutTxHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setUnsignedPayoutTxHex = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional int64 payout_tx_fee = 41;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPayoutTxFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPayoutTxFee = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};


/**
 * optional int64 payout_amount = 42;
 * @return {number}
 */
proto.io.haveno.protobuffer.TradePeer.prototype.getPayoutAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.TradePeer} returns this
 */
proto.io.haveno.protobuffer.TradePeer.prototype.setPayoutAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 42, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.EncryptedConnection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.EncryptedConnection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.EncryptedConnection.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    encryptedPassword: msg.getEncryptedPassword_asB64(),
    encryptionSalt: msg.getEncryptionSalt_asB64(),
    priority: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection}
 */
proto.io.haveno.protobuffer.EncryptedConnection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.EncryptedConnection;
  return proto.io.haveno.protobuffer.EncryptedConnection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.EncryptedConnection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection}
 */
proto.io.haveno.protobuffer.EncryptedConnection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedPassword(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptionSalt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.EncryptedConnection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.EncryptedConnection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.EncryptedConnection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEncryptedPassword_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getEncryptionSalt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes encrypted_password = 3;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptedPassword = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes encrypted_password = 3;
 * This is a type-conversion wrapper around `getEncryptedPassword()`
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptedPassword_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedPassword()));
};


/**
 * optional bytes encrypted_password = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedPassword()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptedPassword_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedPassword()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.setEncryptedPassword = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes encryption_salt = 4;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptionSalt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encryption_salt = 4;
 * This is a type-conversion wrapper around `getEncryptionSalt()`
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptionSalt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptionSalt()));
};


/**
 * optional bytes encryption_salt = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptionSalt()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getEncryptionSalt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptionSalt()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.setEncryptionSalt = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int32 priority = 5;
 * @return {number}
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnection.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.EncryptedConnectionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.EncryptedConnectionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    salt: msg.getSalt_asB64(),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.io.haveno.protobuffer.EncryptedConnection.toObject, includeInstance),
    currentConnectionUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    refreshPeriod: jspb.Message.getFieldWithDefault(msg, 4, 0),
    autoSwitch: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.EncryptedConnectionList;
  return proto.io.haveno.protobuffer.EncryptedConnectionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.EncryptedConnectionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSalt(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.EncryptedConnection;
      reader.readMessage(value,proto.io.haveno.protobuffer.EncryptedConnection.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentConnectionUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRefreshPeriod(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoSwitch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.EncryptedConnectionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.EncryptedConnectionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.haveno.protobuffer.EncryptedConnection.serializeBinaryToWriter
    );
  }
  f = message.getCurrentConnectionUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRefreshPeriod();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAutoSwitch();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bytes salt = 1;
 * @return {!(string|Uint8Array)}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getSalt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes salt = 1;
 * This is a type-conversion wrapper around `getSalt()`
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getSalt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSalt()));
};


/**
 * optional bytes salt = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSalt()`
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getSalt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSalt()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.setSalt = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated EncryptedConnection items = 2;
 * @return {!Array<!proto.io.haveno.protobuffer.EncryptedConnection>}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.EncryptedConnection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.EncryptedConnection, 2));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.EncryptedConnection>} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
*/
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.EncryptedConnection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.EncryptedConnection}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.haveno.protobuffer.EncryptedConnection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional string current_connection_url = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getCurrentConnectionUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.setCurrentConnectionUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 refresh_period = 4;
 * @return {number}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getRefreshPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.setRefreshPeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool auto_switch = 5;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.getAutoSwitch = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.EncryptedConnectionList} returns this
 */
proto.io.haveno.protobuffer.EncryptedConnectionList.prototype.setAutoSwitch = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.ArbitrationDisputeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.ArbitrationDisputeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    disputeList: jspb.Message.toObjectList(msg.getDisputeList(),
    proto.io.haveno.protobuffer.Dispute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.ArbitrationDisputeList}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.ArbitrationDisputeList;
  return proto.io.haveno.protobuffer.ArbitrationDisputeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.ArbitrationDisputeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.ArbitrationDisputeList}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Dispute;
      reader.readMessage(value,proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader);
      msg.addDispute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.ArbitrationDisputeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.ArbitrationDisputeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisputeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Dispute dispute = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.Dispute>}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.getDisputeList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Dispute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Dispute, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Dispute>} value
 * @return {!proto.io.haveno.protobuffer.ArbitrationDisputeList} returns this
*/
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.setDisputeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Dispute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.addDispute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.Dispute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.ArbitrationDisputeList} returns this
 */
proto.io.haveno.protobuffer.ArbitrationDisputeList.prototype.clearDisputeList = function() {
  return this.setDisputeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.MediationDisputeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MediationDisputeList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MediationDisputeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MediationDisputeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediationDisputeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    disputeList: jspb.Message.toObjectList(msg.getDisputeList(),
    proto.io.haveno.protobuffer.Dispute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MediationDisputeList}
 */
proto.io.haveno.protobuffer.MediationDisputeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MediationDisputeList;
  return proto.io.haveno.protobuffer.MediationDisputeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MediationDisputeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MediationDisputeList}
 */
proto.io.haveno.protobuffer.MediationDisputeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Dispute;
      reader.readMessage(value,proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader);
      msg.addDispute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MediationDisputeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MediationDisputeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MediationDisputeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MediationDisputeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisputeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Dispute dispute = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.Dispute>}
 */
proto.io.haveno.protobuffer.MediationDisputeList.prototype.getDisputeList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Dispute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Dispute, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Dispute>} value
 * @return {!proto.io.haveno.protobuffer.MediationDisputeList} returns this
*/
proto.io.haveno.protobuffer.MediationDisputeList.prototype.setDisputeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Dispute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.MediationDisputeList.prototype.addDispute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.Dispute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.MediationDisputeList} returns this
 */
proto.io.haveno.protobuffer.MediationDisputeList.prototype.clearDisputeList = function() {
  return this.setDisputeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.RefundDisputeList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.RefundDisputeList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.RefundDisputeList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.RefundDisputeList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefundDisputeList.toObject = function(includeInstance, msg) {
  var f, obj = {
    disputeList: jspb.Message.toObjectList(msg.getDisputeList(),
    proto.io.haveno.protobuffer.Dispute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.RefundDisputeList}
 */
proto.io.haveno.protobuffer.RefundDisputeList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.RefundDisputeList;
  return proto.io.haveno.protobuffer.RefundDisputeList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.RefundDisputeList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.RefundDisputeList}
 */
proto.io.haveno.protobuffer.RefundDisputeList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.Dispute;
      reader.readMessage(value,proto.io.haveno.protobuffer.Dispute.deserializeBinaryFromReader);
      msg.addDispute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.RefundDisputeList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.RefundDisputeList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.RefundDisputeList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.RefundDisputeList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisputeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.haveno.protobuffer.Dispute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Dispute dispute = 1;
 * @return {!Array<!proto.io.haveno.protobuffer.Dispute>}
 */
proto.io.haveno.protobuffer.RefundDisputeList.prototype.getDisputeList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Dispute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Dispute, 1));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Dispute>} value
 * @return {!proto.io.haveno.protobuffer.RefundDisputeList} returns this
*/
proto.io.haveno.protobuffer.RefundDisputeList.prototype.setDisputeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Dispute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Dispute}
 */
proto.io.haveno.protobuffer.RefundDisputeList.prototype.addDispute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.haveno.protobuffer.Dispute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.RefundDisputeList} returns this
 */
proto.io.haveno.protobuffer.RefundDisputeList.prototype.clearDisputeList = function() {
  return this.setDisputeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PreferencesPayload.repeatedFields_ = [3,4,27,31,52];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PreferencesPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PreferencesPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PreferencesPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    userLanguage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userCountry: (f = msg.getUserCountry()) && proto.io.haveno.protobuffer.Country.toObject(includeInstance, f),
    traditionalCurrenciesList: jspb.Message.toObjectList(msg.getTraditionalCurrenciesList(),
    proto.io.haveno.protobuffer.TradeCurrency.toObject, includeInstance),
    cryptoCurrenciesList: jspb.Message.toObjectList(msg.getCryptoCurrenciesList(),
    proto.io.haveno.protobuffer.TradeCurrency.toObject, includeInstance),
    blockChainExplorerMainNet: (f = msg.getBlockChainExplorerMainNet()) && proto.io.haveno.protobuffer.BlockChainExplorer.toObject(includeInstance, f),
    blockChainExplorerTestNet: (f = msg.getBlockChainExplorerTestNet()) && proto.io.haveno.protobuffer.BlockChainExplorer.toObject(includeInstance, f),
    backupDirectory: jspb.Message.getFieldWithDefault(msg, 7, ""),
    autoSelectArbitrators: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    dontShowAgainMapMap: (f = msg.getDontShowAgainMapMap()) ? f.toObject(includeInstance, undefined) : [],
    tacAccepted: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    useTorForXmrOrdinal: jspb.Message.getFieldWithDefault(msg, 11, 0),
    showOwnOffersInOfferBook: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    preferredTradeCurrency: (f = msg.getPreferredTradeCurrency()) && proto.io.haveno.protobuffer.TradeCurrency.toObject(includeInstance, f),
    withdrawalTxFeeInVbytes: jspb.Message.getFieldWithDefault(msg, 14, 0),
    useCustomWithdrawalTxFee: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    maxPriceDistanceInPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    offerBookChartScreenCurrencyCode: jspb.Message.getFieldWithDefault(msg, 17, ""),
    tradeChartsScreenCurrencyCode: jspb.Message.getFieldWithDefault(msg, 18, ""),
    buyScreenCurrencyCode: jspb.Message.getFieldWithDefault(msg, 19, ""),
    sellScreenCurrencyCode: jspb.Message.getFieldWithDefault(msg, 20, ""),
    tradeStatisticsTickUnitIndex: jspb.Message.getFieldWithDefault(msg, 21, 0),
    resyncSpvRequested: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    sortMarketCurrenciesNumerically: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    usePercentageBasedPrice: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    peerTagMapMap: (f = msg.getPeerTagMapMap()) ? f.toObject(includeInstance, undefined) : [],
    moneroNodes: jspb.Message.getFieldWithDefault(msg, 26, ""),
    ignoreTradersListList: (f = jspb.Message.getRepeatedField(msg, 27)) == null ? undefined : f,
    directoryChooserPath: jspb.Message.getFieldWithDefault(msg, 28, ""),
    useAnimations: jspb.Message.getBooleanFieldWithDefault(msg, 29, false),
    selectedpaymentAccountForCreateoffer: (f = msg.getSelectedpaymentAccountForCreateoffer()) && proto.io.haveno.protobuffer.PaymentAccount.toObject(includeInstance, f),
    bridgeAddressesList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    bridgeOptionOrdinal: jspb.Message.getFieldWithDefault(msg, 32, 0),
    torTransportOrdinal: jspb.Message.getFieldWithDefault(msg, 33, 0),
    customBridges: jspb.Message.getFieldWithDefault(msg, 34, ""),
    moneroNodesOptionOrdinal: jspb.Message.getFieldWithDefault(msg, 35, 0),
    referralId: jspb.Message.getFieldWithDefault(msg, 36, ""),
    phoneKeyAndToken: jspb.Message.getFieldWithDefault(msg, 37, ""),
    useSoundForMobileNotifications: jspb.Message.getBooleanFieldWithDefault(msg, 38, false),
    useTradeNotifications: jspb.Message.getBooleanFieldWithDefault(msg, 39, false),
    useMarketNotifications: jspb.Message.getBooleanFieldWithDefault(msg, 40, false),
    usePriceNotifications: jspb.Message.getBooleanFieldWithDefault(msg, 41, false),
    useStandbyMode: jspb.Message.getBooleanFieldWithDefault(msg, 42, false),
    rpcUser: jspb.Message.getFieldWithDefault(msg, 43, ""),
    rpcPw: jspb.Message.getFieldWithDefault(msg, 44, ""),
    takeOfferSelectedPaymentAccountId: jspb.Message.getFieldWithDefault(msg, 45, ""),
    buyerSecurityDepositAsPercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 46, 0.0),
    ignoreDustThreshold: jspb.Message.getFieldWithDefault(msg, 47, 0),
    buyerSecurityDepositAsPercentForCrypto: jspb.Message.getFloatingPointFieldWithDefault(msg, 48, 0.0),
    blockNotifyPort: jspb.Message.getFieldWithDefault(msg, 49, 0),
    cssTheme: jspb.Message.getFieldWithDefault(msg, 50, 0),
    tacAcceptedV120: jspb.Message.getBooleanFieldWithDefault(msg, 51, false),
    autoConfirmSettingsList: jspb.Message.toObjectList(msg.getAutoConfirmSettingsList(),
    proto.io.haveno.protobuffer.AutoConfirmSettings.toObject, includeInstance),
    bsqAverageTrimThreshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 53, 0.0),
    hideNonAccountPaymentMethods: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    showOffersMatchingMyAccounts: jspb.Message.getBooleanFieldWithDefault(msg, 55, false),
    denyApiTaker: jspb.Message.getBooleanFieldWithDefault(msg, 56, false),
    notifyOnPreRelease: jspb.Message.getBooleanFieldWithDefault(msg, 57, false),
    xmrNodeSettings: (f = msg.getXmrNodeSettings()) && proto.io.haveno.protobuffer.XmrNodeSettings.toObject(includeInstance, f),
    clearDataAfterDays: jspb.Message.getFieldWithDefault(msg, 59, 0),
    buyScreenCryptoCurrencyCode: jspb.Message.getFieldWithDefault(msg, 60, ""),
    sellScreenCryptoCurrencyCode: jspb.Message.getFieldWithDefault(msg, 61, ""),
    splitOfferOutput: jspb.Message.getBooleanFieldWithDefault(msg, 62, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload}
 */
proto.io.haveno.protobuffer.PreferencesPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PreferencesPayload;
  return proto.io.haveno.protobuffer.PreferencesPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PreferencesPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload}
 */
proto.io.haveno.protobuffer.PreferencesPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserLanguage(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.Country;
      reader.readMessage(value,proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader);
      msg.setUserCountry(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.addTraditionalCurrencies(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.addCryptoCurrencies(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.BlockChainExplorer;
      reader.readMessage(value,proto.io.haveno.protobuffer.BlockChainExplorer.deserializeBinaryFromReader);
      msg.setBlockChainExplorerMainNet(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.BlockChainExplorer;
      reader.readMessage(value,proto.io.haveno.protobuffer.BlockChainExplorer.deserializeBinaryFromReader);
      msg.setBlockChainExplorerTestNet(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackupDirectory(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoSelectArbitrators(value);
      break;
    case 9:
      var value = msg.getDontShowAgainMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBool, null, "", false);
         });
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTacAccepted(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUseTorForXmrOrdinal(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowOwnOffersInOfferBook(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.setPreferredTradeCurrency(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setWithdrawalTxFeeInVbytes(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseCustomWithdrawalTxFee(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxPriceDistanceInPercent(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferBookChartScreenCurrencyCode(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTradeChartsScreenCurrencyCode(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyScreenCurrencyCode(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellScreenCurrencyCode(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTradeStatisticsTickUnitIndex(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResyncSpvRequested(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSortMarketCurrenciesNumerically(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePercentageBasedPrice(value);
      break;
    case 25:
      var value = msg.getPeerTagMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoneroNodes(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.addIgnoreTradersList(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectoryChooserPath(value);
      break;
    case 29:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseAnimations(value);
      break;
    case 30:
      var value = new proto.io.haveno.protobuffer.PaymentAccount;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader);
      msg.setSelectedpaymentAccountForCreateoffer(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addBridgeAddresses(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBridgeOptionOrdinal(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTorTransportOrdinal(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomBridges(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMoneroNodesOptionOrdinal(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferralId(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneKeyAndToken(value);
      break;
    case 38:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseSoundForMobileNotifications(value);
      break;
    case 39:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseTradeNotifications(value);
      break;
    case 40:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseMarketNotifications(value);
      break;
    case 41:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsePriceNotifications(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseStandbyMode(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setRpcUser(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setRpcPw(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setTakeOfferSelectedPaymentAccountId(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBuyerSecurityDepositAsPercent(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIgnoreDustThreshold(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBuyerSecurityDepositAsPercentForCrypto(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockNotifyPort(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCssTheme(value);
      break;
    case 51:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTacAcceptedV120(value);
      break;
    case 52:
      var value = new proto.io.haveno.protobuffer.AutoConfirmSettings;
      reader.readMessage(value,proto.io.haveno.protobuffer.AutoConfirmSettings.deserializeBinaryFromReader);
      msg.addAutoConfirmSettings(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBsqAverageTrimThreshold(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHideNonAccountPaymentMethods(value);
      break;
    case 55:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowOffersMatchingMyAccounts(value);
      break;
    case 56:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDenyApiTaker(value);
      break;
    case 57:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNotifyOnPreRelease(value);
      break;
    case 58:
      var value = new proto.io.haveno.protobuffer.XmrNodeSettings;
      reader.readMessage(value,proto.io.haveno.protobuffer.XmrNodeSettings.deserializeBinaryFromReader);
      msg.setXmrNodeSettings(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClearDataAfterDays(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyScreenCryptoCurrencyCode(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellScreenCryptoCurrencyCode(value);
      break;
    case 62:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSplitOfferOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PreferencesPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PreferencesPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PreferencesPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserCountry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.Country.serializeBinaryToWriter
    );
  }
  f = message.getTraditionalCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getCryptoCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getBlockChainExplorerMainNet();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.BlockChainExplorer.serializeBinaryToWriter
    );
  }
  f = message.getBlockChainExplorerTestNet();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.BlockChainExplorer.serializeBinaryToWriter
    );
  }
  f = message.getBackupDirectory();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAutoSelectArbitrators();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDontShowAgainMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBool);
  }
  f = message.getTacAccepted();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getUseTorForXmrOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getShowOwnOffersInOfferBook();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getPreferredTradeCurrency();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getWithdrawalTxFeeInVbytes();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getUseCustomWithdrawalTxFee();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getMaxPriceDistanceInPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getOfferBookChartScreenCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTradeChartsScreenCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getBuyScreenCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getSellScreenCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getTradeStatisticsTickUnitIndex();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getResyncSpvRequested();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getSortMarketCurrenciesNumerically();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getUsePercentageBasedPrice();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getPeerTagMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(25, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMoneroNodes();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getIgnoreTradersListList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      27,
      f
    );
  }
  f = message.getDirectoryChooserPath();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getUseAnimations();
  if (f) {
    writer.writeBool(
      29,
      f
    );
  }
  f = message.getSelectedpaymentAccountForCreateoffer();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter
    );
  }
  f = message.getBridgeAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
  f = message.getBridgeOptionOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getTorTransportOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getCustomBridges();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getMoneroNodesOptionOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      35,
      f
    );
  }
  f = message.getReferralId();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getPhoneKeyAndToken();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getUseSoundForMobileNotifications();
  if (f) {
    writer.writeBool(
      38,
      f
    );
  }
  f = message.getUseTradeNotifications();
  if (f) {
    writer.writeBool(
      39,
      f
    );
  }
  f = message.getUseMarketNotifications();
  if (f) {
    writer.writeBool(
      40,
      f
    );
  }
  f = message.getUsePriceNotifications();
  if (f) {
    writer.writeBool(
      41,
      f
    );
  }
  f = message.getUseStandbyMode();
  if (f) {
    writer.writeBool(
      42,
      f
    );
  }
  f = message.getRpcUser();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getRpcPw();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getTakeOfferSelectedPaymentAccountId();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getBuyerSecurityDepositAsPercent();
  if (f !== 0.0) {
    writer.writeDouble(
      46,
      f
    );
  }
  f = message.getIgnoreDustThreshold();
  if (f !== 0) {
    writer.writeInt32(
      47,
      f
    );
  }
  f = message.getBuyerSecurityDepositAsPercentForCrypto();
  if (f !== 0.0) {
    writer.writeDouble(
      48,
      f
    );
  }
  f = message.getBlockNotifyPort();
  if (f !== 0) {
    writer.writeInt32(
      49,
      f
    );
  }
  f = message.getCssTheme();
  if (f !== 0) {
    writer.writeInt32(
      50,
      f
    );
  }
  f = message.getTacAcceptedV120();
  if (f) {
    writer.writeBool(
      51,
      f
    );
  }
  f = message.getAutoConfirmSettingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      52,
      f,
      proto.io.haveno.protobuffer.AutoConfirmSettings.serializeBinaryToWriter
    );
  }
  f = message.getBsqAverageTrimThreshold();
  if (f !== 0.0) {
    writer.writeDouble(
      53,
      f
    );
  }
  f = message.getHideNonAccountPaymentMethods();
  if (f) {
    writer.writeBool(
      54,
      f
    );
  }
  f = message.getShowOffersMatchingMyAccounts();
  if (f) {
    writer.writeBool(
      55,
      f
    );
  }
  f = message.getDenyApiTaker();
  if (f) {
    writer.writeBool(
      56,
      f
    );
  }
  f = message.getNotifyOnPreRelease();
  if (f) {
    writer.writeBool(
      57,
      f
    );
  }
  f = message.getXmrNodeSettings();
  if (f != null) {
    writer.writeMessage(
      58,
      f,
      proto.io.haveno.protobuffer.XmrNodeSettings.serializeBinaryToWriter
    );
  }
  f = message.getClearDataAfterDays();
  if (f !== 0) {
    writer.writeInt32(
      59,
      f
    );
  }
  f = message.getBuyScreenCryptoCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getSellScreenCryptoCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
  f = message.getSplitOfferOutput();
  if (f) {
    writer.writeBool(
      62,
      f
    );
  }
};


/**
 * optional string user_language = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUserLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUserLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Country user_country = 2;
 * @return {?proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUserCountry = function() {
  return /** @type{?proto.io.haveno.protobuffer.Country} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Country, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.Country|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUserCountry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearUserCountry = function() {
  return this.setUserCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasUserCountry = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TradeCurrency traditional_currencies = 3;
 * @return {!Array<!proto.io.haveno.protobuffer.TradeCurrency>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTraditionalCurrenciesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.TradeCurrency>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 3));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.TradeCurrency>} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTraditionalCurrenciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.TradeCurrency=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.addTraditionalCurrencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.haveno.protobuffer.TradeCurrency, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearTraditionalCurrenciesList = function() {
  return this.setTraditionalCurrenciesList([]);
};


/**
 * repeated TradeCurrency crypto_currencies = 4;
 * @return {!Array<!proto.io.haveno.protobuffer.TradeCurrency>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getCryptoCurrenciesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.TradeCurrency>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 4));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.TradeCurrency>} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setCryptoCurrenciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.TradeCurrency=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.addCryptoCurrencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.io.haveno.protobuffer.TradeCurrency, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearCryptoCurrenciesList = function() {
  return this.setCryptoCurrenciesList([]);
};


/**
 * optional BlockChainExplorer block_chain_explorer_main_net = 5;
 * @return {?proto.io.haveno.protobuffer.BlockChainExplorer}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBlockChainExplorerMainNet = function() {
  return /** @type{?proto.io.haveno.protobuffer.BlockChainExplorer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BlockChainExplorer, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.BlockChainExplorer|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBlockChainExplorerMainNet = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearBlockChainExplorerMainNet = function() {
  return this.setBlockChainExplorerMainNet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasBlockChainExplorerMainNet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BlockChainExplorer block_chain_explorer_test_net = 6;
 * @return {?proto.io.haveno.protobuffer.BlockChainExplorer}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBlockChainExplorerTestNet = function() {
  return /** @type{?proto.io.haveno.protobuffer.BlockChainExplorer} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.BlockChainExplorer, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.BlockChainExplorer|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBlockChainExplorerTestNet = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearBlockChainExplorerTestNet = function() {
  return this.setBlockChainExplorerTestNet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasBlockChainExplorerTestNet = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string backup_directory = 7;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBackupDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBackupDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool auto_select_arbitrators = 8;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getAutoSelectArbitrators = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setAutoSelectArbitrators = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * map<string, bool> dont_show_again_map = 9;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,boolean>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getDontShowAgainMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,boolean>} */ (
      jspb.Message.getMapField(this, 9, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearDontShowAgainMapMap = function() {
  this.getDontShowAgainMapMap().clear();
  return this;};


/**
 * optional bool tac_accepted = 10;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTacAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTacAccepted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional int32 use_tor_for_xmr_ordinal = 11;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseTorForXmrOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseTorForXmrOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool show_own_offers_in_offer_book = 12;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getShowOwnOffersInOfferBook = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setShowOwnOffersInOfferBook = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional TradeCurrency preferred_trade_currency = 13;
 * @return {?proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getPreferredTradeCurrency = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradeCurrency} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 13));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradeCurrency|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setPreferredTradeCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearPreferredTradeCurrency = function() {
  return this.setPreferredTradeCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasPreferredTradeCurrency = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 withdrawal_tx_fee_in_vbytes = 14;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getWithdrawalTxFeeInVbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setWithdrawalTxFeeInVbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bool use_custom_withdrawal_tx_fee = 15;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseCustomWithdrawalTxFee = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseCustomWithdrawalTxFee = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional double max_price_distance_in_percent = 16;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getMaxPriceDistanceInPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setMaxPriceDistanceInPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional string offer_book_chart_screen_currency_code = 17;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getOfferBookChartScreenCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setOfferBookChartScreenCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string trade_charts_screen_currency_code = 18;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTradeChartsScreenCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTradeChartsScreenCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string buy_screen_currency_code = 19;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBuyScreenCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBuyScreenCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string sell_screen_currency_code = 20;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getSellScreenCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setSellScreenCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int32 trade_statistics_tick_unit_index = 21;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTradeStatisticsTickUnitIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTradeStatisticsTickUnitIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional bool resync_spv_requested = 22;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getResyncSpvRequested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setResyncSpvRequested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool sort_market_currencies_numerically = 23;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getSortMarketCurrenciesNumerically = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setSortMarketCurrenciesNumerically = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool use_percentage_based_price = 24;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUsePercentageBasedPrice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUsePercentageBasedPrice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * map<string, string> peer_tag_map = 25;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getPeerTagMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 25, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearPeerTagMapMap = function() {
  this.getPeerTagMapMap().clear();
  return this;};


/**
 * optional string monero_nodes = 26;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getMoneroNodes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setMoneroNodes = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * repeated string ignore_traders_list = 27;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getIgnoreTradersListList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 27));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setIgnoreTradersListList = function(value) {
  return jspb.Message.setField(this, 27, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.addIgnoreTradersList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 27, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearIgnoreTradersListList = function() {
  return this.setIgnoreTradersListList([]);
};


/**
 * optional string directory_chooser_path = 28;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getDirectoryChooserPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setDirectoryChooserPath = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional bool use_animations = 29;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseAnimations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 29, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseAnimations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 29, value);
};


/**
 * optional PaymentAccount selectedPayment_account_for_createOffer = 30;
 * @return {?proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getSelectedpaymentAccountForCreateoffer = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccount} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccount, 30));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccount|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setSelectedpaymentAccountForCreateoffer = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearSelectedpaymentAccountForCreateoffer = function() {
  return this.setSelectedpaymentAccountForCreateoffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasSelectedpaymentAccountForCreateoffer = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * repeated string bridge_addresses = 31;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBridgeAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBridgeAddressesList = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.addBridgeAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearBridgeAddressesList = function() {
  return this.setBridgeAddressesList([]);
};


/**
 * optional int32 bridge_option_ordinal = 32;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBridgeOptionOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBridgeOptionOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional int32 tor_transport_ordinal = 33;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTorTransportOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTorTransportOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional string custom_bridges = 34;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getCustomBridges = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setCustomBridges = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional int32 monero_nodes_option_ordinal = 35;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getMoneroNodesOptionOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setMoneroNodesOptionOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 35, value);
};


/**
 * optional string referral_id = 36;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getReferralId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setReferralId = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string phone_key_and_token = 37;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getPhoneKeyAndToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setPhoneKeyAndToken = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional bool use_sound_for_mobile_notifications = 38;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseSoundForMobileNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 38, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseSoundForMobileNotifications = function(value) {
  return jspb.Message.setProto3BooleanField(this, 38, value);
};


/**
 * optional bool use_trade_notifications = 39;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseTradeNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 39, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseTradeNotifications = function(value) {
  return jspb.Message.setProto3BooleanField(this, 39, value);
};


/**
 * optional bool use_market_notifications = 40;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseMarketNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 40, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseMarketNotifications = function(value) {
  return jspb.Message.setProto3BooleanField(this, 40, value);
};


/**
 * optional bool use_price_notifications = 41;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUsePriceNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 41, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUsePriceNotifications = function(value) {
  return jspb.Message.setProto3BooleanField(this, 41, value);
};


/**
 * optional bool use_standby_mode = 42;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getUseStandbyMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setUseStandbyMode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 42, value);
};


/**
 * optional string rpc_user = 43;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getRpcUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setRpcUser = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string rpc_pw = 44;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getRpcPw = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setRpcPw = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string take_offer_selected_payment_account_id = 45;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTakeOfferSelectedPaymentAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTakeOfferSelectedPaymentAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional double buyer_security_deposit_as_percent = 46;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBuyerSecurityDepositAsPercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 46, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBuyerSecurityDepositAsPercent = function(value) {
  return jspb.Message.setProto3FloatField(this, 46, value);
};


/**
 * optional int32 ignore_dust_threshold = 47;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getIgnoreDustThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setIgnoreDustThreshold = function(value) {
  return jspb.Message.setProto3IntField(this, 47, value);
};


/**
 * optional double buyer_security_deposit_as_percent_for_crypto = 48;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBuyerSecurityDepositAsPercentForCrypto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 48, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBuyerSecurityDepositAsPercentForCrypto = function(value) {
  return jspb.Message.setProto3FloatField(this, 48, value);
};


/**
 * optional int32 block_notify_port = 49;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBlockNotifyPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBlockNotifyPort = function(value) {
  return jspb.Message.setProto3IntField(this, 49, value);
};


/**
 * optional int32 css_theme = 50;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getCssTheme = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setCssTheme = function(value) {
  return jspb.Message.setProto3IntField(this, 50, value);
};


/**
 * optional bool tac_accepted_v120 = 51;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getTacAcceptedV120 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 51, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setTacAcceptedV120 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 51, value);
};


/**
 * repeated AutoConfirmSettings auto_confirm_settings = 52;
 * @return {!Array<!proto.io.haveno.protobuffer.AutoConfirmSettings>}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getAutoConfirmSettingsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.AutoConfirmSettings>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.AutoConfirmSettings, 52));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.AutoConfirmSettings>} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setAutoConfirmSettingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 52, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.AutoConfirmSettings=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.addAutoConfirmSettings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 52, opt_value, proto.io.haveno.protobuffer.AutoConfirmSettings, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearAutoConfirmSettingsList = function() {
  return this.setAutoConfirmSettingsList([]);
};


/**
 * optional double bsq_average_trim_threshold = 53;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBsqAverageTrimThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 53, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBsqAverageTrimThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 53, value);
};


/**
 * optional bool hide_non_account_payment_methods = 54;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getHideNonAccountPaymentMethods = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setHideNonAccountPaymentMethods = function(value) {
  return jspb.Message.setProto3BooleanField(this, 54, value);
};


/**
 * optional bool show_offers_matching_my_accounts = 55;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getShowOffersMatchingMyAccounts = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 55, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setShowOffersMatchingMyAccounts = function(value) {
  return jspb.Message.setProto3BooleanField(this, 55, value);
};


/**
 * optional bool deny_api_taker = 56;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getDenyApiTaker = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 56, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setDenyApiTaker = function(value) {
  return jspb.Message.setProto3BooleanField(this, 56, value);
};


/**
 * optional bool notify_on_pre_release = 57;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getNotifyOnPreRelease = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 57, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setNotifyOnPreRelease = function(value) {
  return jspb.Message.setProto3BooleanField(this, 57, value);
};


/**
 * optional XmrNodeSettings xmr_node_settings = 58;
 * @return {?proto.io.haveno.protobuffer.XmrNodeSettings}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getXmrNodeSettings = function() {
  return /** @type{?proto.io.haveno.protobuffer.XmrNodeSettings} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.XmrNodeSettings, 58));
};


/**
 * @param {?proto.io.haveno.protobuffer.XmrNodeSettings|undefined} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
*/
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setXmrNodeSettings = function(value) {
  return jspb.Message.setWrapperField(this, 58, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.clearXmrNodeSettings = function() {
  return this.setXmrNodeSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.hasXmrNodeSettings = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional int32 clear_data_after_days = 59;
 * @return {number}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getClearDataAfterDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 59, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setClearDataAfterDays = function(value) {
  return jspb.Message.setProto3IntField(this, 59, value);
};


/**
 * optional string buy_screen_crypto_currency_code = 60;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getBuyScreenCryptoCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setBuyScreenCryptoCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional string sell_screen_crypto_currency_code = 61;
 * @return {string}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getSellScreenCryptoCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setSellScreenCryptoCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};


/**
 * optional bool split_offer_output = 62;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.getSplitOfferOutput = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 62, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.PreferencesPayload} returns this
 */
proto.io.haveno.protobuffer.PreferencesPayload.prototype.setSplitOfferOutput = function(value) {
  return jspb.Message.setProto3BooleanField(this, 62, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.AutoConfirmSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.AutoConfirmSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    requiredConfirmations: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tradeLimit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    serviceAddressesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    currencyCode: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.AutoConfirmSettings;
  return proto.io.haveno.protobuffer.AutoConfirmSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.AutoConfirmSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredConfirmations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTradeLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addServiceAddresses(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.AutoConfirmSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.AutoConfirmSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRequiredConfirmations();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTradeLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getServiceAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 required_confirmations = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.getRequiredConfirmations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.setRequiredConfirmations = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 trade_limit = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.getTradeLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.setTradeLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string service_addresses = 4;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.getServiceAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.setServiceAddressesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.addServiceAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.clearServiceAddressesList = function() {
  return this.setServiceAddressesList([]);
};


/**
 * optional string currency_code = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.AutoConfirmSettings} returns this
 */
proto.io.haveno.protobuffer.AutoConfirmSettings.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.XmrNodeSettings.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.XmrNodeSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.XmrNodeSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrNodeSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockchainPath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bootstrapUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startupFlagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.XmrNodeSettings;
  return proto.io.haveno.protobuffer.XmrNodeSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.XmrNodeSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockchainPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBootstrapUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addStartupFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.XmrNodeSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.XmrNodeSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.XmrNodeSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockchainPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBootstrapUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartupFlagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string blockchain_path = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.getBlockchainPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings} returns this
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.setBlockchainPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bootstrap_url = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.getBootstrapUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings} returns this
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.setBootstrapUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string startup_flags = 3;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.getStartupFlagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings} returns this
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.setStartupFlagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings} returns this
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.addStartupFlags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.XmrNodeSettings} returns this
 */
proto.io.haveno.protobuffer.XmrNodeSettings.prototype.clearStartupFlagsList = function() {
  return this.setStartupFlagsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.UserPayload.repeatedFields_ = [2,4,8,9,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.UserPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.UserPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UserPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentAccountsList: jspb.Message.toObjectList(msg.getPaymentAccountsList(),
    proto.io.haveno.protobuffer.PaymentAccount.toObject, includeInstance),
    currentPaymentAccount: (f = msg.getCurrentPaymentAccount()) && proto.io.haveno.protobuffer.PaymentAccount.toObject(includeInstance, f),
    acceptedLanguageLocaleCodesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    developersAlert: (f = msg.getDevelopersAlert()) && proto.io.haveno.protobuffer.Alert.toObject(includeInstance, f),
    displayedAlert: (f = msg.getDisplayedAlert()) && proto.io.haveno.protobuffer.Alert.toObject(includeInstance, f),
    developersFilter: (f = msg.getDevelopersFilter()) && proto.io.haveno.protobuffer.Filter.toObject(includeInstance, f),
    acceptedArbitratorsList: jspb.Message.toObjectList(msg.getAcceptedArbitratorsList(),
    proto.io.haveno.protobuffer.Arbitrator.toObject, includeInstance),
    acceptedMediatorsList: jspb.Message.toObjectList(msg.getAcceptedMediatorsList(),
    proto.io.haveno.protobuffer.Mediator.toObject, includeInstance),
    registeredArbitrator: (f = msg.getRegisteredArbitrator()) && proto.io.haveno.protobuffer.Arbitrator.toObject(includeInstance, f),
    registeredMediator: (f = msg.getRegisteredMediator()) && proto.io.haveno.protobuffer.Mediator.toObject(includeInstance, f),
    priceAlertFilter: (f = msg.getPriceAlertFilter()) && proto.io.haveno.protobuffer.PriceAlertFilter.toObject(includeInstance, f),
    marketAlertFiltersList: jspb.Message.toObjectList(msg.getMarketAlertFiltersList(),
    proto.io.haveno.protobuffer.MarketAlertFilter.toObject, includeInstance),
    acceptedRefundAgentsList: jspb.Message.toObjectList(msg.getAcceptedRefundAgentsList(),
    proto.io.haveno.protobuffer.RefundAgent.toObject, includeInstance),
    registeredRefundAgent: (f = msg.getRegisteredRefundAgent()) && proto.io.haveno.protobuffer.RefundAgent.toObject(includeInstance, f),
    cookieMap: (f = msg.getCookieMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.UserPayload}
 */
proto.io.haveno.protobuffer.UserPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.UserPayload;
  return proto.io.haveno.protobuffer.UserPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.UserPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.UserPayload}
 */
proto.io.haveno.protobuffer.UserPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PaymentAccount;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader);
      msg.addPaymentAccounts(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PaymentAccount;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader);
      msg.setCurrentPaymentAccount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAcceptedLanguageLocaleCodes(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.Alert;
      reader.readMessage(value,proto.io.haveno.protobuffer.Alert.deserializeBinaryFromReader);
      msg.setDevelopersAlert(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.Alert;
      reader.readMessage(value,proto.io.haveno.protobuffer.Alert.deserializeBinaryFromReader);
      msg.setDisplayedAlert(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.Filter;
      reader.readMessage(value,proto.io.haveno.protobuffer.Filter.deserializeBinaryFromReader);
      msg.setDevelopersFilter(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.Arbitrator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Arbitrator.deserializeBinaryFromReader);
      msg.addAcceptedArbitrators(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.Mediator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Mediator.deserializeBinaryFromReader);
      msg.addAcceptedMediators(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.Arbitrator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Arbitrator.deserializeBinaryFromReader);
      msg.setRegisteredArbitrator(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.Mediator;
      reader.readMessage(value,proto.io.haveno.protobuffer.Mediator.deserializeBinaryFromReader);
      msg.setRegisteredMediator(value);
      break;
    case 12:
      var value = new proto.io.haveno.protobuffer.PriceAlertFilter;
      reader.readMessage(value,proto.io.haveno.protobuffer.PriceAlertFilter.deserializeBinaryFromReader);
      msg.setPriceAlertFilter(value);
      break;
    case 13:
      var value = new proto.io.haveno.protobuffer.MarketAlertFilter;
      reader.readMessage(value,proto.io.haveno.protobuffer.MarketAlertFilter.deserializeBinaryFromReader);
      msg.addMarketAlertFilters(value);
      break;
    case 14:
      var value = new proto.io.haveno.protobuffer.RefundAgent;
      reader.readMessage(value,proto.io.haveno.protobuffer.RefundAgent.deserializeBinaryFromReader);
      msg.addAcceptedRefundAgents(value);
      break;
    case 15:
      var value = new proto.io.haveno.protobuffer.RefundAgent;
      reader.readMessage(value,proto.io.haveno.protobuffer.RefundAgent.deserializeBinaryFromReader);
      msg.setRegisteredRefundAgent(value);
      break;
    case 16:
      var value = msg.getCookieMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.UserPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.UserPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.UserPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter
    );
  }
  f = message.getCurrentPaymentAccount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedLanguageLocaleCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getDevelopersAlert();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.haveno.protobuffer.Alert.serializeBinaryToWriter
    );
  }
  f = message.getDisplayedAlert();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.Alert.serializeBinaryToWriter
    );
  }
  f = message.getDevelopersFilter();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.Filter.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedArbitratorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.io.haveno.protobuffer.Arbitrator.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedMediatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.io.haveno.protobuffer.Mediator.serializeBinaryToWriter
    );
  }
  f = message.getRegisteredArbitrator();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.io.haveno.protobuffer.Arbitrator.serializeBinaryToWriter
    );
  }
  f = message.getRegisteredMediator();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.io.haveno.protobuffer.Mediator.serializeBinaryToWriter
    );
  }
  f = message.getPriceAlertFilter();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.io.haveno.protobuffer.PriceAlertFilter.serializeBinaryToWriter
    );
  }
  f = message.getMarketAlertFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.io.haveno.protobuffer.MarketAlertFilter.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedRefundAgentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.io.haveno.protobuffer.RefundAgent.serializeBinaryToWriter
    );
  }
  f = message.getRegisteredRefundAgent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.io.haveno.protobuffer.RefundAgent.serializeBinaryToWriter
    );
  }
  f = message.getCookieMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string account_id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated PaymentAccount payment_accounts = 2;
 * @return {!Array<!proto.io.haveno.protobuffer.PaymentAccount>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getPaymentAccountsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.PaymentAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.PaymentAccount, 2));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.PaymentAccount>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setPaymentAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addPaymentAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.haveno.protobuffer.PaymentAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearPaymentAccountsList = function() {
  return this.setPaymentAccountsList([]);
};


/**
 * optional PaymentAccount current_payment_account = 3;
 * @return {?proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getCurrentPaymentAccount = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccount} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccount, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccount|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setCurrentPaymentAccount = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearCurrentPaymentAccount = function() {
  return this.setCurrentPaymentAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasCurrentPaymentAccount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string accepted_language_locale_codes = 4;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getAcceptedLanguageLocaleCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.setAcceptedLanguageLocaleCodesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addAcceptedLanguageLocaleCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearAcceptedLanguageLocaleCodesList = function() {
  return this.setAcceptedLanguageLocaleCodesList([]);
};


/**
 * optional Alert developers_alert = 5;
 * @return {?proto.io.haveno.protobuffer.Alert}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getDevelopersAlert = function() {
  return /** @type{?proto.io.haveno.protobuffer.Alert} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Alert, 5));
};


/**
 * @param {?proto.io.haveno.protobuffer.Alert|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setDevelopersAlert = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearDevelopersAlert = function() {
  return this.setDevelopersAlert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasDevelopersAlert = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Alert displayed_alert = 6;
 * @return {?proto.io.haveno.protobuffer.Alert}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getDisplayedAlert = function() {
  return /** @type{?proto.io.haveno.protobuffer.Alert} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Alert, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.Alert|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setDisplayedAlert = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearDisplayedAlert = function() {
  return this.setDisplayedAlert(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasDisplayedAlert = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Filter developers_filter = 7;
 * @return {?proto.io.haveno.protobuffer.Filter}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getDevelopersFilter = function() {
  return /** @type{?proto.io.haveno.protobuffer.Filter} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Filter, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.Filter|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setDevelopersFilter = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearDevelopersFilter = function() {
  return this.setDevelopersFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasDevelopersFilter = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Arbitrator accepted_arbitrators = 8;
 * @return {!Array<!proto.io.haveno.protobuffer.Arbitrator>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getAcceptedArbitratorsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Arbitrator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Arbitrator, 8));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Arbitrator>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setAcceptedArbitratorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Arbitrator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Arbitrator}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addAcceptedArbitrators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.io.haveno.protobuffer.Arbitrator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearAcceptedArbitratorsList = function() {
  return this.setAcceptedArbitratorsList([]);
};


/**
 * repeated Mediator accepted_mediators = 9;
 * @return {!Array<!proto.io.haveno.protobuffer.Mediator>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getAcceptedMediatorsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Mediator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Mediator, 9));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Mediator>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setAcceptedMediatorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Mediator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Mediator}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addAcceptedMediators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.io.haveno.protobuffer.Mediator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearAcceptedMediatorsList = function() {
  return this.setAcceptedMediatorsList([]);
};


/**
 * optional Arbitrator registered_arbitrator = 10;
 * @return {?proto.io.haveno.protobuffer.Arbitrator}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getRegisteredArbitrator = function() {
  return /** @type{?proto.io.haveno.protobuffer.Arbitrator} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Arbitrator, 10));
};


/**
 * @param {?proto.io.haveno.protobuffer.Arbitrator|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setRegisteredArbitrator = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearRegisteredArbitrator = function() {
  return this.setRegisteredArbitrator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasRegisteredArbitrator = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Mediator registered_mediator = 11;
 * @return {?proto.io.haveno.protobuffer.Mediator}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getRegisteredMediator = function() {
  return /** @type{?proto.io.haveno.protobuffer.Mediator} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Mediator, 11));
};


/**
 * @param {?proto.io.haveno.protobuffer.Mediator|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setRegisteredMediator = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearRegisteredMediator = function() {
  return this.setRegisteredMediator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasRegisteredMediator = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PriceAlertFilter price_alert_filter = 12;
 * @return {?proto.io.haveno.protobuffer.PriceAlertFilter}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getPriceAlertFilter = function() {
  return /** @type{?proto.io.haveno.protobuffer.PriceAlertFilter} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PriceAlertFilter, 12));
};


/**
 * @param {?proto.io.haveno.protobuffer.PriceAlertFilter|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setPriceAlertFilter = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearPriceAlertFilter = function() {
  return this.setPriceAlertFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasPriceAlertFilter = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated MarketAlertFilter market_alert_filters = 13;
 * @return {!Array<!proto.io.haveno.protobuffer.MarketAlertFilter>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getMarketAlertFiltersList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.MarketAlertFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.MarketAlertFilter, 13));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.MarketAlertFilter>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setMarketAlertFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.MarketAlertFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addMarketAlertFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.io.haveno.protobuffer.MarketAlertFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearMarketAlertFiltersList = function() {
  return this.setMarketAlertFiltersList([]);
};


/**
 * repeated RefundAgent accepted_refund_agents = 14;
 * @return {!Array<!proto.io.haveno.protobuffer.RefundAgent>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getAcceptedRefundAgentsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.RefundAgent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.RefundAgent, 14));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.RefundAgent>} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setAcceptedRefundAgentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.RefundAgent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.RefundAgent}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.addAcceptedRefundAgents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.io.haveno.protobuffer.RefundAgent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearAcceptedRefundAgentsList = function() {
  return this.setAcceptedRefundAgentsList([]);
};


/**
 * optional RefundAgent registered_refund_agent = 15;
 * @return {?proto.io.haveno.protobuffer.RefundAgent}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getRegisteredRefundAgent = function() {
  return /** @type{?proto.io.haveno.protobuffer.RefundAgent} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.RefundAgent, 15));
};


/**
 * @param {?proto.io.haveno.protobuffer.RefundAgent|undefined} value
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
*/
proto.io.haveno.protobuffer.UserPayload.prototype.setRegisteredRefundAgent = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearRegisteredRefundAgent = function() {
  return this.setRegisteredRefundAgent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.hasRegisteredRefundAgent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * map<string, string> cookie = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.haveno.protobuffer.UserPayload.prototype.getCookieMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.haveno.protobuffer.UserPayload} returns this
 */
proto.io.haveno.protobuffer.UserPayload.prototype.clearCookieMap = function() {
  this.getCookieMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.BlockChainExplorer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.BlockChainExplorer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BlockChainExplorer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    txUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.BlockChainExplorer}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.BlockChainExplorer;
  return proto.io.haveno.protobuffer.BlockChainExplorer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.BlockChainExplorer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.BlockChainExplorer}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.BlockChainExplorer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.BlockChainExplorer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.BlockChainExplorer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTxUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BlockChainExplorer} returns this
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tx_url = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.getTxUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.BlockChainExplorer} returns this
 */
proto.io.haveno.protobuffer.BlockChainExplorer.prototype.setTxUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentAccount.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    creationDate: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    paymentMethod: (f = msg.getPaymentMethod()) && proto.io.haveno.protobuffer.PaymentMethod.toObject(includeInstance, f),
    accountName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tradeCurrenciesList: jspb.Message.toObjectList(msg.getTradeCurrenciesList(),
    proto.io.haveno.protobuffer.TradeCurrency.toObject, includeInstance),
    selectedTradeCurrency: (f = msg.getSelectedTradeCurrency()) && proto.io.haveno.protobuffer.TradeCurrency.toObject(includeInstance, f),
    paymentAccountPayload: (f = msg.getPaymentAccountPayload()) && proto.io.haveno.protobuffer.PaymentAccountPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.PaymentAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccount;
  return proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setCreationDate(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.PaymentMethod;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentMethod.deserializeBinaryFromReader);
      msg.setPaymentMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 5:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.addTradeCurrencies(value);
      break;
    case 6:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.setSelectedTradeCurrency(value);
      break;
    case 7:
      var value = new proto.io.haveno.protobuffer.PaymentAccountPayload;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountPayload.deserializeBinaryFromReader);
      msg.setPaymentAccountPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreationDate();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getPaymentMethod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.PaymentMethod.serializeBinaryToWriter
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTradeCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getSelectedTradeCurrency();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAccountPayload();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.haveno.protobuffer.PaymentAccountPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 creation_date = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getCreationDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.setCreationDate = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional PaymentMethod payment_method = 3;
 * @return {?proto.io.haveno.protobuffer.PaymentMethod}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getPaymentMethod = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentMethod} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentMethod, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentMethod|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
*/
proto.io.haveno.protobuffer.PaymentAccount.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.clearPaymentMethod = function() {
  return this.setPaymentMethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.hasPaymentMethod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string account_name = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated TradeCurrency trade_currencies = 5;
 * @return {!Array<!proto.io.haveno.protobuffer.TradeCurrency>}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getTradeCurrenciesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.TradeCurrency>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 5));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.TradeCurrency>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
*/
proto.io.haveno.protobuffer.PaymentAccount.prototype.setTradeCurrenciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.TradeCurrency=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.addTradeCurrencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.io.haveno.protobuffer.TradeCurrency, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.clearTradeCurrenciesList = function() {
  return this.setTradeCurrenciesList([]);
};


/**
 * optional TradeCurrency selected_trade_currency = 6;
 * @return {?proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getSelectedTradeCurrency = function() {
  return /** @type{?proto.io.haveno.protobuffer.TradeCurrency} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 6));
};


/**
 * @param {?proto.io.haveno.protobuffer.TradeCurrency|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
*/
proto.io.haveno.protobuffer.PaymentAccount.prototype.setSelectedTradeCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.clearSelectedTradeCurrency = function() {
  return this.setSelectedTradeCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.hasSelectedTradeCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional PaymentAccountPayload payment_account_payload = 7;
 * @return {?proto.io.haveno.protobuffer.PaymentAccountPayload}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.getPaymentAccountPayload = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccountPayload} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountPayload, 7));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccountPayload|undefined} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
*/
proto.io.haveno.protobuffer.PaymentAccount.prototype.setPaymentAccountPayload = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.PaymentAccount} returns this
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.clearPaymentAccountPayload = function() {
  return this.setPaymentAccountPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.PaymentAccount.prototype.hasPaymentAccountPayload = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentMethod.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentMethod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentMethod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentMethod.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    maxTradePeriod: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    maxTradeLimit: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    supportedAssetCodesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentMethod}
 */
proto.io.haveno.protobuffer.PaymentMethod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentMethod;
  return proto.io.haveno.protobuffer.PaymentMethod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentMethod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentMethod}
 */
proto.io.haveno.protobuffer.PaymentMethod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setMaxTradePeriod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setMaxTradeLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSupportedAssetCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentMethod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentMethod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentMethod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxTradePeriod();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getMaxTradeLimit();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getSupportedAssetCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 max_trade_period = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.getMaxTradePeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.setMaxTradePeriod = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional int64 max_trade_limit = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.getMaxTradeLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.setMaxTradeLimit = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * repeated string supported_asset_codes = 4;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.getSupportedAssetCodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.setSupportedAssetCodesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.addSupportedAssetCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentMethod} returns this
 */
proto.io.haveno.protobuffer.PaymentMethod.prototype.clearSupportedAssetCodesList = function() {
  return this.setSupportedAssetCodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyCode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Currency}
 */
proto.io.haveno.protobuffer.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Currency;
  return proto.io.haveno.protobuffer.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Currency}
 */
proto.io.haveno.protobuffer.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencyCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string currency_code = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Currency.prototype.getCurrencyCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Currency} returns this
 */
proto.io.haveno.protobuffer.Currency.prototype.setCurrencyCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.haveno.protobuffer.TradeCurrency.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.TradeCurrency.MessageCase = {
  MESSAGE_NOT_SET: 0,
  CRYPTO_CURRENCY: 3,
  TRADITIONAL_CURRENCY: 4
};

/**
 * @return {proto.io.haveno.protobuffer.TradeCurrency.MessageCase}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.getMessageCase = function() {
  return /** @type {proto.io.haveno.protobuffer.TradeCurrency.MessageCase} */(jspb.Message.computeOneofCase(this, proto.io.haveno.protobuffer.TradeCurrency.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TradeCurrency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TradeCurrency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeCurrency.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cryptoCurrency: (f = msg.getCryptoCurrency()) && proto.io.haveno.protobuffer.CryptoCurrency.toObject(includeInstance, f),
    traditionalCurrency: (f = msg.getTraditionalCurrency()) && proto.io.haveno.protobuffer.TraditionalCurrency.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.TradeCurrency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TradeCurrency;
  return proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TradeCurrency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.CryptoCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.CryptoCurrency.deserializeBinaryFromReader);
      msg.setCryptoCurrency(value);
      break;
    case 4:
      var value = new proto.io.haveno.protobuffer.TraditionalCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TraditionalCurrency.deserializeBinaryFromReader);
      msg.setTraditionalCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TradeCurrency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCryptoCurrency();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.CryptoCurrency.serializeBinaryToWriter
    );
  }
  f = message.getTraditionalCurrency();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.haveno.protobuffer.TraditionalCurrency.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CryptoCurrency crypto_currency = 3;
 * @return {?proto.io.haveno.protobuffer.CryptoCurrency}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.getCryptoCurrency = function() {
  return /** @type{?proto.io.haveno.protobuffer.CryptoCurrency} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.CryptoCurrency, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.CryptoCurrency|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
*/
proto.io.haveno.protobuffer.TradeCurrency.prototype.setCryptoCurrency = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.haveno.protobuffer.TradeCurrency.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.clearCryptoCurrency = function() {
  return this.setCryptoCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.hasCryptoCurrency = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TraditionalCurrency traditional_currency = 4;
 * @return {?proto.io.haveno.protobuffer.TraditionalCurrency}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.getTraditionalCurrency = function() {
  return /** @type{?proto.io.haveno.protobuffer.TraditionalCurrency} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.TraditionalCurrency, 4));
};


/**
 * @param {?proto.io.haveno.protobuffer.TraditionalCurrency|undefined} value
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
*/
proto.io.haveno.protobuffer.TradeCurrency.prototype.setTraditionalCurrency = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.haveno.protobuffer.TradeCurrency.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.TradeCurrency} returns this
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.clearTraditionalCurrency = function() {
  return this.setTraditionalCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.TradeCurrency.prototype.hasTraditionalCurrency = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.CryptoCurrency.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.CryptoCurrency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.CryptoCurrency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CryptoCurrency.toObject = function(includeInstance, msg) {
  var f, obj = {
    isAsset: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.CryptoCurrency}
 */
proto.io.haveno.protobuffer.CryptoCurrency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.CryptoCurrency;
  return proto.io.haveno.protobuffer.CryptoCurrency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.CryptoCurrency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.CryptoCurrency}
 */
proto.io.haveno.protobuffer.CryptoCurrency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAsset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.CryptoCurrency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.CryptoCurrency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.CryptoCurrency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.CryptoCurrency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsAsset();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_asset = 1;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.CryptoCurrency.prototype.getIsAsset = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.CryptoCurrency} returns this
 */
proto.io.haveno.protobuffer.CryptoCurrency.prototype.setIsAsset = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.TraditionalCurrency.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.TraditionalCurrency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.TraditionalCurrency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TraditionalCurrency.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.TraditionalCurrency}
 */
proto.io.haveno.protobuffer.TraditionalCurrency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.TraditionalCurrency;
  return proto.io.haveno.protobuffer.TraditionalCurrency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.TraditionalCurrency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.TraditionalCurrency}
 */
proto.io.haveno.protobuffer.TraditionalCurrency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.TraditionalCurrency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.TraditionalCurrency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.TraditionalCurrency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.TraditionalCurrency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    region: (f = msg.getRegion()) && proto.io.haveno.protobuffer.Region.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Country;
  return proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.io.haveno.protobuffer.Region;
      reader.readMessage(value,proto.io.haveno.protobuffer.Region.deserializeBinaryFromReader);
      msg.setRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRegion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.haveno.protobuffer.Region.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Country.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Country} returns this
 */
proto.io.haveno.protobuffer.Country.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Country} returns this
 */
proto.io.haveno.protobuffer.Country.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Region region = 3;
 * @return {?proto.io.haveno.protobuffer.Region}
 */
proto.io.haveno.protobuffer.Country.prototype.getRegion = function() {
  return /** @type{?proto.io.haveno.protobuffer.Region} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.Region, 3));
};


/**
 * @param {?proto.io.haveno.protobuffer.Region|undefined} value
 * @return {!proto.io.haveno.protobuffer.Country} returns this
*/
proto.io.haveno.protobuffer.Country.prototype.setRegion = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.Country} returns this
 */
proto.io.haveno.protobuffer.Country.prototype.clearRegion = function() {
  return this.setRegion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.Country.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.Region.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.Region.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.Region} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Region.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.Region}
 */
proto.io.haveno.protobuffer.Region.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.Region;
  return proto.io.haveno.protobuffer.Region.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.Region} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.Region}
 */
proto.io.haveno.protobuffer.Region.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.Region.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.Region.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.Region} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.Region.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.Region.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Region} returns this
 */
proto.io.haveno.protobuffer.Region.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.Region.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.Region} returns this
 */
proto.io.haveno.protobuffer.Region.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PriceAlertFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PriceAlertFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PriceAlertFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    high: jspb.Message.getFieldWithDefault(msg, 2, 0),
    low: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PriceAlertFilter}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PriceAlertFilter;
  return proto.io.haveno.protobuffer.PriceAlertFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PriceAlertFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PriceAlertFilter}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHigh(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PriceAlertFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PriceAlertFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PriceAlertFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLow();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string currencyCode = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PriceAlertFilter} returns this
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 high = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PriceAlertFilter} returns this
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.setHigh = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 low = 3;
 * @return {number}
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PriceAlertFilter} returns this
 */
proto.io.haveno.protobuffer.PriceAlertFilter.prototype.setLow = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.MarketAlertFilter.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MarketAlertFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MarketAlertFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MarketAlertFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentAccount: (f = msg.getPaymentAccount()) && proto.io.haveno.protobuffer.PaymentAccount.toObject(includeInstance, f),
    triggerValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isBuyOffer: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    alertIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MarketAlertFilter;
  return proto.io.haveno.protobuffer.MarketAlertFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MarketAlertFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.haveno.protobuffer.PaymentAccount;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccount.deserializeBinaryFromReader);
      msg.setPaymentAccount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTriggerValue(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBuyOffer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addAlertIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MarketAlertFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MarketAlertFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MarketAlertFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.haveno.protobuffer.PaymentAccount.serializeBinaryToWriter
    );
  }
  f = message.getTriggerValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsBuyOffer();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAlertIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional PaymentAccount payment_account = 1;
 * @return {?proto.io.haveno.protobuffer.PaymentAccount}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.getPaymentAccount = function() {
  return /** @type{?proto.io.haveno.protobuffer.PaymentAccount} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.PaymentAccount, 1));
};


/**
 * @param {?proto.io.haveno.protobuffer.PaymentAccount|undefined} value
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
*/
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.setPaymentAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.clearPaymentAccount = function() {
  return this.setPaymentAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.hasPaymentAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 trigger_value = 2;
 * @return {number}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.getTriggerValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.setTriggerValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool is_buy_offer = 3;
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.getIsBuyOffer = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.setIsBuyOffer = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated string alert_ids = 4;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.getAlertIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.setAlertIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.addAlertIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.MarketAlertFilter} returns this
 */
proto.io.haveno.protobuffer.MarketAlertFilter.prototype.clearAlertIdsList = function() {
  return this.setAlertIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MockMailboxPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MockMailboxPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MockMailboxPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    senderNodeAddress: (f = msg.getSenderNodeAddress()) && proto.io.haveno.protobuffer.NodeAddress.toObject(includeInstance, f),
    uid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MockMailboxPayload;
  return proto.io.haveno.protobuffer.MockMailboxPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MockMailboxPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.NodeAddress;
      reader.readMessage(value,proto.io.haveno.protobuffer.NodeAddress.deserializeBinaryFromReader);
      msg.setSenderNodeAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MockMailboxPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MockMailboxPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MockMailboxPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSenderNodeAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.haveno.protobuffer.NodeAddress.serializeBinaryToWriter
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload} returns this
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NodeAddress sender_node_address = 2;
 * @return {?proto.io.haveno.protobuffer.NodeAddress}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.getSenderNodeAddress = function() {
  return /** @type{?proto.io.haveno.protobuffer.NodeAddress} */ (
    jspb.Message.getWrapperField(this, proto.io.haveno.protobuffer.NodeAddress, 2));
};


/**
 * @param {?proto.io.haveno.protobuffer.NodeAddress|undefined} value
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload} returns this
*/
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.setSenderNodeAddress = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload} returns this
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.clearSenderNodeAddress = function() {
  return this.setSenderNodeAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.hasSenderNodeAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string uid = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MockMailboxPayload} returns this
 */
proto.io.haveno.protobuffer.MockMailboxPayload.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.MockPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.MockPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.MockPayload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MockPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.MockPayload}
 */
proto.io.haveno.protobuffer.MockPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.MockPayload;
  return proto.io.haveno.protobuffer.MockPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.MockPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.MockPayload}
 */
proto.io.haveno.protobuffer.MockPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.MockPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.MockPayload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.MockPayload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.MockPayload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message_version = 1;
 * @return {string}
 */
proto.io.haveno.protobuffer.MockPayload.prototype.getMessageVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MockPayload} returns this
 */
proto.io.haveno.protobuffer.MockPayload.prototype.setMessageVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.io.haveno.protobuffer.MockPayload.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.MockPayload} returns this
 */
proto.io.haveno.protobuffer.MockPayload.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentAccountForm.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccountForm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccountForm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountForm.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.io.haveno.protobuffer.PaymentAccountFormField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccountForm;
  return proto.io.haveno.protobuffer.PaymentAccountForm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountForm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.haveno.protobuffer.PaymentAccountForm.FormId} */ (reader.readEnum());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.haveno.protobuffer.PaymentAccountFormField;
      reader.readMessage(value,proto.io.haveno.protobuffer.PaymentAccountFormField.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccountForm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountForm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountForm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.io.haveno.protobuffer.PaymentAccountFormField.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.FormId = {
  BLOCK_CHAINS: 0,
  REVOLUT: 1,
  SEPA: 2,
  SEPA_INSTANT: 3,
  TRANSFERWISE: 4,
  ZELLE: 5,
  SWIFT: 6,
  F2F: 7,
  STRIKE: 8,
  MONEY_GRAM: 9,
  FASTER_PAYMENTS: 10,
  UPHOLD: 11,
  PAXUM: 12,
  PAY_BY_MAIL: 13,
  CASH_AT_ATM: 14
};

/**
 * optional FormId id = 1;
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm.FormId}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.getId = function() {
  return /** @type {!proto.io.haveno.protobuffer.PaymentAccountForm.FormId} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccountForm.FormId} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.setId = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated PaymentAccountFormField fields = 2;
 * @return {!Array<!proto.io.haveno.protobuffer.PaymentAccountFormField>}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.PaymentAccountFormField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.PaymentAccountFormField, 2));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.PaymentAccountFormField>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField}
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.io.haveno.protobuffer.PaymentAccountFormField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountForm} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountForm.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.repeatedFields_ = [8,9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.toObject = function(opt_includeInstance) {
  return proto.io.haveno.protobuffer.PaymentAccountFormField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    component: jspb.Message.getFieldWithDefault(msg, 2, 0),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    value: jspb.Message.getFieldWithDefault(msg, 5, ""),
    minlength: jspb.Message.getFieldWithDefault(msg, 6, 0),
    maxlength: jspb.Message.getFieldWithDefault(msg, 7, 0),
    supportedCurrenciesList: jspb.Message.toObjectList(msg.getSupportedCurrenciesList(),
    proto.io.haveno.protobuffer.TradeCurrency.toObject, includeInstance),
    supportedCountriesList: jspb.Message.toObjectList(msg.getSupportedCountriesList(),
    proto.io.haveno.protobuffer.Country.toObject, includeInstance),
    supportedSepaEuroCountriesList: jspb.Message.toObjectList(msg.getSupportedSepaEuroCountriesList(),
    proto.io.haveno.protobuffer.Country.toObject, includeInstance),
    supportedSepaNonEuroCountriesList: jspb.Message.toObjectList(msg.getSupportedSepaNonEuroCountriesList(),
    proto.io.haveno.protobuffer.Country.toObject, includeInstance),
    requiredForCountriesList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.haveno.protobuffer.PaymentAccountFormField;
  return proto.io.haveno.protobuffer.PaymentAccountFormField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId} */ (reader.readEnum());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.io.haveno.protobuffer.PaymentAccountFormField.Component} */ (reader.readEnum());
      msg.setComponent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinlength(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxlength(value);
      break;
    case 8:
      var value = new proto.io.haveno.protobuffer.TradeCurrency;
      reader.readMessage(value,proto.io.haveno.protobuffer.TradeCurrency.deserializeBinaryFromReader);
      msg.addSupportedCurrencies(value);
      break;
    case 9:
      var value = new proto.io.haveno.protobuffer.Country;
      reader.readMessage(value,proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader);
      msg.addSupportedCountries(value);
      break;
    case 10:
      var value = new proto.io.haveno.protobuffer.Country;
      reader.readMessage(value,proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader);
      msg.addSupportedSepaEuroCountries(value);
      break;
    case 11:
      var value = new proto.io.haveno.protobuffer.Country;
      reader.readMessage(value,proto.io.haveno.protobuffer.Country.deserializeBinaryFromReader);
      msg.addSupportedSepaNonEuroCountries(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequiredForCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.haveno.protobuffer.PaymentAccountFormField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getComponent();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMinlength();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMaxlength();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSupportedCurrenciesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.io.haveno.protobuffer.TradeCurrency.serializeBinaryToWriter
    );
  }
  f = message.getSupportedCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.io.haveno.protobuffer.Country.serializeBinaryToWriter
    );
  }
  f = message.getSupportedSepaEuroCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.io.haveno.protobuffer.Country.serializeBinaryToWriter
    );
  }
  f = message.getSupportedSepaNonEuroCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.io.haveno.protobuffer.Country.serializeBinaryToWriter
    );
  }
  f = message.getRequiredForCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId = {
  ADDRESS: 0,
  ACCEPTED_COUNTRY_CODES: 1,
  ACCOUNT_ID: 2,
  ACCOUNT_NAME: 3,
  ACCOUNT_NR: 4,
  ACCOUNT_OWNER: 5,
  ACCOUNT_TYPE: 6,
  ANSWER: 7,
  BANK_ACCOUNT_NAME: 8,
  BANK_ACCOUNT_NUMBER: 9,
  BANK_ACCOUNT_TYPE: 10,
  BANK_ADDRESS: 11,
  BANK_BRANCH: 12,
  BANK_BRANCH_CODE: 13,
  BANK_BRANCH_NAME: 14,
  BANK_CODE: 15,
  BANK_COUNTRY_CODE: 16,
  BANK_ID: 17,
  BANK_NAME: 18,
  BANK_SWIFT_CODE: 19,
  BENEFICIARY_ACCOUNT_NR: 20,
  BENEFICIARY_ADDRESS: 21,
  BENEFICIARY_CITY: 22,
  BENEFICIARY_NAME: 23,
  BENEFICIARY_PHONE: 24,
  BIC: 25,
  BRANCH_ID: 26,
  CITY: 27,
  CONTACT: 28,
  COUNTRY: 29,
  EMAIL: 30,
  EMAIL_OR_MOBILE_NR: 31,
  EXTRA_INFO: 32,
  HOLDER_ADDRESS: 33,
  HOLDER_EMAIL: 34,
  HOLDER_NAME: 35,
  HOLDER_TAX_ID: 36,
  IBAN: 37,
  IFSC: 38,
  INTERMEDIARY_ADDRESS: 39,
  INTERMEDIARY_BRANCH: 40,
  INTERMEDIARY_COUNTRY_CODE: 41,
  INTERMEDIARY_NAME: 42,
  INTERMEDIARY_SWIFT_CODE: 43,
  MOBILE_NR: 44,
  NATIONAL_ACCOUNT_ID: 45,
  PAYID: 46,
  PIX_KEY: 47,
  POSTAL_ADDRESS: 48,
  PROMPT_PAY_ID: 49,
  QUESTION: 50,
  REQUIREMENTS: 51,
  SALT: 52,
  SORT_CODE: 53,
  SPECIAL_INSTRUCTIONS: 54,
  STATE: 55,
  TRADE_CURRENCIES: 56,
  USER_NAME: 57
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.Component = {
  TEXT: 0,
  TEXTAREA: 1,
  SELECT_ONE: 2,
  SELECT_MULTIPLE: 3
};

/**
 * optional FieldId id = 1;
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getId = function() {
  return /** @type {!proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField.FieldId} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setId = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Component component = 2;
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField.Component}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getComponent = function() {
  return /** @type {!proto.io.haveno.protobuffer.PaymentAccountFormField.Component} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.haveno.protobuffer.PaymentAccountFormField.Component} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setComponent = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string value = 5;
 * @return {string}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 minLength = 6;
 * @return {number}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getMinlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setMinlength = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 maxLength = 7;
 * @return {number}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getMaxlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setMaxlength = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated TradeCurrency supported_currencies = 8;
 * @return {!Array<!proto.io.haveno.protobuffer.TradeCurrency>}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getSupportedCurrenciesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.TradeCurrency>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.TradeCurrency, 8));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.TradeCurrency>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setSupportedCurrenciesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.TradeCurrency=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.TradeCurrency}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.addSupportedCurrencies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.io.haveno.protobuffer.TradeCurrency, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.clearSupportedCurrenciesList = function() {
  return this.setSupportedCurrenciesList([]);
};


/**
 * repeated Country supported_countries = 9;
 * @return {!Array<!proto.io.haveno.protobuffer.Country>}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getSupportedCountriesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Country, 9));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Country>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setSupportedCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.addSupportedCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.io.haveno.protobuffer.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.clearSupportedCountriesList = function() {
  return this.setSupportedCountriesList([]);
};


/**
 * repeated Country supported_sepa_euro_countries = 10;
 * @return {!Array<!proto.io.haveno.protobuffer.Country>}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getSupportedSepaEuroCountriesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Country, 10));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Country>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setSupportedSepaEuroCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.addSupportedSepaEuroCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.io.haveno.protobuffer.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.clearSupportedSepaEuroCountriesList = function() {
  return this.setSupportedSepaEuroCountriesList([]);
};


/**
 * repeated Country supported_sepa_non_euro_countries = 11;
 * @return {!Array<!proto.io.haveno.protobuffer.Country>}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getSupportedSepaNonEuroCountriesList = function() {
  return /** @type{!Array<!proto.io.haveno.protobuffer.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.haveno.protobuffer.Country, 11));
};


/**
 * @param {!Array<!proto.io.haveno.protobuffer.Country>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
*/
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setSupportedSepaNonEuroCountriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.io.haveno.protobuffer.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.Country}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.addSupportedSepaNonEuroCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.io.haveno.protobuffer.Country, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.clearSupportedSepaNonEuroCountriesList = function() {
  return this.setSupportedSepaNonEuroCountriesList([]);
};


/**
 * repeated string required_for_countries = 12;
 * @return {!Array<string>}
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.getRequiredForCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.setRequiredForCountriesList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.addRequiredForCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.haveno.protobuffer.PaymentAccountFormField} returns this
 */
proto.io.haveno.protobuffer.PaymentAccountFormField.prototype.clearRequiredForCountriesList = function() {
  return this.setRequiredForCountriesList([]);
};


/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.SupportType = {
  ARBITRATION: 0,
  MEDIATION: 1,
  TRADE: 2,
  REFUND: 3
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.OfferDirection = {
  OFFER_DIRECTION_UNDEFINED: 0,
  BUY: 1,
  SELL: 2
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.AvailabilityResult = {
  PB_ERROR: 0,
  UNKNOWN_FAILURE: 1,
  AVAILABLE: 2,
  OFFER_TAKEN: 3,
  PRICE_OUT_OF_TOLERANCE: 4,
  MARKET_PRICE_NOT_AVAILABLE: 5,
  NO_ARBITRATORS: 6,
  NO_MEDIATORS: 7,
  USER_IGNORED: 8,
  MISSING_MANDATORY_CAPABILITY: 9,
  NO_REFUND_AGENTS: 10,
  UNCONF_TX_LIMIT_HIT: 11,
  MAKER_DENIED_API_USER: 12,
  PRICE_CHECK_FAILED: 13,
  MAKER_DENIED_TAKER: 14
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.MediationResultState = {
  PB_ERROR_MEDIATION_RESULT: 0,
  UNDEFINED_MEDIATION_RESULT: 1,
  MEDIATION_RESULT_ACCEPTED: 2,
  MEDIATION_RESULT_REJECTED: 3,
  SIG_MSG_SENT: 4,
  SIG_MSG_ARRIVED: 5,
  SIG_MSG_IN_MAILBOX: 6,
  SIG_MSG_SEND_FAILED: 7,
  RECEIVED_SIG_MSG: 8,
  PAYOUT_TX_PUBLISHED: 9,
  PAYOUT_TX_PUBLISHED_MSG_SENT: 10,
  PAYOUT_TX_PUBLISHED_MSG_ARRIVED: 11,
  PAYOUT_TX_PUBLISHED_MSG_IN_MAILBOX: 12,
  PAYOUT_TX_PUBLISHED_MSG_SEND_FAILED: 13,
  RECEIVED_PAYOUT_TX_PUBLISHED_MSG: 14,
  PAYOUT_TX_SEEN_IN_NETWORK: 15
};

/**
 * @enum {number}
 */
proto.io.haveno.protobuffer.RefundResultState = {
  PB_ERROR_REFUND_RESULT: 0,
  UNDEFINED_REFUND_RESULT: 1
};

goog.object.extend(exports, proto.io.haveno.protobuffer);
